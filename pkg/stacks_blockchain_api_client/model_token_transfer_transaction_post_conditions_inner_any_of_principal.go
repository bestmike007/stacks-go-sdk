/*
Stacks Blockchain API

Welcome to the API reference overview for the [Stacks Blockchain API](https://docs.hiro.so/stacks-blockchain-api).        [Download Postman collection](https://hirosystems.github.io/stacks-blockchain-api/collection.json)

API version: v8.1.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stacks_blockchain_api_client

import (
	"encoding/json"
	"fmt"
)


// TokenTransferTransactionPostConditionsInnerAnyOfPrincipal struct for TokenTransferTransactionPostConditionsInnerAnyOfPrincipal
type TokenTransferTransactionPostConditionsInnerAnyOfPrincipal struct {
	TokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf *TokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf
	TokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf1 *TokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf1
	TokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf2 *TokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf2
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *TokenTransferTransactionPostConditionsInnerAnyOfPrincipal) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into TokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf
	err = json.Unmarshal(data, &dst.TokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf);
	if err == nil {
		jsonTokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf, _ := json.Marshal(dst.TokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf)
		if string(jsonTokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf) == "{}" { // empty struct
			dst.TokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf = nil
		} else {
			return nil // data stored in dst.TokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf, return on the first match
		}
	} else {
		dst.TokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf = nil
	}

	// try to unmarshal JSON data into TokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf1
	err = json.Unmarshal(data, &dst.TokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf1);
	if err == nil {
		jsonTokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf1, _ := json.Marshal(dst.TokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf1)
		if string(jsonTokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf1) == "{}" { // empty struct
			dst.TokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf1 = nil
		} else {
			return nil // data stored in dst.TokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf1, return on the first match
		}
	} else {
		dst.TokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf1 = nil
	}

	// try to unmarshal JSON data into TokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf2
	err = json.Unmarshal(data, &dst.TokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf2);
	if err == nil {
		jsonTokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf2, _ := json.Marshal(dst.TokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf2)
		if string(jsonTokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf2) == "{}" { // empty struct
			dst.TokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf2 = nil
		} else {
			return nil // data stored in dst.TokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf2, return on the first match
		}
	} else {
		dst.TokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf2 = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(TokenTransferTransactionPostConditionsInnerAnyOfPrincipal)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *TokenTransferTransactionPostConditionsInnerAnyOfPrincipal) MarshalJSON() ([]byte, error) {
	if src.TokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf != nil {
		return json.Marshal(&src.TokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf)
	}

	if src.TokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf1 != nil {
		return json.Marshal(&src.TokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf1)
	}

	if src.TokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf2 != nil {
		return json.Marshal(&src.TokenTransferTransactionPostConditionsInnerAnyOfPrincipalAnyOf2)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableTokenTransferTransactionPostConditionsInnerAnyOfPrincipal struct {
	value *TokenTransferTransactionPostConditionsInnerAnyOfPrincipal
	isSet bool
}

func (v NullableTokenTransferTransactionPostConditionsInnerAnyOfPrincipal) Get() *TokenTransferTransactionPostConditionsInnerAnyOfPrincipal {
	return v.value
}

func (v *NullableTokenTransferTransactionPostConditionsInnerAnyOfPrincipal) Set(val *TokenTransferTransactionPostConditionsInnerAnyOfPrincipal) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenTransferTransactionPostConditionsInnerAnyOfPrincipal) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenTransferTransactionPostConditionsInnerAnyOfPrincipal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenTransferTransactionPostConditionsInnerAnyOfPrincipal(val *TokenTransferTransactionPostConditionsInnerAnyOfPrincipal) *NullableTokenTransferTransactionPostConditionsInnerAnyOfPrincipal {
	return &NullableTokenTransferTransactionPostConditionsInnerAnyOfPrincipal{value: val, isSet: true}
}

func (v NullableTokenTransferTransactionPostConditionsInnerAnyOfPrincipal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenTransferTransactionPostConditionsInnerAnyOfPrincipal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


