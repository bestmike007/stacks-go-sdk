/*
Stacks Blockchain API

Welcome to the API reference overview for the [Stacks Blockchain API](https://docs.hiro.so/stacks-blockchain-api).        [Download Postman collection](https://hirosystems.github.io/stacks-blockchain-api/collection.json)

API version: v8.1.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stacks_blockchain_api_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the StxLockTransactionEventAllOfStxLockEvent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StxLockTransactionEventAllOfStxLockEvent{}

// StxLockTransactionEventAllOfStxLockEvent struct for StxLockTransactionEventAllOfStxLockEvent
type StxLockTransactionEventAllOfStxLockEvent struct {
	LockedAmount string `json:"locked_amount"`
	UnlockHeight int32 `json:"unlock_height"`
	LockedAddress string `json:"locked_address"`
}

type _StxLockTransactionEventAllOfStxLockEvent StxLockTransactionEventAllOfStxLockEvent

// NewStxLockTransactionEventAllOfStxLockEvent instantiates a new StxLockTransactionEventAllOfStxLockEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStxLockTransactionEventAllOfStxLockEvent(lockedAmount string, unlockHeight int32, lockedAddress string) *StxLockTransactionEventAllOfStxLockEvent {
	this := StxLockTransactionEventAllOfStxLockEvent{}
	this.LockedAmount = lockedAmount
	this.UnlockHeight = unlockHeight
	this.LockedAddress = lockedAddress
	return &this
}

// NewStxLockTransactionEventAllOfStxLockEventWithDefaults instantiates a new StxLockTransactionEventAllOfStxLockEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStxLockTransactionEventAllOfStxLockEventWithDefaults() *StxLockTransactionEventAllOfStxLockEvent {
	this := StxLockTransactionEventAllOfStxLockEvent{}
	return &this
}

// GetLockedAmount returns the LockedAmount field value
func (o *StxLockTransactionEventAllOfStxLockEvent) GetLockedAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LockedAmount
}

// GetLockedAmountOk returns a tuple with the LockedAmount field value
// and a boolean to check if the value has been set.
func (o *StxLockTransactionEventAllOfStxLockEvent) GetLockedAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LockedAmount, true
}

// SetLockedAmount sets field value
func (o *StxLockTransactionEventAllOfStxLockEvent) SetLockedAmount(v string) {
	o.LockedAmount = v
}

// GetUnlockHeight returns the UnlockHeight field value
func (o *StxLockTransactionEventAllOfStxLockEvent) GetUnlockHeight() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UnlockHeight
}

// GetUnlockHeightOk returns a tuple with the UnlockHeight field value
// and a boolean to check if the value has been set.
func (o *StxLockTransactionEventAllOfStxLockEvent) GetUnlockHeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnlockHeight, true
}

// SetUnlockHeight sets field value
func (o *StxLockTransactionEventAllOfStxLockEvent) SetUnlockHeight(v int32) {
	o.UnlockHeight = v
}

// GetLockedAddress returns the LockedAddress field value
func (o *StxLockTransactionEventAllOfStxLockEvent) GetLockedAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LockedAddress
}

// GetLockedAddressOk returns a tuple with the LockedAddress field value
// and a boolean to check if the value has been set.
func (o *StxLockTransactionEventAllOfStxLockEvent) GetLockedAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LockedAddress, true
}

// SetLockedAddress sets field value
func (o *StxLockTransactionEventAllOfStxLockEvent) SetLockedAddress(v string) {
	o.LockedAddress = v
}

func (o StxLockTransactionEventAllOfStxLockEvent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StxLockTransactionEventAllOfStxLockEvent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["locked_amount"] = o.LockedAmount
	toSerialize["unlock_height"] = o.UnlockHeight
	toSerialize["locked_address"] = o.LockedAddress
	return toSerialize, nil
}

func (o *StxLockTransactionEventAllOfStxLockEvent) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"locked_amount",
		"unlock_height",
		"locked_address",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varStxLockTransactionEventAllOfStxLockEvent := _StxLockTransactionEventAllOfStxLockEvent{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varStxLockTransactionEventAllOfStxLockEvent)

	if err != nil {
		return err
	}

	*o = StxLockTransactionEventAllOfStxLockEvent(varStxLockTransactionEventAllOfStxLockEvent)

	return err
}

type NullableStxLockTransactionEventAllOfStxLockEvent struct {
	value *StxLockTransactionEventAllOfStxLockEvent
	isSet bool
}

func (v NullableStxLockTransactionEventAllOfStxLockEvent) Get() *StxLockTransactionEventAllOfStxLockEvent {
	return v.value
}

func (v *NullableStxLockTransactionEventAllOfStxLockEvent) Set(val *StxLockTransactionEventAllOfStxLockEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableStxLockTransactionEventAllOfStxLockEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableStxLockTransactionEventAllOfStxLockEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStxLockTransactionEventAllOfStxLockEvent(val *StxLockTransactionEventAllOfStxLockEvent) *NullableStxLockTransactionEventAllOfStxLockEvent {
	return &NullableStxLockTransactionEventAllOfStxLockEvent{value: val, isSet: true}
}

func (v NullableStxLockTransactionEventAllOfStxLockEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStxLockTransactionEventAllOfStxLockEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


