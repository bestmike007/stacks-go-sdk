/*
Stacks Blockchain API

Welcome to the API reference overview for the [Stacks Blockchain API](https://docs.hiro.so/stacks-blockchain-api).        [Download Postman collection](https://hirosystems.github.io/stacks-blockchain-api/collection.json)

API version: v8.1.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stacks_blockchain_api_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SearchById404ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchById404ResponseResult{}

// SearchById404ResponseResult struct for SearchById404ResponseResult
type SearchById404ResponseResult struct {
	EntityType SearchById404ResponseResultEntityType `json:"entity_type"`
}

type _SearchById404ResponseResult SearchById404ResponseResult

// NewSearchById404ResponseResult instantiates a new SearchById404ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchById404ResponseResult(entityType SearchById404ResponseResultEntityType) *SearchById404ResponseResult {
	this := SearchById404ResponseResult{}
	this.EntityType = entityType
	return &this
}

// NewSearchById404ResponseResultWithDefaults instantiates a new SearchById404ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchById404ResponseResultWithDefaults() *SearchById404ResponseResult {
	this := SearchById404ResponseResult{}
	return &this
}

// GetEntityType returns the EntityType field value
func (o *SearchById404ResponseResult) GetEntityType() SearchById404ResponseResultEntityType {
	if o == nil {
		var ret SearchById404ResponseResultEntityType
		return ret
	}

	return o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value
// and a boolean to check if the value has been set.
func (o *SearchById404ResponseResult) GetEntityTypeOk() (*SearchById404ResponseResultEntityType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntityType, true
}

// SetEntityType sets field value
func (o *SearchById404ResponseResult) SetEntityType(v SearchById404ResponseResultEntityType) {
	o.EntityType = v
}

func (o SearchById404ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchById404ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["entity_type"] = o.EntityType
	return toSerialize, nil
}

func (o *SearchById404ResponseResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"entity_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSearchById404ResponseResult := _SearchById404ResponseResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSearchById404ResponseResult)

	if err != nil {
		return err
	}

	*o = SearchById404ResponseResult(varSearchById404ResponseResult)

	return err
}

type NullableSearchById404ResponseResult struct {
	value *SearchById404ResponseResult
	isSet bool
}

func (v NullableSearchById404ResponseResult) Get() *SearchById404ResponseResult {
	return v.value
}

func (v *NullableSearchById404ResponseResult) Set(val *SearchById404ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchById404ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchById404ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchById404ResponseResult(val *SearchById404ResponseResult) *NullableSearchById404ResponseResult {
	return &NullableSearchById404ResponseResult{value: val, isSet: true}
}

func (v NullableSearchById404ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchById404ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


