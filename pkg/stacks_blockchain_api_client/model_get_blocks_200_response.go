/*
Stacks Blockchain API

Welcome to the API reference overview for the [Stacks Blockchain API](https://docs.hiro.so/stacks-blockchain-api).        [Download Postman collection](https://hirosystems.github.io/stacks-blockchain-api/collection.json)

API version: v8.1.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stacks_blockchain_api_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetBlocks200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetBlocks200Response{}

// GetBlocks200Response struct for GetBlocks200Response
type GetBlocks200Response struct {
	Limit int32 `json:"limit"`
	Offset int32 `json:"offset"`
	Total int32 `json:"total"`
	// Next page cursor
	NextCursor NullableString `json:"next_cursor"`
	// Previous page cursor
	PrevCursor NullableString `json:"prev_cursor"`
	// Current page cursor
	Cursor NullableString `json:"cursor"`
	Results []GetBlocks200ResponseResultsInner `json:"results"`
}

type _GetBlocks200Response GetBlocks200Response

// NewGetBlocks200Response instantiates a new GetBlocks200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetBlocks200Response(limit int32, offset int32, total int32, nextCursor NullableString, prevCursor NullableString, cursor NullableString, results []GetBlocks200ResponseResultsInner) *GetBlocks200Response {
	this := GetBlocks200Response{}
	this.Limit = limit
	this.Offset = offset
	this.Total = total
	this.NextCursor = nextCursor
	this.PrevCursor = prevCursor
	this.Cursor = cursor
	this.Results = results
	return &this
}

// NewGetBlocks200ResponseWithDefaults instantiates a new GetBlocks200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetBlocks200ResponseWithDefaults() *GetBlocks200Response {
	this := GetBlocks200Response{}
	return &this
}

// GetLimit returns the Limit field value
func (o *GetBlocks200Response) GetLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Limit
}

// GetLimitOk returns a tuple with the Limit field value
// and a boolean to check if the value has been set.
func (o *GetBlocks200Response) GetLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Limit, true
}

// SetLimit sets field value
func (o *GetBlocks200Response) SetLimit(v int32) {
	o.Limit = v
}

// GetOffset returns the Offset field value
func (o *GetBlocks200Response) GetOffset() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value
// and a boolean to check if the value has been set.
func (o *GetBlocks200Response) GetOffsetOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Offset, true
}

// SetOffset sets field value
func (o *GetBlocks200Response) SetOffset(v int32) {
	o.Offset = v
}

// GetTotal returns the Total field value
func (o *GetBlocks200Response) GetTotal() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *GetBlocks200Response) GetTotalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *GetBlocks200Response) SetTotal(v int32) {
	o.Total = v
}

// GetNextCursor returns the NextCursor field value
// If the value is explicit nil, the zero value for string will be returned
func (o *GetBlocks200Response) GetNextCursor() string {
	if o == nil || o.NextCursor.Get() == nil {
		var ret string
		return ret
	}

	return *o.NextCursor.Get()
}

// GetNextCursorOk returns a tuple with the NextCursor field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetBlocks200Response) GetNextCursorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NextCursor.Get(), o.NextCursor.IsSet()
}

// SetNextCursor sets field value
func (o *GetBlocks200Response) SetNextCursor(v string) {
	o.NextCursor.Set(&v)
}

// GetPrevCursor returns the PrevCursor field value
// If the value is explicit nil, the zero value for string will be returned
func (o *GetBlocks200Response) GetPrevCursor() string {
	if o == nil || o.PrevCursor.Get() == nil {
		var ret string
		return ret
	}

	return *o.PrevCursor.Get()
}

// GetPrevCursorOk returns a tuple with the PrevCursor field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetBlocks200Response) GetPrevCursorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrevCursor.Get(), o.PrevCursor.IsSet()
}

// SetPrevCursor sets field value
func (o *GetBlocks200Response) SetPrevCursor(v string) {
	o.PrevCursor.Set(&v)
}

// GetCursor returns the Cursor field value
// If the value is explicit nil, the zero value for string will be returned
func (o *GetBlocks200Response) GetCursor() string {
	if o == nil || o.Cursor.Get() == nil {
		var ret string
		return ret
	}

	return *o.Cursor.Get()
}

// GetCursorOk returns a tuple with the Cursor field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetBlocks200Response) GetCursorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cursor.Get(), o.Cursor.IsSet()
}

// SetCursor sets field value
func (o *GetBlocks200Response) SetCursor(v string) {
	o.Cursor.Set(&v)
}

// GetResults returns the Results field value
func (o *GetBlocks200Response) GetResults() []GetBlocks200ResponseResultsInner {
	if o == nil {
		var ret []GetBlocks200ResponseResultsInner
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *GetBlocks200Response) GetResultsOk() ([]GetBlocks200ResponseResultsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Results, true
}

// SetResults sets field value
func (o *GetBlocks200Response) SetResults(v []GetBlocks200ResponseResultsInner) {
	o.Results = v
}

func (o GetBlocks200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetBlocks200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["limit"] = o.Limit
	toSerialize["offset"] = o.Offset
	toSerialize["total"] = o.Total
	toSerialize["next_cursor"] = o.NextCursor.Get()
	toSerialize["prev_cursor"] = o.PrevCursor.Get()
	toSerialize["cursor"] = o.Cursor.Get()
	toSerialize["results"] = o.Results
	return toSerialize, nil
}

func (o *GetBlocks200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"limit",
		"offset",
		"total",
		"next_cursor",
		"prev_cursor",
		"cursor",
		"results",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetBlocks200Response := _GetBlocks200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetBlocks200Response)

	if err != nil {
		return err
	}

	*o = GetBlocks200Response(varGetBlocks200Response)

	return err
}

type NullableGetBlocks200Response struct {
	value *GetBlocks200Response
	isSet bool
}

func (v NullableGetBlocks200Response) Get() *GetBlocks200Response {
	return v.value
}

func (v *NullableGetBlocks200Response) Set(val *GetBlocks200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBlocks200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBlocks200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBlocks200Response(val *GetBlocks200Response) *NullableGetBlocks200Response {
	return &NullableGetBlocks200Response{value: val, isSet: true}
}

func (v NullableGetBlocks200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBlocks200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


