/*
Stacks Blockchain API

Welcome to the API reference overview for the [Stacks Blockchain API](https://docs.hiro.so/stacks-blockchain-api).        [Download Postman collection](https://hirosystems.github.io/stacks-blockchain-api/collection.json)

API version: v8.1.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stacks_blockchain_api_client

import (
	"encoding/json"
	"fmt"
)


// GetTransactionById200Response struct for GetTransactionById200Response
type GetTransactionById200Response struct {
	GetMempoolTransactionList200ResponseResultsInner *GetMempoolTransactionList200ResponseResultsInner
	GetTransactionList200ResponseResultsInner *GetTransactionList200ResponseResultsInner
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *GetTransactionById200Response) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into GetMempoolTransactionList200ResponseResultsInner
	err = json.Unmarshal(data, &dst.GetMempoolTransactionList200ResponseResultsInner);
	if err == nil {
		jsonGetMempoolTransactionList200ResponseResultsInner, _ := json.Marshal(dst.GetMempoolTransactionList200ResponseResultsInner)
		if string(jsonGetMempoolTransactionList200ResponseResultsInner) == "{}" { // empty struct
			dst.GetMempoolTransactionList200ResponseResultsInner = nil
		} else {
			return nil // data stored in dst.GetMempoolTransactionList200ResponseResultsInner, return on the first match
		}
	} else {
		dst.GetMempoolTransactionList200ResponseResultsInner = nil
	}

	// try to unmarshal JSON data into GetTransactionList200ResponseResultsInner
	err = json.Unmarshal(data, &dst.GetTransactionList200ResponseResultsInner);
	if err == nil {
		jsonGetTransactionList200ResponseResultsInner, _ := json.Marshal(dst.GetTransactionList200ResponseResultsInner)
		if string(jsonGetTransactionList200ResponseResultsInner) == "{}" { // empty struct
			dst.GetTransactionList200ResponseResultsInner = nil
		} else {
			return nil // data stored in dst.GetTransactionList200ResponseResultsInner, return on the first match
		}
	} else {
		dst.GetTransactionList200ResponseResultsInner = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(GetTransactionById200Response)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *GetTransactionById200Response) MarshalJSON() ([]byte, error) {
	if src.GetMempoolTransactionList200ResponseResultsInner != nil {
		return json.Marshal(&src.GetMempoolTransactionList200ResponseResultsInner)
	}

	if src.GetTransactionList200ResponseResultsInner != nil {
		return json.Marshal(&src.GetTransactionList200ResponseResultsInner)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableGetTransactionById200Response struct {
	value *GetTransactionById200Response
	isSet bool
}

func (v NullableGetTransactionById200Response) Get() *GetTransactionById200Response {
	return v.value
}

func (v *NullableGetTransactionById200Response) Set(val *GetTransactionById200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTransactionById200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTransactionById200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTransactionById200Response(val *GetTransactionById200Response) *NullableGetTransactionById200Response {
	return &NullableGetTransactionById200Response{value: val, isSet: true}
}

func (v NullableGetTransactionById200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTransactionById200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


