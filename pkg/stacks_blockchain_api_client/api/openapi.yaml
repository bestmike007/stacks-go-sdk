openapi: 3.0.3
info:
  description: |-
    Welcome to the API reference overview for the [Stacks Blockchain API](https://docs.hiro.so/stacks-blockchain-api).

          [Download Postman collection](https://hirosystems.github.io/stacks-blockchain-api/collection.json)
  title: Stacks Blockchain API
  version: v8.1.2
externalDocs:
  description: Source Repository
  url: https://github.com/hirosystems/stacks-blockchain-api
servers:
- description: mainnet
  url: https://api.hiro.so/
tags:
- description: Read-only endpoints to obtain Stacks account details
  externalDocs:
    description: Stacks Documentation - Accounts
    url: https://docs.stacks.co/understand-stacks/accounts
  name: Accounts
- description: Read-only endpoints to obtain Stacks block details
  name: Blocks
- description: Read-only endpoints to obtain burn block details
  name: Burn Blocks
- description: Endpoints to request STX or BTC tokens (not possible on Mainnet)
  name: Faucets
- description: Read-only endpoints to obtain fee details
  name: Fees
- description: "Read-only endpoints to obtain network, Proof-of-Transfer, Stacking,\
    \ STX token, and node information"
  name: Info
- description: Read-only endpoints to obtain microblocks details
  externalDocs:
    description: Stacks Documentation - Microblocks
    url: https://docs.stacks.co/understand-stacks/microblocks
  name: Microblocks
- description: Read-only endpoints realted to the Blockchain Naming System on Stacks
  externalDocs:
    description: Stacks Documentation - Blockchain Naming System
    url: https://docs.stacks.co/build-apps/references/bns
  name: Names
- description: Read-only endpoints to obtain non-fungible token details
  externalDocs:
    description: Stacks Documentation - Tokens
    url: https://docs.stacks.co/write-smart-contracts/tokens
  name: Non-Fungible Tokens
- description: Endpoints to support the Rosetta API open blockchain standard
  externalDocs:
    description: Hiro Documentation - Rosetta Support
    url: https://docs.hiro.so/get-started/stacks-blockchain-api#rosetta-support
  name: Rosetta
- description: "Read-only endpoints to search for accounts, blocks, smart contracts,\
    \ and transactions"
  name: Search
- description: Read-only endpoints to obtain Clarity smart contract details
  externalDocs:
    description: Stacks Documentation - Clarity Smart Contracts
    url: https://docs.stacks.co/write-smart-contracts/overview
  name: Smart Contracts
- description: Read-only endpoints to obtain Stacking reward details
  externalDocs:
    description: Stacks Documentation - Stacking
    url: https://docs.stacks.co/understand-stacks/stacking
  name: Stacking Rewards
- description: Endpoints to obtain transaction details and to broadcast transactions
    to the network
  externalDocs:
    description: Hiro Documentation - Transactions
    url: https://docs.hiro.so/get-started/transactions
  name: Transactions
- description: Endpoints to obtain Mempool information
  name: Mempool
- description: Endpoints to get information about the Proof of Transfer consensus
    mechanism
  name: Proof of Transfer
paths:
  /extended:
    get:
      description: "Retrieves the running status of the Stacks Blockchain API, including\
        \ the server version and current chain tip information."
      operationId: get_status
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api_Status_Response'
          description: Default Response
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: API status
      tags:
      - Info
  /extended/v1/tx/:
    get:
      description: Retrieves all recently mined transactions
      operationId: get_transaction_list
      parameters:
      - description: Result offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      - description: Results per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 50
          minimum: 0
          title: Limit
          type: integer
        style: form
      - explode: true
        in: query
        name: type
        required: false
        schema:
          items:
            $ref: '#/components/schemas/get_transaction_list_type_parameter_inner'
          type: array
        style: form
      - description: Include data from unanchored (i.e. unconfirmed) microblocks
        example: true
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - explode: true
        in: query
        name: order
        required: false
        schema:
          $ref: '#/components/schemas/get_transaction_list_order_parameter'
        style: form
      - description: "Option to sort results by block height, timestamp, or fee"
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          $ref: '#/components/schemas/get_transaction_list_sort_by_parameter'
        style: form
      - description: Option to filter results by sender address
        explode: true
        in: query
        name: from_address
        required: false
        schema:
          type: string
        style: form
      - description: Option to filter results by recipient address
        explode: true
        in: query
        name: to_address
        required: false
        schema:
          type: string
        style: form
      - description: Filter by transactions after this timestamp (unix timestamp in
          seconds)
        example: 1704067200
        explode: true
        in: query
        name: start_time
        required: false
        schema:
          type: integer
        style: form
      - description: Filter by transactions before this timestamp (unix timestamp
          in seconds)
        example: 1706745599
        explode: true
        in: query
        name: end_time
        required: false
        schema:
          type: integer
        style: form
      - description: Option to filter results by contract ID
        example: SP000000000000000000002Q6VF78.pox-4
        explode: true
        in: query
        name: contract_id
        required: false
        schema:
          type: string
        style: form
      - description: Filter by contract call transactions involving this function
          name
        example: delegate-stx
        explode: true
        in: query
        name: function_name
        required: false
        schema:
          type: string
        style: form
      - description: Filter by transactions with this nonce
        example: 123
        explode: true
        in: query
        name: nonce
        required: false
        schema:
          maximum: 9007199254740991
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_transaction_list_200_response'
          description: List of transactions
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get recent transactions
      tags:
      - Transactions
  /extended/v1/tx/multiple:
    get:
      description: Retrieves a list of transactions for a given list of transaction
        IDs
      operationId: get_tx_list_details
      parameters:
      - explode: true
        in: query
        name: tx_id
        required: true
        schema:
          items:
            description: Transaction ID
            pattern: "^(0x)?[a-fA-F0-9]{64}$"
            title: Transaction ID
            type: string
          type: array
        style: form
      - description: Results per page
        explode: true
        in: query
        name: event_limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 0
          title: Limit
          type: integer
        style: form
      - description: Result offset
        explode: true
        in: query
        name: event_offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      - description: Include data from unanchored (i.e. unconfirmed) microblocks
        example: true
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/get_tx_list_details_200_response_value'
                type: object
          description: Default Response
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get list of details for transactions
      tags:
      - Transactions
  /extended/v1/tx/mempool:
    get:
      description: |-
        Retrieves all transactions that have been recently broadcast to the mempool. These are pending transactions awaiting confirmation.

                If you need to monitor new transactions, we highly recommend subscribing to [WebSockets or Socket.io](https://github.com/hirosystems/stacks-blockchain-api/tree/master/client) for real-time updates.
      operationId: get_mempool_transaction_list
      parameters:
      - description: STX Address
        example: SP318Q55DEKHRXJK696033DQN5C54D9K2EE6DHRWP
        explode: true
        in: query
        name: sender_address
        required: false
        schema:
          pattern: "^[0123456789ABCDEFGHJKMNPQRSTVWXYZ]{28,41}"
          title: STX Address
          type: string
        style: form
      - description: STX Address
        example: SP318Q55DEKHRXJK696033DQN5C54D9K2EE6DHRWP
        explode: true
        in: query
        name: recipient_address
        required: false
        schema:
          pattern: "^[0123456789ABCDEFGHJKMNPQRSTVWXYZ]{28,41}"
          title: STX Address
          type: string
        style: form
      - description: STX Address
        example: SP318Q55DEKHRXJK696033DQN5C54D9K2EE6DHRWP
        explode: true
        in: query
        name: address
        required: false
        schema:
          pattern: "^[0123456789ABCDEFGHJKMNPQRSTVWXYZ]{28,41}"
          title: STX Address
          type: string
        style: form
      - description: "Option to sort results by transaction age, size, or fee rate."
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          $ref: '#/components/schemas/Order_By'
        style: form
      - description: Results order
        explode: true
        in: query
        name: order
        required: false
        schema:
          $ref: '#/components/schemas/Order'
        style: form
      - description: Include data from unanchored (i.e. unconfirmed) microblocks
        example: true
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Result offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      - description: Results per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 50
          minimum: 0
          title: Limit
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_mempool_transaction_list_200_response'
          description: List of mempool transactions
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get mempool transactions
      tags:
      - Transactions
  /extended/v1/tx/mempool/dropped:
    get:
      description: |-
        Retrieves all recently-broadcast transactions that have been dropped from the mempool.

                Transactions are dropped from the mempool if:
                 * they were stale and awaiting garbage collection or,
                 * were expensive, or
                 * were replaced with a new fee
      operationId: get_dropped_mempool_transaction_list
      parameters:
      - description: Result offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      - description: Results per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 50
          minimum: 0
          title: Limit
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_dropped_mempool_transaction_list_200_response'
          description: List of dropped mempool transactions
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get dropped mempool transactions
      tags:
      - Transactions
  /extended/v1/tx/mempool/stats:
    get:
      description: |-
        Queries for transactions counts, age (by block height), fees (simple average), and size.
                All results broken down by transaction type and percentiles (p25, p50, p75, p95).
      operationId: get_mempool_transaction_stats
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MempoolTransactionStatsResponse'
          description: GET request that returns stats on mempool transactions
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get statistics for mempool transactions
      tags:
      - Transactions
  /extended/v1/tx/events:
    get:
      description: |-
        Retrieves the list of events filtered by principal (STX address or Smart Contract ID), transaction id or event types.
                The list of event types is ('smart_contract_log', 'stx_lock', 'stx_asset', 'fungible_token_asset', 'non_fungible_token_asset').
      operationId: get_filtered_events
      parameters:
      - description: Transaction ID
        example: 0xf6bd5f4a7b26184a3466340b2e99fd003b4962c0e382a7e4b6a13df3dd7a91c6
        explode: true
        in: query
        name: tx_id
        required: false
        schema:
          pattern: "^(0x)?[a-fA-F0-9]{64}$"
          title: Transaction ID
          type: string
        style: form
      - explode: true
        in: query
        name: address
        required: false
        schema:
          $ref: '#/components/schemas/get_filtered_events_address_parameter'
        style: form
      - explode: true
        in: query
        name: type
        required: false
        schema:
          items:
            $ref: '#/components/schemas/get_filtered_events_type_parameter_inner'
          type: array
        style: form
      - description: Result offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      - description: Results per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 0
          title: Limit
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_of_events'
          description: Default Response
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Transaction Events
      tags:
      - Transactions
  /extended/v1/tx/{tx_id}:
    get:
      description: Retrieves transaction details for a given transaction ID
      operationId: get_transaction_by_id
      parameters:
      - description: Results per page
        explode: true
        in: query
        name: event_limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 0
          title: Limit
          type: integer
        style: form
      - description: Result offset
        explode: true
        in: query
        name: event_offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      - description: Include data from unanchored (i.e. unconfirmed) microblocks
        example: true
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Transaction ID
        example: 0xf6bd5f4a7b26184a3466340b2e99fd003b4962c0e382a7e4b6a13df3dd7a91c6
        explode: false
        in: path
        name: tx_id
        required: true
        schema:
          pattern: "^(0x)?[a-fA-F0-9]{64}$"
          title: Transaction ID
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_transaction_by_id_200_response'
          description: Default Response
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get transaction
      tags:
      - Transactions
  /extended/v1/tx/{tx_id}/raw:
    get:
      description: Retrieves a hex encoded serialized transaction for a given ID
      operationId: get_raw_transaction_by_id
      parameters:
      - description: Results per page
        explode: true
        in: query
        name: event_limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 0
          title: Limit
          type: integer
        style: form
      - description: Result offset
        explode: true
        in: query
        name: event_offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      - description: Transaction ID
        example: 0xf6bd5f4a7b26184a3466340b2e99fd003b4962c0e382a7e4b6a13df3dd7a91c6
        explode: false
        in: path
        name: tx_id
        required: true
        schema:
          pattern: "^(0x)?[a-fA-F0-9]{64}$"
          title: Transaction ID
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRawTransactionResult'
          description: GET raw transaction
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get raw transaction
      tags:
      - Transactions
  /extended/v1/tx/block/{block_hash}:
    get:
      deprecated: true
      description: |-
        **NOTE:** This endpoint is deprecated in favor of [Get transactions by block](/api/get-transactions-by-block).

                Retrieves a list of all transactions within a block for a given block hash.
      operationId: get_transactions_by_block_hash
      parameters:
      - description: Result offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      - description: Results per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 0
          title: Limit
          type: integer
        style: form
      - explode: false
        in: path
        name: block_hash
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_transaction_list_200_response'
          description: List of transactions
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Transactions by block hash
      tags:
      - Transactions
  /extended/v1/tx/block_height/{height}:
    get:
      deprecated: true
      description: |-
        **NOTE:** This endpoint is deprecated in favor of [Get transactions by block](/api/get-transactions-by-block).

                Retrieves all transactions within a block at a given height
      operationId: get_transactions_by_block_height
      parameters:
      - description: Result offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      - description: Results per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 50
          minimum: 0
          title: Limit
          type: integer
        style: form
      - description: Block height
        example: 777678
        explode: false
        in: path
        name: height
        required: true
        schema:
          minimum: 0
          title: Block height
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_transaction_list_200_response'
          description: List of transactions
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Transactions by block height
      tags:
      - Transactions
  /extended/v1/stx_supply/:
    get:
      description: "Retrieves the total and unlocked STX supply. More information\
        \ on Stacking can be found [here] (https://docs.stacks.co/understand-stacks/stacking)."
      operationId: get_stx_supply
      parameters:
      - description: "Supply details are queried from specified block height. If the\
          \ block height is not specified, the latest block height is taken as default\
          \ value. Note that the `block height` is referred to the stacks blockchain."
        example: 777678
        explode: true
        in: query
        name: height
        required: false
        schema:
          minimum: 0
          title: Block height
          type: integer
        style: form
      - description: Include data from unanchored (i.e. unconfirmed) microblocks
        example: true
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStxSupplyResponse'
          description: GET request that returns network target block times
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get total and unlocked STX supply
      tags:
      - Info
  /extended/v1/stx_supply/total/plain:
    get:
      deprecated: true
      description: Retrieves the total circulating STX token supply as plain text.
      operationId: get_stx_supply_total_supply_plain
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_stx_supply_total_supply_plain_200_response'
          description: Default Response
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get total STX supply in plain text format
      tags:
      - Info
  /extended/v1/stx_supply/circulating/plain:
    get:
      deprecated: true
      description: Retrieves the STX tokens currently in circulation that have been
        unlocked as plain text.
      operationId: get_stx_supply_circulating_plain
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_stx_supply_total_supply_plain_200_response'
          description: Default Response
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get circulating STX supply in plain text format
      tags:
      - Info
  /extended/v1/stx_supply/legacy_format:
    get:
      deprecated: true
      description: Retrieves total supply of STX tokens including those currently
        in circulation that have been unlocked.
      operationId: get_total_stx_supply_legacy_format
      parameters:
      - description: "Supply details are queried from specified block height. If the\
          \ block height is not specified, the latest block height is taken as default\
          \ value. Note that the `block height` is referred to the stacks blockchain."
        example: 777678
        explode: true
        in: query
        name: height
        required: false
        schema:
          minimum: 0
          title: Block height
          type: integer
        style: form
      - description: Include data from unanchored (i.e. unconfirmed) microblocks
        example: true
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStxSupplyLegacyFormatResponse'
          description: GET request that returns network target block times
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get total and unlocked STX supply (results formatted the same as the
        legacy 1.0 API)
      tags:
      - Info
  /extended/v1/info/network_block_times:
    get:
      description: Retrieves the target block times for mainnet and testnet. The block
        time is hardcoded and will change throughout the implementation phases of
        the testnet.
      operationId: get_network_block_times
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkBlockTimesResponse'
          description: GET request that returns network target block times
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get the network target block time
      tags:
      - Info
  /extended/v1/info/network_block_time/{network}:
    get:
      description: Retrieves the target block time for a given network. The network
        can be mainnet or testnet. The block time is hardcoded and will change throughout
        the implementation phases of the testnet.
      operationId: get_network_block_time_by_network
      parameters:
      - explode: false
        in: path
        name: network
        required: true
        schema:
          $ref: '#/components/schemas/get_network_block_time_by_network_network_parameter'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkBlockTimeResponse'
          description: GET request that target block time for a given network
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get a given network's target block time
      tags:
      - Info
  /extended/v1/tokens/nft/holdings:
    get:
      description: |-
        Retrieves the list of Non-Fungible Tokens owned by the given principal (STX address or Smart Contract ID).
                Results can be filtered by one or more asset identifiers and can include metadata about the transaction that made the principal own each token.

                More information on Non-Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts).
      operationId: get_nft_holdings
      parameters:
      - explode: true
        in: query
        name: principal
        required: true
        schema:
          $ref: '#/components/schemas/get_filtered_events_address_parameter'
        style: form
      - explode: true
        in: query
        name: asset_identifiers
        required: false
        schema:
          items:
            description: identifiers of the token asset classes to filter for
            type: string
          type: array
        style: form
      - description: max number of tokens to fetch
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          maximum: 200
          minimum: 0
          title: Limit
          type: integer
        style: form
      - description: index of first tokens to fetch
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      - description: Include data from unanchored (i.e. unconfirmed) microblocks
        example: true
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: whether or not to include the complete transaction metadata instead
          of just `tx_id`. Enabling this option can affect performance and response
          times.
        explode: true
        in: query
        name: tx_metadata
        required: true
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_nft_holdings_200_response'
          description: List of Non-Fungible Token holdings
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Non-Fungible Token holdings
      tags:
      - Non-Fungible Tokens
  /extended/v1/tokens/nft/history:
    get:
      description: |-
        Retrieves all events relevant to a Non-Fungible Token. Useful to determine the ownership history of a particular asset.

                More information on Non-Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts).
      operationId: get_nft_history
      parameters:
      - description: asset class identifier
        example: SP2X0TZ59D5SZ8ACQ6YMCHHNR2ZN51Z32E2CJ173.the-explorer-guild::The-Explorer-Guild
        explode: true
        in: query
        name: asset_identifier
        required: true
        schema:
          type: string
        style: form
      - description: hex representation of the token's unique value
        example: 0x0100000000000000000000000000000803
        explode: true
        in: query
        name: value
        required: true
        schema:
          type: string
        style: form
      - description: max number of events to fetch
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          maximum: 200
          minimum: 0
          title: Limit
          type: integer
        style: form
      - description: index of first event to fetch
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      - description: Include data from unanchored (i.e. unconfirmed) microblocks
        example: true
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: whether or not to include the complete transaction metadata instead
          of just `tx_id`. Enabling this option can affect performance and response
          times.
        explode: true
        in: query
        name: tx_metadata
        required: true
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_nft_history_200_response'
          description: List of Non-Fungible Token history events
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Non-Fungible Token history
      tags:
      - Non-Fungible Tokens
  /extended/v1/tokens/nft/mints:
    get:
      description: |-
        Retrieves all mint events for a Non-Fungible Token asset class. Useful to determine which NFTs of a particular collection have been claimed.

                More information on Non-Fungible Tokens on the Stacks blockchain can be found [here](https://docs.stacks.co/write-smart-contracts/tokens#non-fungible-tokens-nfts).
      operationId: get_nft_mints
      parameters:
      - description: asset class identifier
        example: SP2X0TZ59D5SZ8ACQ6YMCHHNR2ZN51Z32E2CJ173.the-explorer-guild::The-Explorer-Guild
        explode: true
        in: query
        name: asset_identifier
        required: true
        schema:
          type: string
        style: form
      - description: max number of events to fetch
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          maximum: 200
          minimum: 0
          title: Limit
          type: integer
        style: form
      - description: index of first event to fetch
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      - description: Include data from unanchored (i.e. unconfirmed) microblocks
        example: true
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: whether or not to include the complete transaction metadata instead
          of just `tx_id`. Enabling this option can affect performance and response
          times.
        explode: true
        in: query
        name: tx_metadata
        required: true
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonFungibleTokenMintList'
          description: List of Non-Fungible Token mint events for an asset identifier
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Non-Fungible Token mints
      tags:
      - Non-Fungible Tokens
  /extended/v1/tokens/ft/{token}/holders:
    get:
      description: Retrieves the list of Fungible Token holders for a given token
        ID. Specify `stx` for the `token` parameter to get the list of STX holders.
      operationId: get_ft_holders
      parameters:
      - description: max number of holders to fetch
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 200
          minimum: 0
          title: Limit
          type: integer
        style: form
      - description: index of first holder to fetch
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      - description: fungible token identifier
        examples:
          stx:
            value: stx
          SP3Y2ZSH8P7D50B0VBTSX11S7XSG24M1VB9YFQA4K.token-aeusdc::aeUSDC:
            value: SP3Y2ZSH8P7D50B0VBTSX11S7XSG24M1VB9YFQA4K.token-aeusdc::aeUSDC
        explode: false
        in: path
        name: token
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_ft_holders_200_response'
          description: Default Response
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Fungible token holders
      tags:
      - Fungible Tokens
  /extended/v1/contract/by_trait:
    get:
      description: "Retrieves a list of contracts based on the following traits listed\
        \ in JSON format -  functions, variables, maps, fungible tokens and non-fungible\
        \ tokens"
      operationId: get_contracts_by_trait
      parameters:
      - description: JSON abi of the trait.
        explode: true
        in: query
        name: trait_abi
        required: true
        schema:
          type: string
        style: form
      - description: max number of contracts fetch
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 50
          minimum: 0
          title: Limit
          type: integer
        style: form
      - description: index of first contract event to fetch
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractListResponse'
          description: GET list of contracts
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get contracts by trait
      tags:
      - Smart Contracts
  /extended/v1/contract/{contract_id}:
    get:
      description: Retrieves details of a contract with a given `contract_id`
      operationId: get_contract_by_id
      parameters:
      - description: Contract identifier formatted as `<contract_address>.<contract_name>`
        example: SP6P4EJF0VG8V0RB3TQQKJBHDQKEF6NVRD1KZE3C.satoshibles
        explode: false
        in: path
        name: contract_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmartContract'
          description: A Smart Contract Detail
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get contract info
      tags:
      - Smart Contracts
  /extended/v1/contract/{contract_id}/events:
    get:
      description: Retrieves a list of events that have been triggered by a given
        `contract_id`
      operationId: get_contract_events_by_id
      parameters:
      - description: max number of events to fetch
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 50
          minimum: 0
          title: Limit
          type: integer
        style: form
      - description: Result offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      - description: Contract identifier formatted as `<contract_address>.<contract_name>`
        example: SP6P4EJF0VG8V0RB3TQQKJBHDQKEF6NVRD1KZE3C.satoshibles
        explode: false
        in: path
        name: contract_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_contract_events_by_id_200_response'
          description: List of events
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get contract events
      tags:
      - Smart Contracts
  /extended/v1/fee_rate/:
    post:
      deprecated: true
      description: |-
        **NOTE:** This endpoint is deprecated in favor of [Get approximate fees for a given transaction](/api/get-approximate-fees-for-a-given-transaction).

                Retrieves estimated fee rate.
      operationId: fetch_fee_rate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeeRateRequest'
        description: Request to fetch fee for a transaction
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeRate'
          description: Get fee rate information.
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Fetch fee rate
      tags:
      - Fees
  /extended/v1/microblock/:
    get:
      description: |-
        Retrieves a list of microblocks.

                  If you need to actively monitor new microblocks, we highly recommend subscribing to [WebSockets or Socket.io](https://github.com/hirosystems/stacks-blockchain-api/tree/master/client) for real-time updates.
      operationId: get_microblock_list
      parameters:
      - description: Max number of microblocks to fetch
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 200
          minimum: 0
          title: Limit
          type: integer
        style: form
      - description: Result offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MicroblockListResponse'
          description: GET request that returns microblocks
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get recent microblocks
      tags:
      - Microblocks
  /extended/v1/microblock/{hash}:
    get:
      description: Retrieves a specific microblock by `hash`
      operationId: get_microblock_by_hash
      parameters:
      - description: Hash of the microblock
        example: 0x3bfcdf84b3012adb544cf0f6df4835f93418c2269a3881885e27b3d58eb82d47
        explode: false
        in: path
        name: hash
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microblock'
          description: A microblock
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get microblock
      tags:
      - Microblocks
  /extended/v1/microblock/unanchored/txs:
    get:
      description: Retrieves transactions that have been streamed in microblocks but
        not yet accepted or rejected in an anchor block
      operationId: get_unanchored_txs
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_unanchored_txs_200_response'
          description: Default Response
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get the list of current transactions that belong to unanchored microblocks
      tags:
      - Microblocks
  /extended/v1/block/:
    get:
      deprecated: true
      description: |-
        **NOTE:** This endpoint is deprecated in favor of [Get blocks](/api/get-blocks).

                  Retrieves a list of recently mined blocks

                  If you need to actively monitor new blocks, we highly recommend subscribing to [WebSockets or Socket.io](https://github.com/hirosystems/stacks-blockchain-api/tree/master/client) for real-time updates.
      operationId: get_block_list
      parameters:
      - description: max number of blocks to fetch
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 30
          minimum: 0
          title: Limit
          type: integer
        style: form
      - description: Result offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockListResponse'
          description: GET request that returns blocks
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get recent blocks
      tags:
      - Blocks
  /extended/v1/block/by_height/{height}:
    get:
      deprecated: true
      description: |-
        **NOTE:** This endpoint is deprecated in favor of [Get block](/api/get-block).

                Retrieves block details of a specific block at a given block height
      operationId: get_block_by_height
      parameters:
      - description: Height of the block
        example: 10000
        explode: false
        in: path
        name: height
        required: true
        schema:
          minimum: 0
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Block'
          description: A block
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get block by height
      tags:
      - Blocks
  /extended/v1/block/by_burn_block_height/{burn_block_height}:
    get:
      deprecated: true
      description: |-
        **NOTE:** This endpoint is deprecated in favor of [Get blocks](/api/get-blocks).

                Retrieves block details of a specific block for a given burn chain height
      operationId: get_block_by_burn_block_height
      parameters:
      - description: Height of the burn chain block
        example: 744603
        explode: false
        in: path
        name: burn_block_height
        required: true
        schema:
          minimum: 0
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Block'
          description: A block
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get block by burnchain height
      tags:
      - Blocks
  /extended/v1/block/{hash}:
    get:
      deprecated: true
      description: "**NOTE:** This endpoint is deprecated in favor of [Get block](/api/get-block).\n\
        \        \n        Retrieves block details of a specific block for a given\
        \ chain height. You can use the hash from your latest block ('get_block_list'\
        \ API) to get your block details."
      operationId: get_block_by_hash
      parameters:
      - description: Hash of the block
        example: 0x4839a8b01cfb39ffcc0d07d3db31e848d5adf5279d529ed5062300b9f353ff79
        explode: false
        in: path
        name: hash
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Block'
          description: A block
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get block by hash
      tags:
      - Blocks
  /extended/v1/block/by_burn_block_hash/{burn_block_hash}:
    get:
      deprecated: true
      description: |-
        **NOTE:** This endpoint is deprecated in favor of [Get blocks](/api/get-blocks).

                Retrieves block details of a specific block for a given burnchain block hash
      operationId: get_block_by_burn_block_hash
      parameters:
      - description: Hash of the burnchain block
        example: 0x00000000000000000002bba732926cf68b6eda3e2cdbc2a85af79f10efeeeb10
        explode: false
        in: path
        name: burn_block_hash
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Block'
          description: A block
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get block by burnchain block hash
      tags:
      - Blocks
  /extended/v1/burnchain/reward_slot_holders:
    get:
      description: Retrieves a list of the Bitcoin addresses that would validly receive
        Proof-of-Transfer commitments.
      operationId: get_burnchain_reward_slot_holders
      parameters:
      - description: max number of items to fetch
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 96
          maximum: 250
          minimum: 0
          title: Limit
          type: integer
        style: form
      - description: Result offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List_of_burnchain_reward_recipients_and_amounts'
          description: Default Response
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get recent reward slot holders
      tags:
      - Stacking Rewards
  /extended/v1/burnchain/reward_slot_holders/{address}:
    get:
      description: Retrieves a list of the Bitcoin addresses that would validly receive
        Proof-of-Transfer commitments for a given reward slot holder recipient address.
      operationId: get_burnchain_reward_slot_holders_by_address
      parameters:
      - description: Results per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 96
          maximum: 250
          minimum: 0
          title: Limit
          type: integer
        style: form
      - description: Result offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      - description: "Reward slot holder recipient address. Should either be in the\
          \ native burnchain's format (e.g. B58 for Bitcoin), or if a STX principal\
          \ address is provided it will be encoded as into the equivalent burnchain\
          \ format"
        example: 36hQtSEXBMevo5chpxhfAGiCTSC34QKgda
        explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BurnchainRewardSlotHolderListResponse'
          description: List of burnchain reward recipients and amounts
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get recent reward slot holder entries for the given address
      tags:
      - Stacking Rewards
  /extended/v1/burnchain/rewards:
    get:
      description: Retrieves a list of recent burnchain (e.g. Bitcoin) reward recipients
        with the associated amounts and block info
      operationId: get_burnchain_reward_list
      parameters:
      - description: Results per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 96
          maximum: 250
          minimum: 0
          title: Limit
          type: integer
        style: form
      - description: Result offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_burnchain_reward_list_200_response'
          description: List of burnchain reward recipients and amounts
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get recent burnchain reward recipients
      tags:
      - Stacking Rewards
  /extended/v1/burnchain/rewards/{address}:
    get:
      description: Retrieves a list of recent burnchain (e.g. Bitcoin) rewards for
        the given recipient with the associated amounts and block info
      operationId: get_burnchain_reward_list_by_address
      parameters:
      - description: Results per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 96
          maximum: 250
          minimum: 0
          title: Limit
          type: integer
        style: form
      - description: Result offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      - description: "Reward recipient address. Should either be in the native burnchain's\
          \ format (e.g. B58 for Bitcoin), or if a STX principal address is provided\
          \ it will be encoded as into the equivalent burnchain format"
        example: 36hQtSEXBMevo5chpxhfAGiCTSC34QKgda
        explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_burnchain_reward_list_200_response'
          description: List of burnchain reward recipients and amounts
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get recent burnchain reward for the given recipient
      tags:
      - Stacking Rewards
  /extended/v1/burnchain/rewards/{address}/total:
    get:
      description: Retrieves the total burnchain (e.g. Bitcoin) rewards for a given
        recipient `address`
      operationId: get_burnchain_rewards_total_by_address
      parameters:
      - description: "Reward recipient address. Should either be in the native burnchain's\
          \ format (e.g. B58 for Bitcoin), or if a STX principal address is provided\
          \ it will be encoded as into the equivalent burnchain format"
        example: 36hQtSEXBMevo5chpxhfAGiCTSC34QKgda
        explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BurnchainRewardsTotal'
          description: Total burnchain rewards made to a recipient
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get total burnchain rewards for the given recipient
      tags:
      - Stacking Rewards
  /extended/v1/address/{principal}/stx:
    get:
      description: Retrieves STX token balance for a given Address or Contract Identifier.
      operationId: get_account_stx_balance
      parameters:
      - description: Include data from unanchored (i.e. unconfirmed) microblocks
        example: true
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "Block hash or block height. Return data representing the state\
          \ up until that point in time, rather than the current block. Note - Use\
          \ either of the query parameters but not both at a time."
        examples:
          "60000":
            value: "60000"
          "0x4839a8b01cfb39ffcc0d07d3db31e848d5adf5279d529ed5062300b9f353ff79":
            value: 0x4839a8b01cfb39ffcc0d07d3db31e848d5adf5279d529ed5062300b9f353ff79
        explode: true
        in: query
        name: until_block
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: principal
        required: true
        schema:
          $ref: '#/components/schemas/get_filtered_events_address_parameter'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressStxBalance'
          description: GET request that returns address balances
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get account STX balance
      tags:
      - Accounts
  /extended/v1/address/{principal}/balances:
    get:
      description: "Retrieves total account balance information for a given Address\
        \ or Contract Identifier. This includes the balances of STX Tokens, Fungible\
        \ Tokens and Non-Fungible Tokens for the account."
      operationId: get_account_balance
      parameters:
      - description: Include data from unanchored (i.e. unconfirmed) microblocks
        example: true
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "Block hash or block height. Return data representing the state\
          \ up until that point in time, rather than the current block. Note - Use\
          \ either of the query parameters but not both at a time."
        examples:
          "60000":
            value: "60000"
          "0x4839a8b01cfb39ffcc0d07d3db31e848d5adf5279d529ed5062300b9f353ff79":
            value: 0x4839a8b01cfb39ffcc0d07d3db31e848d5adf5279d529ed5062300b9f353ff79
        explode: true
        in: query
        name: until_block
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: principal
        required: true
        schema:
          $ref: '#/components/schemas/get_filtered_events_address_parameter'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressBalanceResponse'
          description: GET request that returns address balances
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get account balances
      tags:
      - Accounts
  /extended/v1/address/{principal}/transactions:
    get:
      deprecated: true
      description: |-
        **NOTE:** This endpoint is deprecated in favor of [Get address transactions](/api/get-address-transactions).

                Retrieves a list of all Transactions for a given Address or Contract Identifier. More information on Transaction types can be found [here](https://docs.stacks.co/understand-stacks/transactions#types).

                If you need to actively monitor new transactions for an address or contract id, we highly recommend subscribing to [WebSockets or Socket.io](https://github.com/hirosystems/stacks-blockchain-api/tree/master/client) for real-time updates.
      operationId: get_account_transactions
      parameters:
      - description: Results per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 50
          minimum: 0
          title: Limit
          type: integer
        style: form
      - description: Result offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      - description: Filter for transactions only at this given block height
        explode: true
        in: query
        name: height
        required: false
        schema:
          type: integer
        style: form
      - description: Include data from unanchored (i.e. unconfirmed) microblocks
        example: true
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "Block hash or block height. Return data representing the state\
          \ up until that point in time, rather than the current block. Note - Use\
          \ either of the query parameters but not both at a time."
        examples:
          "60000":
            value: "60000"
          "0x4839a8b01cfb39ffcc0d07d3db31e848d5adf5279d529ed5062300b9f353ff79":
            value: 0x4839a8b01cfb39ffcc0d07d3db31e848d5adf5279d529ed5062300b9f353ff79
        explode: true
        in: query
        name: until_block
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: principal
        required: true
        schema:
          $ref: '#/components/schemas/get_filtered_events_address_parameter'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressTransactionsListResponse'
          description: GET request that returns account transactions
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get account transactions
      tags:
      - Accounts
  /extended/v1/address/{principal}/{tx_id}/with_transfers:
    get:
      deprecated: true
      description: |-
        **NOTE:** This endpoint is deprecated in favor of [Get events for an address transaction](/api/get-address-transaction-events).

                Retrieves transaction details for a given Transaction Id `tx_id`, for a given account or contract Identifier.
      operationId: get_single_transaction_with_transfers
      parameters:
      - explode: false
        in: path
        name: principal
        required: true
        schema:
          $ref: '#/components/schemas/get_filtered_events_address_parameter'
        style: simple
      - description: Transaction ID
        example: 0x34d79c7cfc2fe525438736733e501a4bf0308a5556e3e080d1e2c0858aad7448
        explode: false
        in: path
        name: tx_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressTransactionWithTransfers'
          description: Transaction with STX transfers for a given address
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get account transaction information for specific transaction
      tags:
      - Accounts
  /extended/v1/address/{principal}/transactions_with_transfers:
    get:
      deprecated: true
      description: Retrieve all transactions for an account or contract identifier
        including STX transfers for each transaction.
      operationId: get_account_transactions_with_transfers
      parameters:
      - description: Results per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 50
          minimum: 0
          title: Limit
          type: integer
        style: form
      - description: Result offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      - description: Filter for transactions only at this given block height
        explode: true
        in: query
        name: height
        required: false
        schema:
          type: integer
        style: form
      - description: Include data from unanchored (i.e. unconfirmed) microblocks
        example: true
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "Block hash or block height. Return data representing the state\
          \ up until that point in time, rather than the current block. Note - Use\
          \ either of the query parameters but not both at a time."
        examples:
          "60000":
            value: "60000"
          "0x4839a8b01cfb39ffcc0d07d3db31e848d5adf5279d529ed5062300b9f353ff79":
            value: 0x4839a8b01cfb39ffcc0d07d3db31e848d5adf5279d529ed5062300b9f353ff79
        explode: true
        in: query
        name: until_block
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: principal
        required: true
        schema:
          $ref: '#/components/schemas/get_filtered_events_address_parameter'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressTransactionsWithTransfersListResponse'
          description: Default Response
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get account transactions including STX transfers for each transaction.
      tags:
      - Accounts
  /extended/v1/address/{principal}/assets:
    get:
      description: "Retrieves a list of all assets events associated with an account\
        \ or a Contract Identifier. This includes Transfers, Mints."
      operationId: get_account_assets
      parameters:
      - description: Results per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 0
          title: Limit
          type: integer
        style: form
      - description: Result offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      - description: Include data from unanchored (i.e. unconfirmed) microblocks
        example: true
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "Block hash or block height. Return data representing the state\
          \ up until that point in time, rather than the current block. Note - Use\
          \ either of the query parameters but not both at a time."
        examples:
          "60000":
            value: "60000"
          "0x4839a8b01cfb39ffcc0d07d3db31e848d5adf5279d529ed5062300b9f353ff79":
            value: 0x4839a8b01cfb39ffcc0d07d3db31e848d5adf5279d529ed5062300b9f353ff79
        explode: true
        in: query
        name: until_block
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: principal
        required: true
        schema:
          $ref: '#/components/schemas/get_filtered_events_address_parameter'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressAssetsListResponse'
          description: Default Response
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get account assets
      tags:
      - Accounts
  /extended/v1/address/{principal}/stx_inbound:
    get:
      description: |-
        Retrieves a list of STX transfers with memos to the given principal. This includes regular transfers from a stx-transfer transaction type,
                and transfers from contract-call transactions a the `send-many-memo` bulk sending contract.
      operationId: get_account_inbound
      parameters:
      - description: Results per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 50
          minimum: 0
          title: Limit
          type: integer
        style: form
      - description: Result offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      - description: Filter for transactions only at this given block height
        explode: true
        in: query
        name: height
        required: false
        schema:
          type: integer
        style: form
      - description: Include data from unanchored (i.e. unconfirmed) microblocks
        example: true
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "Block hash or block height. Return data representing the state\
          \ up until that point in time, rather than the current block. Note - Use\
          \ either of the query parameters but not both at a time."
        examples:
          "60000":
            value: "60000"
          "0x4839a8b01cfb39ffcc0d07d3db31e848d5adf5279d529ed5062300b9f353ff79":
            value: 0x4839a8b01cfb39ffcc0d07d3db31e848d5adf5279d529ed5062300b9f353ff79
        explode: true
        in: query
        name: until_block
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: principal
        required: true
        schema:
          $ref: '#/components/schemas/get_filtered_events_address_parameter'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressStxInboundListResponse'
          description: Default Response
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get inbound STX transfers
      tags:
      - Accounts
  /extended/v1/address/{principal}/mempool:
    get:
      description: Retrieves all transactions for a given address that are currently
        in mempool
      operationId: get_address_mempool_transactions
      parameters:
      - description: Results per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 50
          minimum: 0
          title: Limit
          type: integer
        style: form
      - description: Result offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      - description: Include data from unanchored (i.e. unconfirmed) microblocks
        example: true
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - explode: false
        in: path
        name: principal
        required: true
        schema:
          $ref: '#/components/schemas/get_filtered_events_address_parameter'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_mempool_transaction_list_200_response'
          description: List of mempool transactions
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Transactions for address
      tags:
      - Transactions
  /extended/v1/address/{principal}/nonces:
    get:
      description: "Retrieves the latest nonce values used by an account by inspecting\
        \ the mempool, microblock transactions, and anchored transactions."
      operationId: get_account_nonces
      parameters:
      - description: Optionally get the nonce at a given block height.
        example: 66119
        explode: true
        in: query
        name: block_height
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: Optionally get the nonce at a given block hash. Note - Use either
          of the query parameters but not both at a time.
        example: 0x72d53f3cba39e149dcd42708e535bdae03d73e60d2fe853aaf61c0b392f521e9
        explode: true
        in: query
        name: block_hash
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: principal
        required: true
        schema:
          $ref: '#/components/schemas/get_filtered_events_address_parameter'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressNonces'
          description: "The latest nonce values used by an account by inspecting the\
            \ mempool, microblock transactions, and anchored transactions"
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get the latest nonce used by an account
      tags:
      - Accounts
  /extended/v1/search/{id}:
    get:
      description: "Search blocks, transactions, contracts, or accounts by hash/ID"
      operationId: search_by_id
      parameters:
      - description: This includes the detailed data for purticular hash in the response
        explode: true
        in: query
        name: include_metadata
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "The hex hash string for a block or transaction, account address,\
          \ or contract address"
        example: 0xcf8b233f19f6c07d2dc1963302d2436efd36e9afac127bf6582824a13961c06d
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/search_by_id_200_response'
          description: Default Response
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/search_by_id_404_response'
          description: Default Response
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Search
      tags:
      - Search
  /extended/v1/{pox}/events:
    get:
      parameters:
      - description: Results per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 96
          maximum: 200
          minimum: 0
          title: Limit
          type: integer
        style: form
      - description: Result offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      - explode: false
        in: path
        name: pox
        required: true
        schema:
          $ref: '#/components/schemas/_extended_v1__pox__events_get_pox_parameter'
        style: simple
      responses:
        "200":
          description: Default Response
      summary: Get latest PoX events
      tags:
      - Stacking
  /extended/v1/{pox}/tx/{tx_id}:
    get:
      parameters:
      - explode: false
        in: path
        name: pox
        required: true
        schema:
          $ref: '#/components/schemas/_extended_v1__pox__events_get_pox_parameter'
        style: simple
      - explode: false
        in: path
        name: tx_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Default Response
      summary: Get PoX events for a transaction
      tags:
      - Stacking
  /extended/v1/{pox}/stacker/{principal}:
    get:
      parameters:
      - explode: false
        in: path
        name: pox
        required: true
        schema:
          $ref: '#/components/schemas/_extended_v1__pox__events_get_pox_parameter'
        style: simple
      - explode: false
        in: path
        name: principal
        required: true
        schema:
          $ref: '#/components/schemas/get_filtered_events_address_parameter'
        style: simple
      responses:
        "200":
          description: Default Response
      summary: Get events for a stacking address
      tags:
      - Stacking
  /extended/v1/{pox}/{pool_principal}/delegations:
    get:
      description: Retrieves the list of stacking pool members for a given delegator
        principal.
      operationId: get_pool_delegations
      parameters:
      - description: Results per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 200
          minimum: 0
          title: Limit
          type: integer
        style: form
      - description: Result offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      - description: "If specified, only delegation events after the given block will\
          \ be included"
        explode: true
        in: query
        name: after_block
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: height
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: Include data from unanchored (i.e. unconfirmed) microblocks
        example: true
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - explode: false
        in: path
        name: pox
        required: true
        schema:
          $ref: '#/components/schemas/_extended_v1__pox__events_get_pox_parameter'
        style: simple
      - description: Address principal of the stacking pool delegator
        example: SPSCWDV3RKV5ZRN1FQD84YE1NQFEDJ9R1F4DYQ11
        explode: false
        in: path
        name: pool_principal
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_pool_delegations_200_response'
          description: Default Response
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Stacking pool members
      tags:
      - Stacking
  /extended/v1/faucets/btc:
    post:
      description: |-
        Add 1 BTC token to the specified testnet BTC address.

                The endpoint returns the transaction ID, which you can use to view the transaction in a testnet Bitcoin block
                explorer. The tokens are delivered once the transaction has been included in a block.

                **Note:** This is a testnet only endpoint. This endpoint will not work on the mainnet.
      operationId: run_faucet_btc
      parameters:
      - description: A valid testnet BTC address
        example: 2N4M94S1ZPt8HfxydXzL2P7qyzgVq7MHWts
        explode: true
        in: query
        name: address
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/run_faucet_btc_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunFaucetResponse'
          description: POST request that initiates a transfer of tokens to a specified
            testnet address
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/run_faucet_btc_4XX_response'
          description: Default Response
      summary: Add testnet BTC tokens to address
      tags:
      - Faucets
  /extended/v1/faucets/btc/{address}:
    get:
      operationId: get_btc_balance
      parameters:
      - description: A valid testnet BTC address
        example: 2N4M94S1ZPt8HfxydXzL2P7qyzgVq7MHWts
        explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_btc_balance_200_response'
          description: Default Response
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/run_faucet_btc_4XX_response'
          description: Default Response
      summary: Get BTC balance for address
      tags:
      - Faucets
  /extended/v1/faucets/stx:
    post:
      description: |-
        Add 500 STX tokens to the specified testnet address. Testnet STX addresses begin with `ST`. If the `stacking`
                parameter is set to `true`, the faucet will add the required number of tokens for individual stacking to the
                specified testnet address.

                The endpoint returns the transaction ID, which you can use to view the transaction in the
                [Stacks Explorer](https://explorer.hiro.so/?chain=testnet). The tokens are delivered once the transaction has
                been included in an anchor block.

                A common reason for failed faucet transactions is that the faucet has run out of tokens. If you are experiencing
                failed faucet transactions to a testnet address, you can get help in [Discord](https://stacks.chat).

                **Note:** This is a testnet only endpoint. This endpoint will not work on the mainnet.
      operationId: run_faucet_stx
      parameters:
      - description: A valid testnet STX address
        example: ST3M7N9Q9HDRM7RVP1Q26P0EE69358PZZAZD7KMXQ
        explode: true
        in: query
        name: address
        required: false
        schema:
          type: string
        style: form
      - description: Request the amount of STX tokens needed for individual address
          stacking
        explode: true
        in: query
        name: stacking
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/run_faucet_stx_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunFaucetResponse_1'
          description: POST request that initiates a transfer of tokens to a specified
            testnet address
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/run_faucet_stx_4XX_response'
          description: Default Response
      summary: Get STX testnet tokens
      tags:
      - Faucets
  /extended/v2/blocks/:
    get:
      description: Retrieves a list of recently mined blocks
      operationId: get_blocks
      parameters:
      - description: Results per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 30
          minimum: 0
          title: Limit
          type: integer
        style: form
      - description: Result offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          maximum: 300
          minimum: -300
          title: Offset
          type: integer
        style: form
      - description: Cursor for pagination
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_blocks_200_response'
          description: Default Response
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get blocks
      tags:
      - Blocks
  /extended/v2/blocks/average-times:
    get:
      description: Retrieves average block times (in seconds)
      operationId: get_average_block_times
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_average_block_times_200_response'
          description: Default Response
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get average block times
      tags:
      - Blocks
  /extended/v2/blocks/{height_or_hash}:
    get:
      description: Retrieves a single block
      operationId: get_block
      parameters:
      - explode: false
        in: path
        name: height_or_hash
        required: true
        schema:
          $ref: '#/components/schemas/get_block_height_or_hash_parameter'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_blocks_200_response_results_inner'
          description: Default Response
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get block
      tags:
      - Blocks
  /extended/v2/blocks/{height_or_hash}/transactions:
    get:
      description: Retrieves transactions confirmed in a single block
      operationId: get_transactions_by_block
      parameters:
      - description: Results per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 50
          minimum: 0
          title: Limit
          type: integer
        style: form
      - description: Result offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      - explode: false
        in: path
        name: height_or_hash
        required: true
        schema:
          $ref: '#/components/schemas/get_block_height_or_hash_parameter'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_transactions_by_block_200_response'
          description: Default Response
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get transactions by block
      tags:
      - Transactions
  /extended/v2/blocks/{height_or_hash}/signer-signatures:
    get:
      description: Retrieves the signer signatures (an array of signature byte strings)
        in a single block
      operationId: get_signer_signatures_for_block
      parameters:
      - description: Results per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 500
          maximum: 1000
          minimum: 0
          title: Limit
          type: integer
        style: form
      - description: Result offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      - explode: false
        in: path
        name: height_or_hash
        required: true
        schema:
          $ref: '#/components/schemas/get_block_height_or_hash_parameter'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_signer_signatures_for_block_200_response'
          description: Default Response
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get signer signatures for block
      tags:
      - Blocks
  /extended/v2/burn-blocks/:
    get:
      description: Retrieves a list of recent burn blocks
      operationId: get_burn_blocks
      parameters:
      - description: Results per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 30
          minimum: 0
          title: Limit
          type: integer
        style: form
      - description: Result offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_burn_blocks_200_response'
          description: Default Response
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get burn blocks
      tags:
      - Burn Blocks
  /extended/v2/burn-blocks/{height_or_hash}:
    get:
      description: Retrieves a single burn block
      operationId: get_burn_block
      parameters:
      - explode: false
        in: path
        name: height_or_hash
        required: true
        schema:
          $ref: '#/components/schemas/get_burn_block_height_or_hash_parameter'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_burn_blocks_200_response_results_inner'
          description: Default Response
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get burn block
      tags:
      - Burn Blocks
  /extended/v2/burn-blocks/{height_or_hash}/blocks:
    get:
      description: Retrieves a list of blocks confirmed by a specific burn block
      operationId: get_blocks_by_burn_block
      parameters:
      - description: Results per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 30
          minimum: 0
          title: Limit
          type: integer
        style: form
      - description: Result offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      - explode: false
        in: path
        name: height_or_hash
        required: true
        schema:
          $ref: '#/components/schemas/get_burn_block_height_or_hash_parameter'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_blocks_by_burn_block_200_response'
          description: Default Response
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get blocks by burn block
      tags:
      - Burn Blocks
  /extended/v2/smart-contracts/status:
    get:
      description: Retrieves the deployment status of multiple smart contracts.
      operationId: get_smart_contracts_status
      parameters:
      - explode: true
        in: query
        name: contract_id
        required: true
        schema:
          $ref: '#/components/schemas/get_smart_contracts_status_contract_id_parameter'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/get_smart_contracts_status_200_response_value'
                type: object
          description: Default Response
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get smart contracts status
      tags:
      - Smart Contracts
  /extended/v2/mempool/fees:
    get:
      description: Returns estimated fee priorities (in micro-STX) for all transactions
        that are currently in the mempool. Also returns priorities separated by transaction
        type.
      operationId: get_mempool_fee_priorities
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_mempool_fee_priorities_200_response'
          description: Default Response
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get mempool transaction fee priorities
      tags:
      - Mempool
  /extended/v2/pox/cycles:
    get:
      description: Retrieves a list of PoX cycles
      operationId: get_pox_cycles
      parameters:
      - description: Results per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 60
          minimum: 0
          title: Limit
          type: integer
        style: form
      - description: Result offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_pox_cycles_200_response'
          description: Default Response
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get PoX cycles
      tags:
      - Proof of Transfer
  /extended/v2/pox/cycles/{cycle_number}:
    get:
      description: Retrieves details for a PoX cycle
      operationId: get_pox_cycle
      parameters:
      - description: PoX cycle number
        explode: false
        in: path
        name: cycle_number
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_pox_cycles_200_response_results_inner'
          description: Default Response
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get PoX cycle
      tags:
      - Proof of Transfer
  /extended/v2/pox/cycles/{cycle_number}/signers:
    get:
      description: Retrieves a list of signers in a PoX cycle
      operationId: get_pox_cycle_signers
      parameters:
      - description: Results per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 250
          minimum: 0
          title: Limit
          type: integer
        style: form
      - description: Result offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      - description: PoX cycle number
        explode: false
        in: path
        name: cycle_number
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_pox_cycle_signers_200_response'
          description: Default Response
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get signers in PoX cycle
      tags:
      - Proof of Transfer
  /extended/v2/pox/cycles/{cycle_number}/signers/{signer_key}:
    get:
      description: Retrieves details for a signer in a PoX cycle
      operationId: get_pox_cycle_signer
      parameters:
      - description: PoX cycle number
        explode: false
        in: path
        name: cycle_number
        required: true
        schema:
          type: integer
        style: simple
      - description: Signer key
        example: 0x038e3c4529395611be9abf6fa3b6987e81d402385e3d605a073f42f407565a4a3d
        explode: false
        in: path
        name: signer_key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_pox_cycle_signers_200_response_results_inner'
          description: Default Response
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get signer in PoX cycle
      tags:
      - Proof of Transfer
  /extended/v2/pox/cycles/{cycle_number}/signers/{signer_key}/stackers:
    get:
      description: Retrieves a list of stackers for a signer in a PoX cycle
      operationId: get_pox_cycle_signer_stackers
      parameters:
      - description: Results per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 200
          minimum: 0
          title: Limit
          type: integer
        style: form
      - description: Result offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      - description: PoX cycle number
        explode: false
        in: path
        name: cycle_number
        required: true
        schema:
          type: integer
        style: simple
      - description: Signer key
        example: 0x038e3c4529395611be9abf6fa3b6987e81d402385e3d605a073f42f407565a4a3d
        explode: false
        in: path
        name: signer_key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_pox_cycle_signer_stackers_200_response'
          description: Default Response
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get stackers for signer in PoX cycle
      tags:
      - Proof of Transfer
  /extended/v2/addresses/{address}/transactions:
    get:
      description: "Retrieves a paginated list of confirmed transactions sent or received\
        \ by a STX address or Smart Contract ID, alongside the total amount of STX\
        \ sent or received and the number of STX, FT and NFT transfers contained within\
        \ each transaction.\n        \n        More information on Transaction types\
        \ can be found [here](https://docs.stacks.co/understand-stacks/transactions#types)."
      operationId: get_address_transactions
      parameters:
      - description: Results per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 50
          minimum: 0
          title: Limit
          type: integer
        style: form
      - description: Result offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      - explode: false
        in: path
        name: address
        required: true
        schema:
          $ref: '#/components/schemas/get_filtered_events_address_parameter'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_address_transactions_200_response'
          description: Default Response
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get address transactions
      tags:
      - Transactions
  /extended/v2/addresses/{address}/transactions/{tx_id}/events:
    get:
      description: "Retrieves a paginated list of all STX, FT and NFT events concerning\
        \ a STX address or Smart Contract ID within a specific transaction."
      operationId: get_address_transaction_events
      parameters:
      - description: Results per page
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 50
          minimum: 0
          title: Limit
          type: integer
        style: form
      - description: Result offset
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          title: Offset
          type: integer
        style: form
      - explode: false
        in: path
        name: address
        required: true
        schema:
          $ref: '#/components/schemas/get_filtered_events_address_parameter'
        style: simple
      - description: Transaction ID
        example: 0xf6bd5f4a7b26184a3466340b2e99fd003b4962c0e382a7e4b6a13df3dd7a91c6
        explode: false
        in: path
        name: tx_id
        required: true
        schema:
          pattern: "^(0x)?[a-fA-F0-9]{64}$"
          title: Transaction ID
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_address_transaction_events_200_response'
          description: Default Response
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get events for an address transaction
      tags:
      - Transactions
  /v1/names/{name}/zonefile/{zoneFileHash}:
    get:
      description: Retrieves the historical zonefile specified by the username and
        zone hash.
      operationId: get_historical_zone_file
      parameters:
      - description: Include data from unanchored (i.e. unconfirmed) microblocks
        example: true
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: fully-qualified name
        example: muneeb.id
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: zone file hash
        example: b100a68235244b012854a95f9114695679002af9
        explode: false
        in: path
        name: zoneFileHash
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BnsFetchHistoricalZoneFileResponse'
          description: Fetches the historical zonefile specified by the username and
            zone hash.
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BnsError'
          description: Error
      summary: Get Historical Zone File
      tags:
      - Names
  /v1/names/{name}/subdomains:
    get:
      description: Retrieves the list of subdomains for a specific name
      operationId: fetch_subdomains_list_for_name
      parameters:
      - description: Include data from unanchored (i.e. unconfirmed) microblocks
        example: true
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: fully-qualified name
        example: id.blockstack
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - address_test.id.blockstack
              - previous_subdomain.id.blockstack
              - subdomain.id.blockstack
              - zonefile_test.id.blockstack
              - zone_test.id.blockstack
              schema:
                description: Fetch a list of subdomains in a name.
                items:
                  type: string
                title: GetAllSubdomainsInName
                type: array
          description: Fetch a list of subdomains in a name.
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get Name Subdomains
      tags:
      - Names
  /v1/names/{name}/zonefile:
    get:
      description: Retrieves a user's raw zone file. This only works for RFC-compliant
        zone files. This method returns an error for names that have non-standard
        zone files.
      operationId: fetch_zone_file
      parameters:
      - description: Include data from unanchored (i.e. unconfirmed) microblocks
        example: true
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: fully-qualified name
        example: bar.test
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BnsFetchFileZoneResponse'
          description: Fetch a user's raw zone file. This only works for RFC-compliant
            zone files. This method returns an error for names that have non-standard
            zone files.
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BnsError_1'
          description: Error
      summary: Get Zone File
      tags:
      - Names
  /v1/names/:
    get:
      description: Retrieves a list of all names known to the node.
      operationId: get_all_names
      parameters:
      - description: Include data from unanchored (i.e. unconfirmed) microblocks
        example: true
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: names are defaulted to page 1 with 100 results. You can query
          specific page results by using the 'page' query parameter.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                aldenquimby.id:
                  value: aldenquimby.id
                aldeoryn.id:
                  value: aldeoryn.id
                alderete.id:
                  value: alderete.id
                aldert.id:
                  value: aldert.id
                aldi.id:
                  value: aldi.id
                aldighieri.id:
                  value: aldighieri.id
              schema:
                description: Fetch a list of all names known to the node.
                items:
                  type: string
                title: BnsGetAllNamesResponse
                type: array
          description: Fetch a list of all names known to the node.
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BnsError'
          description: Error
      summary: Get All Names
      tags:
      - Names
  /v1/names/{name}:
    get:
      description: "Retrieves details of a given name including the `address`, `status`\
        \ and last transaction id - `last_txid`."
      operationId: get_name_info
      parameters:
      - description: Include data from unanchored (i.e. unconfirmed) microblocks
        example: true
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: fully-qualified name
        example: muneeb.id
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                address: 1J3PUxY5uDShUnHRrMyU6yKtoHEUPhKULs
                blockchain: stacks
                expire_block: 599266
                grace_period: false
                last_txid: 1edfa419f7b83f33e00830bc9409210da6c6d1db60f99eda10c835aa339cad6b
                renewal_deadline: 604266
                resolver: null
                status: registered
                zonefile: |
                  $ORIGIN muneeb.id
                  $TTL 3600
                  _http._tcp IN URI 10 1 "https://gaia.blockstack.org/hub/1J3PUxY5uDShUnHRrMyU6yKtoHEUPhKULs/0/profile.json"
                zonefile_hash: 37aecf837c6ae9bdc9dbd98a268f263dacd00361
              schema:
                $ref: '#/components/schemas/BnsGetNameInfoResponse'
          description: Get name details
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get Name Details
      tags:
      - Names
  /v1/namespaces/:
    get:
      description: Retrieves a list of all namespaces known to the node.
      operationId: get_all_namespaces
      parameters:
      - description: Include data from unanchored (i.e. unconfirmed) microblocks
        example: true
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_all_namespaces_200_response'
          description: Default Response
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get All Namespaces
      tags:
      - Names
  /v1/namespaces/{tld}/names:
    get:
      description: Retrieves a list of names within a given namespace.
      operationId: get_namespace_names
      parameters:
      - description: namespace values are defaulted to page 1 with 100 results. You
          can query specific page results by using the 'page' query parameter.
        example: 22
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: Include data from unanchored (i.e. unconfirmed) microblocks
        example: true
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: the namespace to fetch names from.
        example: id
        explode: false
        in: path
        name: tld
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
              - aldenquimby.id
              - aldeoryn.id
              - alderete.id
              - aldert.id
              - aldi.id
              - aldighieri.id
              schema:
                description: Fetch a list of names from the namespace.
                items:
                  type: string
                title: BnsGetAllNamespacesNamesResponse
                type: array
          description: Fetch a list of names from the namespace.
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get Namespace Names
      tags:
      - Names
  /v1/addresses/{blockchain}/{address}:
    get:
      description: Retrieves a list of names owned by the address provided.
      operationId: get_names_owned_by_address
      parameters:
      - description: Include data from unanchored (i.e. unconfirmed) microblocks
        example: true
        explode: true
        in: query
        name: unanchored
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: the layer-1 blockchain for the address
        example: stacks
        explode: false
        in: path
        name: blockchain
        required: true
        schema:
          type: string
        style: simple
      - description: the address to lookup
        example: SP2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKNRV9EJ7
        explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BnsNamesOwnByAddressResponse'
          description: Retrieves a list of names owned by the address provided.
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get Names Owned by Address
      tags:
      - Names
  /v2/prices/namespaces/{tld}:
    get:
      description: Retrieves the price of a namespace. The `amount` given will be
        in the smallest possible units of the currency.
      operationId: get_namespace_price
      parameters:
      - description: the namespace to fetch price for
        example: id
        explode: false
        in: path
        name: tld
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BnsGetNamespacePriceResponse'
          description: Fetch price for namespace.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BnsError'
          description: Error
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get Namespace Price
      tags:
      - Names
  /v2/prices/names/{name}:
    get:
      description: Retrieves the price of a name. The `amount` given will be in the
        smallest possible units of the currency.
      operationId: get_name_price
      parameters:
      - description: the name to query price information for
        example: muneeb.id
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BnsGetNamePriceResponse'
          description: Fetch price for name.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BnsError'
          description: Error
        "4XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error_Response'
          description: Default Response
      summary: Get Name Price
      tags:
      - Names
components:
  schemas:
    Api_Status_Response_chain_tip:
      example:
        index_block_hash: index_block_hash
        microblock_sequence: 5
        block_hash: block_hash
        microblock_hash: microblock_hash
        block_height: 5
        burn_block_height: 2
      nullable: true
      properties:
        block_height:
          description: the current block height
          type: integer
        block_hash:
          description: the current block hash
          type: string
        index_block_hash:
          description: the current index block hash
          type: string
        microblock_hash:
          description: the current microblock hash
          type: string
        microblock_sequence:
          description: the current microblock sequence number
          type: integer
        burn_block_height:
          description: the current burn chain block height
          type: integer
      required:
      - block_hash
      - block_height
      - burn_block_height
      - index_block_hash
      type: object
    Api_Status_Response:
      example:
        pox_v2_unlock_height: 6
        pox_v3_unlock_height: 1
        chain_tip:
          index_block_hash: index_block_hash
          microblock_sequence: 5
          block_hash: block_hash
          microblock_hash: microblock_hash
          block_height: 5
          burn_block_height: 2
        server_version: server_version
        pox_v1_unlock_height: 0
        status: status
      properties:
        server_version:
          description: the server version that is currently running
          type: string
        status:
          description: the current server status
          type: string
        pox_v1_unlock_height:
          nullable: true
          type: integer
        pox_v2_unlock_height:
          nullable: true
          type: integer
        pox_v3_unlock_height:
          nullable: true
          type: integer
        chain_tip:
          $ref: '#/components/schemas/Api_Status_Response_chain_tip'
      required:
      - server_version
      - status
      title: Api Status Response
      type: object
    Error_Response:
      additionalProperties: true
      example:
        error: error
        message: message
      properties:
        error:
          type: string
        message:
          type: string
      required:
      - error
      title: Error Response
      type: object
    get_transaction_list_type_parameter_inner:
      anyOf:
      - enum:
        - coinbase
        type: string
      - enum:
        - token_transfer
        type: string
      - enum:
        - smart_contract
        type: string
      - enum:
        - contract_call
        type: string
      - enum:
        - poison_microblock
        type: string
      - enum:
        - tenure_change
        type: string
    get_transaction_list_order_parameter:
      anyOf:
      - enum:
        - asc
        type: string
      - enum:
        - desc
        type: string
    get_transaction_list_sort_by_parameter:
      anyOf:
      - enum:
        - block_height
        type: string
      - enum:
        - burn_block_time
        type: string
      - enum:
        - fee
        type: string
      default: block_height
    TokenTransferTransaction_post_condition_mode:
      anyOf:
      - enum:
        - allow
        type: string
      - enum:
        - deny
        type: string
    TokenTransferTransaction_post_conditions_inner_anyOf_principal_anyOf:
      example:
        type_id: principal_origin
      properties:
        type_id:
          enum:
          - principal_origin
          type: string
      required:
      - type_id
      type: object
    TokenTransferTransaction_post_conditions_inner_anyOf_principal_anyOf_1:
      properties:
        type_id:
          enum:
          - principal_standard
          type: string
        address:
          type: string
      required:
      - address
      - type_id
      type: object
    TokenTransferTransaction_post_conditions_inner_anyOf_principal_anyOf_2:
      properties:
        type_id:
          enum:
          - principal_contract
          type: string
        address:
          type: string
        contract_name:
          type: string
      required:
      - address
      - contract_name
      - type_id
      type: object
    TokenTransferTransaction_post_conditions_inner_anyOf_principal:
      anyOf:
      - $ref: '#/components/schemas/TokenTransferTransaction_post_conditions_inner_anyOf_principal_anyOf'
      - $ref: '#/components/schemas/TokenTransferTransaction_post_conditions_inner_anyOf_principal_anyOf_1'
      - $ref: '#/components/schemas/TokenTransferTransaction_post_conditions_inner_anyOf_principal_anyOf_2'
    TokenTransferTransaction_post_conditions_inner_anyOf_condition_code:
      anyOf:
      - enum:
        - sent_equal_to
        type: string
      - enum:
        - sent_greater_than
        type: string
      - enum:
        - sent_greater_than_or_equal_to
        type: string
      - enum:
        - sent_less_than
        type: string
      - enum:
        - sent_less_than_or_equal_to
        type: string
    TokenTransferTransaction_post_conditions_inner_anyOf:
      example:
        principal:
          type_id: principal_origin
        amount: amount
        type: stx
        condition_code: sent_equal_to
      properties:
        principal:
          $ref: '#/components/schemas/TokenTransferTransaction_post_conditions_inner_anyOf_principal'
        condition_code:
          $ref: '#/components/schemas/TokenTransferTransaction_post_conditions_inner_anyOf_condition_code'
        amount:
          type: string
        type:
          enum:
          - stx
          type: string
      required:
      - amount
      - condition_code
      - principal
      - type
      type: object
    TokenTransferTransaction_post_conditions_inner_anyOf_1_asset:
      properties:
        asset_name:
          type: string
        contract_address:
          type: string
        contract_name:
          type: string
      required:
      - asset_name
      - contract_address
      - contract_name
      type: object
    TokenTransferTransaction_post_conditions_inner_anyOf_1:
      properties:
        principal:
          $ref: '#/components/schemas/TokenTransferTransaction_post_conditions_inner_anyOf_principal'
        condition_code:
          $ref: '#/components/schemas/TokenTransferTransaction_post_conditions_inner_anyOf_condition_code'
        amount:
          type: string
        type:
          enum:
          - fungible
          type: string
        asset:
          $ref: '#/components/schemas/TokenTransferTransaction_post_conditions_inner_anyOf_1_asset'
      required:
      - amount
      - asset
      - condition_code
      - principal
      - type
      type: object
    TokenTransferTransaction_post_conditions_inner_anyOf_2_condition_code:
      anyOf:
      - enum:
        - sent
        type: string
      - enum:
        - not_sent
        type: string
    TokenTransferTransaction_post_conditions_inner_anyOf_2_asset_value:
      example:
        repr: repr
        hex: hex
      properties:
        hex:
          type: string
        repr:
          type: string
      required:
      - hex
      - repr
      type: object
    TokenTransferTransaction_post_conditions_inner_anyOf_2:
      properties:
        principal:
          $ref: '#/components/schemas/TokenTransferTransaction_post_conditions_inner_anyOf_principal'
        condition_code:
          $ref: '#/components/schemas/TokenTransferTransaction_post_conditions_inner_anyOf_2_condition_code'
        type:
          enum:
          - non_fungible
          type: string
        asset_value:
          $ref: '#/components/schemas/TokenTransferTransaction_post_conditions_inner_anyOf_2_asset_value'
        asset:
          $ref: '#/components/schemas/TokenTransferTransaction_post_conditions_inner_anyOf_1_asset'
      required:
      - asset
      - asset_value
      - condition_code
      - principal
      - type
      type: object
    TokenTransferTransaction_post_conditions_inner:
      anyOf:
      - $ref: '#/components/schemas/TokenTransferTransaction_post_conditions_inner_anyOf'
      - $ref: '#/components/schemas/TokenTransferTransaction_post_conditions_inner_anyOf_1'
      - $ref: '#/components/schemas/TokenTransferTransaction_post_conditions_inner_anyOf_2'
    TokenTransferTransaction_anchor_mode:
      anyOf:
      - enum:
        - on_chain_only
        type: string
      - enum:
        - off_chain_only
        type: string
      - enum:
        - any
        type: string
      description: "`on_chain_only`: the transaction MUST be included in an anchored\
        \ block, `off_chain_only`: the transaction MUST be included in a microblock,\
        \ `any`: the leader can choose where to include the transaction."
    TokenTransferTransaction_tx_status:
      anyOf:
      - enum:
        - success
        type: string
      - enum:
        - abort_by_response
        type: string
      - enum:
        - abort_by_post_condition
        type: string
      description: Status of the transaction
    TokenTransferTransaction_tx_result:
      additionalProperties: false
      description: "Result of the transaction. For contract calls, this will show\
        \ the value returned by the call. For other transaction types, this will return\
        \ a boolean indicating the success of the transaction."
      example:
        repr: repr
        hex: hex
      properties:
        hex:
          description: Hex string representing the value fo the transaction result
          type: string
        repr:
          description: Readable string of the transaction result
          type: string
      required:
      - hex
      - repr
      type: object
    SmartContractLogTransactionEvent_allOf_contract_log:
      example:
        contract_id: contract_id
        topic: topic
        value:
          repr: repr
          hex: hex
      properties:
        contract_id:
          type: string
        topic:
          type: string
        value:
          $ref: '#/components/schemas/TokenTransferTransaction_post_conditions_inner_anyOf_2_asset_value'
      required:
      - contract_id
      - topic
      - value
      type: object
    SmartContractLogTransactionEvent:
      allOf:
      - properties:
          event_index:
            type: integer
        required:
        - event_index
        title: AbstractTransactionEvent
        type: object
      - properties:
          event_type:
            enum:
            - smart_contract_log
            type: string
          tx_id:
            type: string
          contract_log:
            $ref: '#/components/schemas/SmartContractLogTransactionEvent_allOf_contract_log'
        required:
        - contract_log
        - event_type
        - tx_id
        type: object
      description: Only present in `smart_contract` and `contract_call` tx types.
      example:
        event_type: smart_contract_log
        contract_log:
          contract_id: contract_id
          topic: topic
          value:
            repr: repr
            hex: hex
        tx_id: tx_id
        event_index: 6
      title: SmartContractLogTransactionEvent
      type: object
    StxLockTransactionEvent_allOf_stx_lock_event:
      properties:
        locked_amount:
          type: string
        unlock_height:
          type: integer
        locked_address:
          type: string
      required:
      - locked_address
      - locked_amount
      - unlock_height
      type: object
    StxLockTransactionEvent:
      allOf:
      - properties:
          event_index:
            type: integer
        required:
        - event_index
        title: AbstractTransactionEvent
        type: object
      - properties:
          event_type:
            enum:
            - stx_lock
            type: string
          tx_id:
            type: string
          stx_lock_event:
            $ref: '#/components/schemas/StxLockTransactionEvent_allOf_stx_lock_event'
        required:
        - event_type
        - stx_lock_event
        - tx_id
        type: object
      description: Only present in `smart_contract` and `contract_call` tx types.
      title: StxLockTransactionEvent
      type: object
    StxAssetTransactionEvent_allOf_asset_asset_event_type:
      anyOf:
      - enum:
        - transfer
        type: string
      - enum:
        - mint
        type: string
      - enum:
        - burn
        type: string
    StxAssetTransactionEvent_allOf_asset:
      properties:
        asset_event_type:
          $ref: '#/components/schemas/StxAssetTransactionEvent_allOf_asset_asset_event_type'
        sender:
          type: string
        recipient:
          type: string
        amount:
          type: string
        memo:
          type: string
      required:
      - amount
      - asset_event_type
      - recipient
      - sender
      type: object
    StxAssetTransactionEvent:
      allOf:
      - properties:
          event_index:
            type: integer
        required:
        - event_index
        title: AbstractTransactionEvent
        type: object
      - properties:
          event_type:
            enum:
            - stx_asset
            type: string
          tx_id:
            type: string
          asset:
            $ref: '#/components/schemas/StxAssetTransactionEvent_allOf_asset'
        required:
        - asset
        - event_type
        - tx_id
        type: object
      description: Only present in `smart_contract` and `contract_call` tx types.
      title: StxAssetTransactionEvent
      type: object
    FungibleTokenAssetTransactionEvent_allOf_asset:
      properties:
        asset_event_type:
          $ref: '#/components/schemas/StxAssetTransactionEvent_allOf_asset_asset_event_type'
        asset_id:
          type: string
        sender:
          type: string
        recipient:
          type: string
        amount:
          type: string
      required:
      - amount
      - asset_event_type
      - asset_id
      - recipient
      - sender
      type: object
    FungibleTokenAssetTransactionEvent:
      allOf:
      - properties:
          event_index:
            type: integer
        required:
        - event_index
        title: AbstractTransactionEvent
        type: object
      - properties:
          event_type:
            enum:
            - fungible_token_asset
            type: string
          tx_id:
            type: string
          asset:
            $ref: '#/components/schemas/FungibleTokenAssetTransactionEvent_allOf_asset'
        required:
        - asset
        - event_type
        - tx_id
        type: object
      title: FungibleTokenAssetTransactionEvent
      type: object
    NonFungibleTokenAssetTransactionEvent_allOf_asset:
      properties:
        asset_event_type:
          $ref: '#/components/schemas/StxAssetTransactionEvent_allOf_asset_asset_event_type'
        asset_id:
          type: string
        sender:
          type: string
        recipient:
          type: string
        value:
          $ref: '#/components/schemas/TokenTransferTransaction_post_conditions_inner_anyOf_2_asset_value'
      required:
      - asset_event_type
      - asset_id
      - recipient
      - sender
      - value
      type: object
    NonFungibleTokenAssetTransactionEvent:
      allOf:
      - properties:
          event_index:
            type: integer
        required:
        - event_index
        title: AbstractTransactionEvent
        type: object
      - properties:
          event_type:
            enum:
            - non_fungible_token_asset
            type: string
          tx_id:
            type: string
          asset:
            $ref: '#/components/schemas/NonFungibleTokenAssetTransactionEvent_allOf_asset'
        required:
        - asset
        - event_type
        - tx_id
        type: object
      title: NonFungibleTokenAssetTransactionEvent
      type: object
    TokenTransferTransaction_events_inner:
      anyOf:
      - $ref: '#/components/schemas/SmartContractLogTransactionEvent'
      - $ref: '#/components/schemas/StxLockTransactionEvent'
      - $ref: '#/components/schemas/StxAssetTransactionEvent'
      - $ref: '#/components/schemas/FungibleTokenAssetTransactionEvent'
      - $ref: '#/components/schemas/NonFungibleTokenAssetTransactionEvent'
    TokenTransferTransaction_token_transfer:
      example:
        amount: amount
        memo: memo
        recipient_address: recipient_address
      properties:
        recipient_address:
          type: string
        amount:
          description: Transfer amount as Integer string (64-bit unsigned integer)
          type: string
        memo:
          description: "Hex encoded arbitrary message, up to 34 bytes length (should\
            \ try decoding to an ASCII string)"
          type: string
      required:
      - amount
      - memo
      - recipient_address
      type: object
    TokenTransferTransaction:
      example:
        tx_status: success
        execution_cost_write_count: 1
        execution_cost_read_length: 7
        event_count: 3
        block_height: 1
        block_time: 5.962133916683182
        post_conditions:
        - principal:
            type_id: principal_origin
          amount: amount
          type: stx
          condition_code: sent_equal_to
        - principal:
            type_id: principal_origin
          amount: amount
          type: stx
          condition_code: sent_equal_to
        post_condition_mode: allow
        sponsor_nonce: 6
        execution_cost_write_length: 1
        anchor_mode: on_chain_only
        tx_index: 9
        is_unanchored: true
        microblock_canonical: true
        tx_type: token_transfer
        events:
        - event_type: smart_contract_log
          contract_log:
            contract_id: contract_id
            topic: topic
            value:
              repr: repr
              hex: hex
          tx_id: tx_id
          event_index: 6
        - event_type: smart_contract_log
          contract_log:
            contract_id: contract_id
            topic: topic
            value:
              repr: repr
              hex: hex
          tx_id: tx_id
          event_index: 6
        microblock_sequence: 2
        burn_block_time_iso: burn_block_time_iso
        token_transfer:
          amount: amount
          memo: memo
          recipient_address: recipient_address
        block_hash: block_hash
        sponsored: true
        parent_block_hash: parent_block_hash
        canonical: true
        tx_id: tx_id
        nonce: 0
        burn_block_height: 2
        parent_burn_block_time_iso: parent_burn_block_time_iso
        fee_rate: fee_rate
        sender_address: sender_address
        execution_cost_runtime: 1
        block_time_iso: block_time_iso
        tx_result:
          repr: repr
          hex: hex
        execution_cost_read_count: 4
        burn_block_time: 5
        parent_burn_block_time: 7
        microblock_hash: microblock_hash
        sponsor_address: sponsor_address
      properties:
        tx_id:
          description: Transaction ID
          type: string
        nonce:
          description: "Used for ordering the transactions originating from and paying\
            \ from an account. The nonce ensures that a transaction is processed at\
            \ most once. The nonce counts the number of times an account's owner(s)\
            \ have authorized a transaction. The first transaction from an account\
            \ will have a nonce value equal to 0, the second will have a nonce value\
            \ equal to 1, and so on."
          type: integer
        fee_rate:
          description: Transaction fee as Integer string (64-bit unsigned integer).
          type: string
        sender_address:
          description: Address of the transaction initiator
          type: string
        sponsor_nonce:
          type: integer
        sponsored:
          description: Denotes whether the originating account is the same as the
            paying account
          type: boolean
        sponsor_address:
          type: string
        post_condition_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_post_condition_mode'
        post_conditions:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_post_conditions_inner'
          type: array
        anchor_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_anchor_mode'
        block_hash:
          description: Hash of the blocked this transactions was associated with
          type: string
        block_height:
          description: Height of the block this transactions was associated with
          type: integer
        block_time:
          description: Unix timestamp (in seconds) indicating when this block was
            mined.
          type: number
        block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) indicating when this
            block was mined.
          type: string
        burn_block_time:
          description: Unix timestamp (in seconds) indicating when this block was
            mined.
          type: integer
        burn_block_height:
          description: Height of the anchor burn block.
          type: integer
        burn_block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when this block was mined.
          type: string
        parent_burn_block_time:
          description: Unix timestamp (in seconds) indicating when this parent block
            was mined
          type: integer
        parent_burn_block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when this parent block was mined.
          type: string
        canonical:
          description: Set to `true` if block corresponds to the canonical chain tip
          type: boolean
        tx_index:
          description: "Index of the transaction, indicating the order. Starts at\
            \ `0` and increases with each transaction"
          type: integer
        tx_status:
          $ref: '#/components/schemas/TokenTransferTransaction_tx_status'
        tx_result:
          $ref: '#/components/schemas/TokenTransferTransaction_tx_result'
        event_count:
          description: Number of transaction events
          type: integer
        parent_block_hash:
          description: Hash of the previous block.
          type: string
        is_unanchored:
          description: True if the transaction is included in a microblock that has
            not been confirmed by an anchor block.
          type: boolean
        microblock_hash:
          description: The microblock hash that this transaction was streamed in.
            If the transaction was batched in an anchor block (not included within
            a microblock) then this value will be an empty string.
          type: string
        microblock_sequence:
          description: "The microblock sequence number that this transaction was streamed\
            \ in. If the transaction was batched in an anchor block (not included\
            \ within a microblock) then this value will be 2147483647 (0x7fffffff,\
            \ the max int32 value), this value preserves logical transaction ordering\
            \ on (block_height, microblock_sequence, tx_index)."
          type: integer
        microblock_canonical:
          description: "Set to `true` if microblock is anchored in the canonical chain\
            \ tip, `false` if the transaction was orphaned in a micro-fork."
          type: boolean
        execution_cost_read_count:
          description: Execution cost read count.
          type: integer
        execution_cost_read_length:
          description: Execution cost read length.
          type: integer
        execution_cost_runtime:
          description: Execution cost runtime.
          type: integer
        execution_cost_write_count:
          description: Execution cost write count.
          type: integer
        execution_cost_write_length:
          description: Execution cost write length.
          type: integer
        events:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_events_inner'
          type: array
        tx_type:
          enum:
          - token_transfer
          type: string
        token_transfer:
          $ref: '#/components/schemas/TokenTransferTransaction_token_transfer'
      required:
      - anchor_mode
      - block_hash
      - block_height
      - block_time
      - block_time_iso
      - burn_block_height
      - burn_block_time
      - burn_block_time_iso
      - canonical
      - event_count
      - events
      - execution_cost_read_count
      - execution_cost_read_length
      - execution_cost_runtime
      - execution_cost_write_count
      - execution_cost_write_length
      - fee_rate
      - is_unanchored
      - microblock_canonical
      - microblock_hash
      - microblock_sequence
      - nonce
      - parent_block_hash
      - parent_burn_block_time
      - parent_burn_block_time_iso
      - post_condition_mode
      - post_conditions
      - sender_address
      - sponsored
      - token_transfer
      - tx_id
      - tx_index
      - tx_result
      - tx_status
      - tx_type
      title: TokenTransferTransaction
      type: object
    SmartContractTransaction_smart_contract:
      properties:
        clarity_version:
          description: "The Clarity version of the contract, only specified for versioned\
            \ contract transactions, otherwise null"
          nullable: true
          type: number
        contract_id:
          description: Contract identifier formatted as `<principaladdress>.<contract_name>`
          type: string
        source_code:
          description: Clarity code of the smart contract being deployed
          type: string
      required:
      - clarity_version
      - contract_id
      - source_code
      type: object
    SmartContractTransaction:
      properties:
        tx_id:
          description: Transaction ID
          type: string
        nonce:
          description: "Used for ordering the transactions originating from and paying\
            \ from an account. The nonce ensures that a transaction is processed at\
            \ most once. The nonce counts the number of times an account's owner(s)\
            \ have authorized a transaction. The first transaction from an account\
            \ will have a nonce value equal to 0, the second will have a nonce value\
            \ equal to 1, and so on."
          type: integer
        fee_rate:
          description: Transaction fee as Integer string (64-bit unsigned integer).
          type: string
        sender_address:
          description: Address of the transaction initiator
          type: string
        sponsor_nonce:
          type: integer
        sponsored:
          description: Denotes whether the originating account is the same as the
            paying account
          type: boolean
        sponsor_address:
          type: string
        post_condition_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_post_condition_mode'
        post_conditions:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_post_conditions_inner'
          type: array
        anchor_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_anchor_mode'
        block_hash:
          description: Hash of the blocked this transactions was associated with
          type: string
        block_height:
          description: Height of the block this transactions was associated with
          type: integer
        block_time:
          description: Unix timestamp (in seconds) indicating when this block was
            mined.
          type: number
        block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) indicating when this
            block was mined.
          type: string
        burn_block_time:
          description: Unix timestamp (in seconds) indicating when this block was
            mined.
          type: integer
        burn_block_height:
          description: Height of the anchor burn block.
          type: integer
        burn_block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when this block was mined.
          type: string
        parent_burn_block_time:
          description: Unix timestamp (in seconds) indicating when this parent block
            was mined
          type: integer
        parent_burn_block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when this parent block was mined.
          type: string
        canonical:
          description: Set to `true` if block corresponds to the canonical chain tip
          type: boolean
        tx_index:
          description: "Index of the transaction, indicating the order. Starts at\
            \ `0` and increases with each transaction"
          type: integer
        tx_status:
          $ref: '#/components/schemas/TokenTransferTransaction_tx_status'
        tx_result:
          $ref: '#/components/schemas/TokenTransferTransaction_tx_result'
        event_count:
          description: Number of transaction events
          type: integer
        parent_block_hash:
          description: Hash of the previous block.
          type: string
        is_unanchored:
          description: True if the transaction is included in a microblock that has
            not been confirmed by an anchor block.
          type: boolean
        microblock_hash:
          description: The microblock hash that this transaction was streamed in.
            If the transaction was batched in an anchor block (not included within
            a microblock) then this value will be an empty string.
          type: string
        microblock_sequence:
          description: "The microblock sequence number that this transaction was streamed\
            \ in. If the transaction was batched in an anchor block (not included\
            \ within a microblock) then this value will be 2147483647 (0x7fffffff,\
            \ the max int32 value), this value preserves logical transaction ordering\
            \ on (block_height, microblock_sequence, tx_index)."
          type: integer
        microblock_canonical:
          description: "Set to `true` if microblock is anchored in the canonical chain\
            \ tip, `false` if the transaction was orphaned in a micro-fork."
          type: boolean
        execution_cost_read_count:
          description: Execution cost read count.
          type: integer
        execution_cost_read_length:
          description: Execution cost read length.
          type: integer
        execution_cost_runtime:
          description: Execution cost runtime.
          type: integer
        execution_cost_write_count:
          description: Execution cost write count.
          type: integer
        execution_cost_write_length:
          description: Execution cost write length.
          type: integer
        events:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_events_inner'
          type: array
        tx_type:
          enum:
          - smart_contract
          type: string
        smart_contract:
          $ref: '#/components/schemas/SmartContractTransaction_smart_contract'
      required:
      - anchor_mode
      - block_hash
      - block_height
      - block_time
      - block_time_iso
      - burn_block_height
      - burn_block_time
      - burn_block_time_iso
      - canonical
      - event_count
      - events
      - execution_cost_read_count
      - execution_cost_read_length
      - execution_cost_runtime
      - execution_cost_write_count
      - execution_cost_write_length
      - fee_rate
      - is_unanchored
      - microblock_canonical
      - microblock_hash
      - microblock_sequence
      - nonce
      - parent_block_hash
      - parent_burn_block_time
      - parent_burn_block_time_iso
      - post_condition_mode
      - post_conditions
      - sender_address
      - smart_contract
      - sponsored
      - tx_id
      - tx_index
      - tx_result
      - tx_status
      - tx_type
      title: SmartContractTransaction
      type: object
    ContractCallTransaction_contract_call_function_args_inner:
      additionalProperties: false
      description: List of arguments used to invoke the function
      properties:
        hex:
          type: string
        repr:
          type: string
        name:
          type: string
        type:
          type: string
      required:
      - hex
      - name
      - repr
      - type
      type: object
    ContractCallTransaction_contract_call:
      properties:
        contract_id:
          description: Contract identifier formatted as `<principaladdress>.<contract_name>`
          type: string
        function_name:
          description: Name of the Clarity function to be invoked
          type: string
        function_signature:
          description: "Function definition, including function name and type as well\
            \ as parameter names and types"
          type: string
        function_args:
          items:
            $ref: '#/components/schemas/ContractCallTransaction_contract_call_function_args_inner'
          type: array
      required:
      - contract_id
      - function_name
      - function_signature
      type: object
    ContractCallTransaction:
      properties:
        tx_id:
          description: Transaction ID
          type: string
        nonce:
          description: "Used for ordering the transactions originating from and paying\
            \ from an account. The nonce ensures that a transaction is processed at\
            \ most once. The nonce counts the number of times an account's owner(s)\
            \ have authorized a transaction. The first transaction from an account\
            \ will have a nonce value equal to 0, the second will have a nonce value\
            \ equal to 1, and so on."
          type: integer
        fee_rate:
          description: Transaction fee as Integer string (64-bit unsigned integer).
          type: string
        sender_address:
          description: Address of the transaction initiator
          type: string
        sponsor_nonce:
          type: integer
        sponsored:
          description: Denotes whether the originating account is the same as the
            paying account
          type: boolean
        sponsor_address:
          type: string
        post_condition_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_post_condition_mode'
        post_conditions:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_post_conditions_inner'
          type: array
        anchor_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_anchor_mode'
        block_hash:
          description: Hash of the blocked this transactions was associated with
          type: string
        block_height:
          description: Height of the block this transactions was associated with
          type: integer
        block_time:
          description: Unix timestamp (in seconds) indicating when this block was
            mined.
          type: number
        block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) indicating when this
            block was mined.
          type: string
        burn_block_time:
          description: Unix timestamp (in seconds) indicating when this block was
            mined.
          type: integer
        burn_block_height:
          description: Height of the anchor burn block.
          type: integer
        burn_block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when this block was mined.
          type: string
        parent_burn_block_time:
          description: Unix timestamp (in seconds) indicating when this parent block
            was mined
          type: integer
        parent_burn_block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when this parent block was mined.
          type: string
        canonical:
          description: Set to `true` if block corresponds to the canonical chain tip
          type: boolean
        tx_index:
          description: "Index of the transaction, indicating the order. Starts at\
            \ `0` and increases with each transaction"
          type: integer
        tx_status:
          $ref: '#/components/schemas/TokenTransferTransaction_tx_status'
        tx_result:
          $ref: '#/components/schemas/TokenTransferTransaction_tx_result'
        event_count:
          description: Number of transaction events
          type: integer
        parent_block_hash:
          description: Hash of the previous block.
          type: string
        is_unanchored:
          description: True if the transaction is included in a microblock that has
            not been confirmed by an anchor block.
          type: boolean
        microblock_hash:
          description: The microblock hash that this transaction was streamed in.
            If the transaction was batched in an anchor block (not included within
            a microblock) then this value will be an empty string.
          type: string
        microblock_sequence:
          description: "The microblock sequence number that this transaction was streamed\
            \ in. If the transaction was batched in an anchor block (not included\
            \ within a microblock) then this value will be 2147483647 (0x7fffffff,\
            \ the max int32 value), this value preserves logical transaction ordering\
            \ on (block_height, microblock_sequence, tx_index)."
          type: integer
        microblock_canonical:
          description: "Set to `true` if microblock is anchored in the canonical chain\
            \ tip, `false` if the transaction was orphaned in a micro-fork."
          type: boolean
        execution_cost_read_count:
          description: Execution cost read count.
          type: integer
        execution_cost_read_length:
          description: Execution cost read length.
          type: integer
        execution_cost_runtime:
          description: Execution cost runtime.
          type: integer
        execution_cost_write_count:
          description: Execution cost write count.
          type: integer
        execution_cost_write_length:
          description: Execution cost write length.
          type: integer
        events:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_events_inner'
          type: array
        tx_type:
          enum:
          - contract_call
          type: string
        contract_call:
          $ref: '#/components/schemas/ContractCallTransaction_contract_call'
      required:
      - anchor_mode
      - block_hash
      - block_height
      - block_time
      - block_time_iso
      - burn_block_height
      - burn_block_time
      - burn_block_time_iso
      - canonical
      - contract_call
      - event_count
      - events
      - execution_cost_read_count
      - execution_cost_read_length
      - execution_cost_runtime
      - execution_cost_write_count
      - execution_cost_write_length
      - fee_rate
      - is_unanchored
      - microblock_canonical
      - microblock_hash
      - microblock_sequence
      - nonce
      - parent_block_hash
      - parent_burn_block_time
      - parent_burn_block_time_iso
      - post_condition_mode
      - post_conditions
      - sender_address
      - sponsored
      - tx_id
      - tx_index
      - tx_result
      - tx_status
      - tx_type
      title: ContractCallTransaction
      type: object
    PoisonMicroblockTransaction_poison_microblock:
      properties:
        microblock_header_1:
          description: Hex encoded microblock header
          type: string
        microblock_header_2:
          description: Hex encoded microblock header
          type: string
      required:
      - microblock_header_1
      - microblock_header_2
      type: object
    PoisonMicroblockTransaction:
      properties:
        tx_id:
          description: Transaction ID
          type: string
        nonce:
          description: "Used for ordering the transactions originating from and paying\
            \ from an account. The nonce ensures that a transaction is processed at\
            \ most once. The nonce counts the number of times an account's owner(s)\
            \ have authorized a transaction. The first transaction from an account\
            \ will have a nonce value equal to 0, the second will have a nonce value\
            \ equal to 1, and so on."
          type: integer
        fee_rate:
          description: Transaction fee as Integer string (64-bit unsigned integer).
          type: string
        sender_address:
          description: Address of the transaction initiator
          type: string
        sponsor_nonce:
          type: integer
        sponsored:
          description: Denotes whether the originating account is the same as the
            paying account
          type: boolean
        sponsor_address:
          type: string
        post_condition_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_post_condition_mode'
        post_conditions:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_post_conditions_inner'
          type: array
        anchor_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_anchor_mode'
        block_hash:
          description: Hash of the blocked this transactions was associated with
          type: string
        block_height:
          description: Height of the block this transactions was associated with
          type: integer
        block_time:
          description: Unix timestamp (in seconds) indicating when this block was
            mined.
          type: number
        block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) indicating when this
            block was mined.
          type: string
        burn_block_time:
          description: Unix timestamp (in seconds) indicating when this block was
            mined.
          type: integer
        burn_block_height:
          description: Height of the anchor burn block.
          type: integer
        burn_block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when this block was mined.
          type: string
        parent_burn_block_time:
          description: Unix timestamp (in seconds) indicating when this parent block
            was mined
          type: integer
        parent_burn_block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when this parent block was mined.
          type: string
        canonical:
          description: Set to `true` if block corresponds to the canonical chain tip
          type: boolean
        tx_index:
          description: "Index of the transaction, indicating the order. Starts at\
            \ `0` and increases with each transaction"
          type: integer
        tx_status:
          $ref: '#/components/schemas/TokenTransferTransaction_tx_status'
        tx_result:
          $ref: '#/components/schemas/TokenTransferTransaction_tx_result'
        event_count:
          description: Number of transaction events
          type: integer
        parent_block_hash:
          description: Hash of the previous block.
          type: string
        is_unanchored:
          description: True if the transaction is included in a microblock that has
            not been confirmed by an anchor block.
          type: boolean
        microblock_hash:
          description: The microblock hash that this transaction was streamed in.
            If the transaction was batched in an anchor block (not included within
            a microblock) then this value will be an empty string.
          type: string
        microblock_sequence:
          description: "The microblock sequence number that this transaction was streamed\
            \ in. If the transaction was batched in an anchor block (not included\
            \ within a microblock) then this value will be 2147483647 (0x7fffffff,\
            \ the max int32 value), this value preserves logical transaction ordering\
            \ on (block_height, microblock_sequence, tx_index)."
          type: integer
        microblock_canonical:
          description: "Set to `true` if microblock is anchored in the canonical chain\
            \ tip, `false` if the transaction was orphaned in a micro-fork."
          type: boolean
        execution_cost_read_count:
          description: Execution cost read count.
          type: integer
        execution_cost_read_length:
          description: Execution cost read length.
          type: integer
        execution_cost_runtime:
          description: Execution cost runtime.
          type: integer
        execution_cost_write_count:
          description: Execution cost write count.
          type: integer
        execution_cost_write_length:
          description: Execution cost write length.
          type: integer
        events:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_events_inner'
          type: array
        tx_type:
          enum:
          - poison_microblock
          type: string
        poison_microblock:
          $ref: '#/components/schemas/PoisonMicroblockTransaction_poison_microblock'
      required:
      - anchor_mode
      - block_hash
      - block_height
      - block_time
      - block_time_iso
      - burn_block_height
      - burn_block_time
      - burn_block_time_iso
      - canonical
      - event_count
      - events
      - execution_cost_read_count
      - execution_cost_read_length
      - execution_cost_runtime
      - execution_cost_write_count
      - execution_cost_write_length
      - fee_rate
      - is_unanchored
      - microblock_canonical
      - microblock_hash
      - microblock_sequence
      - nonce
      - parent_block_hash
      - parent_burn_block_time
      - parent_burn_block_time_iso
      - poison_microblock
      - post_condition_mode
      - post_conditions
      - sender_address
      - sponsored
      - tx_id
      - tx_index
      - tx_result
      - tx_status
      - tx_type
      title: PoisonMicroblockTransaction
      type: object
    CoinbaseTransaction_coinbase_payload:
      properties:
        data:
          description: Hex encoded 32-byte scratch space for block leader's use
          type: string
        alt_recipient:
          description: "A principal that will receive the miner rewards for this coinbase\
            \ transaction. Can be either a standard principal or contract principal.\
            \ Only specified for `coinbase-to-alt-recipient` transaction types, otherwise\
            \ null."
          nullable: true
          type: string
        vrf_proof:
          description: Hex encoded 80-byte VRF proof
          nullable: true
          type: string
      required:
      - data
      type: object
    CoinbaseTransaction:
      properties:
        tx_id:
          description: Transaction ID
          type: string
        nonce:
          description: "Used for ordering the transactions originating from and paying\
            \ from an account. The nonce ensures that a transaction is processed at\
            \ most once. The nonce counts the number of times an account's owner(s)\
            \ have authorized a transaction. The first transaction from an account\
            \ will have a nonce value equal to 0, the second will have a nonce value\
            \ equal to 1, and so on."
          type: integer
        fee_rate:
          description: Transaction fee as Integer string (64-bit unsigned integer).
          type: string
        sender_address:
          description: Address of the transaction initiator
          type: string
        sponsor_nonce:
          type: integer
        sponsored:
          description: Denotes whether the originating account is the same as the
            paying account
          type: boolean
        sponsor_address:
          type: string
        post_condition_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_post_condition_mode'
        post_conditions:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_post_conditions_inner'
          type: array
        anchor_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_anchor_mode'
        block_hash:
          description: Hash of the blocked this transactions was associated with
          type: string
        block_height:
          description: Height of the block this transactions was associated with
          type: integer
        block_time:
          description: Unix timestamp (in seconds) indicating when this block was
            mined.
          type: number
        block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) indicating when this
            block was mined.
          type: string
        burn_block_time:
          description: Unix timestamp (in seconds) indicating when this block was
            mined.
          type: integer
        burn_block_height:
          description: Height of the anchor burn block.
          type: integer
        burn_block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when this block was mined.
          type: string
        parent_burn_block_time:
          description: Unix timestamp (in seconds) indicating when this parent block
            was mined
          type: integer
        parent_burn_block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when this parent block was mined.
          type: string
        canonical:
          description: Set to `true` if block corresponds to the canonical chain tip
          type: boolean
        tx_index:
          description: "Index of the transaction, indicating the order. Starts at\
            \ `0` and increases with each transaction"
          type: integer
        tx_status:
          $ref: '#/components/schemas/TokenTransferTransaction_tx_status'
        tx_result:
          $ref: '#/components/schemas/TokenTransferTransaction_tx_result'
        event_count:
          description: Number of transaction events
          type: integer
        parent_block_hash:
          description: Hash of the previous block.
          type: string
        is_unanchored:
          description: True if the transaction is included in a microblock that has
            not been confirmed by an anchor block.
          type: boolean
        microblock_hash:
          description: The microblock hash that this transaction was streamed in.
            If the transaction was batched in an anchor block (not included within
            a microblock) then this value will be an empty string.
          type: string
        microblock_sequence:
          description: "The microblock sequence number that this transaction was streamed\
            \ in. If the transaction was batched in an anchor block (not included\
            \ within a microblock) then this value will be 2147483647 (0x7fffffff,\
            \ the max int32 value), this value preserves logical transaction ordering\
            \ on (block_height, microblock_sequence, tx_index)."
          type: integer
        microblock_canonical:
          description: "Set to `true` if microblock is anchored in the canonical chain\
            \ tip, `false` if the transaction was orphaned in a micro-fork."
          type: boolean
        execution_cost_read_count:
          description: Execution cost read count.
          type: integer
        execution_cost_read_length:
          description: Execution cost read length.
          type: integer
        execution_cost_runtime:
          description: Execution cost runtime.
          type: integer
        execution_cost_write_count:
          description: Execution cost write count.
          type: integer
        execution_cost_write_length:
          description: Execution cost write length.
          type: integer
        events:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_events_inner'
          type: array
        tx_type:
          enum:
          - coinbase
          type: string
        coinbase_payload:
          $ref: '#/components/schemas/CoinbaseTransaction_coinbase_payload'
      required:
      - anchor_mode
      - block_hash
      - block_height
      - block_time
      - block_time_iso
      - burn_block_height
      - burn_block_time
      - burn_block_time_iso
      - canonical
      - coinbase_payload
      - event_count
      - events
      - execution_cost_read_count
      - execution_cost_read_length
      - execution_cost_runtime
      - execution_cost_write_count
      - execution_cost_write_length
      - fee_rate
      - is_unanchored
      - microblock_canonical
      - microblock_hash
      - microblock_sequence
      - nonce
      - parent_block_hash
      - parent_burn_block_time
      - parent_burn_block_time_iso
      - post_condition_mode
      - post_conditions
      - sender_address
      - sponsored
      - tx_id
      - tx_index
      - tx_result
      - tx_status
      - tx_type
      title: CoinbaseTransaction
      type: object
    TenureChangeTransaction_tenure_change_payload_cause:
      anyOf:
      - enum:
        - block_found
        type: string
      - enum:
        - extended
        type: string
      description: "Cause of change in mining tenure. Depending on cause, tenure can\
        \ be ended or extended."
    TenureChangeTransaction_tenure_change_payload:
      properties:
        tenure_consensus_hash:
          description: Consensus hash of this tenure. Corresponds to the sortition
            in which the miner of this block was chosen.
          type: string
        prev_tenure_consensus_hash:
          description: Consensus hash of the previous tenure. Corresponds to the sortition
            of the previous winning block-commit.
          type: string
        burn_view_consensus_hash:
          description: Current consensus hash on the underlying burnchain. Corresponds
            to the last-seen sortition.
          type: string
        previous_tenure_end:
          description: (Hex string) Stacks Block hash
          type: string
        previous_tenure_blocks:
          description: The number of blocks produced in the previous tenure.
          type: integer
        cause:
          $ref: '#/components/schemas/TenureChangeTransaction_tenure_change_payload_cause'
        pubkey_hash:
          description: (Hex string) The ECDSA public key hash of the current tenure.
          type: string
      required:
      - burn_view_consensus_hash
      - cause
      - prev_tenure_consensus_hash
      - previous_tenure_blocks
      - previous_tenure_end
      - pubkey_hash
      - tenure_consensus_hash
      type: object
    TenureChangeTransaction:
      properties:
        tx_id:
          description: Transaction ID
          type: string
        nonce:
          description: "Used for ordering the transactions originating from and paying\
            \ from an account. The nonce ensures that a transaction is processed at\
            \ most once. The nonce counts the number of times an account's owner(s)\
            \ have authorized a transaction. The first transaction from an account\
            \ will have a nonce value equal to 0, the second will have a nonce value\
            \ equal to 1, and so on."
          type: integer
        fee_rate:
          description: Transaction fee as Integer string (64-bit unsigned integer).
          type: string
        sender_address:
          description: Address of the transaction initiator
          type: string
        sponsor_nonce:
          type: integer
        sponsored:
          description: Denotes whether the originating account is the same as the
            paying account
          type: boolean
        sponsor_address:
          type: string
        post_condition_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_post_condition_mode'
        post_conditions:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_post_conditions_inner'
          type: array
        anchor_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_anchor_mode'
        block_hash:
          description: Hash of the blocked this transactions was associated with
          type: string
        block_height:
          description: Height of the block this transactions was associated with
          type: integer
        block_time:
          description: Unix timestamp (in seconds) indicating when this block was
            mined.
          type: number
        block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) indicating when this
            block was mined.
          type: string
        burn_block_time:
          description: Unix timestamp (in seconds) indicating when this block was
            mined.
          type: integer
        burn_block_height:
          description: Height of the anchor burn block.
          type: integer
        burn_block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when this block was mined.
          type: string
        parent_burn_block_time:
          description: Unix timestamp (in seconds) indicating when this parent block
            was mined
          type: integer
        parent_burn_block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when this parent block was mined.
          type: string
        canonical:
          description: Set to `true` if block corresponds to the canonical chain tip
          type: boolean
        tx_index:
          description: "Index of the transaction, indicating the order. Starts at\
            \ `0` and increases with each transaction"
          type: integer
        tx_status:
          $ref: '#/components/schemas/TokenTransferTransaction_tx_status'
        tx_result:
          $ref: '#/components/schemas/TokenTransferTransaction_tx_result'
        event_count:
          description: Number of transaction events
          type: integer
        parent_block_hash:
          description: Hash of the previous block.
          type: string
        is_unanchored:
          description: True if the transaction is included in a microblock that has
            not been confirmed by an anchor block.
          type: boolean
        microblock_hash:
          description: The microblock hash that this transaction was streamed in.
            If the transaction was batched in an anchor block (not included within
            a microblock) then this value will be an empty string.
          type: string
        microblock_sequence:
          description: "The microblock sequence number that this transaction was streamed\
            \ in. If the transaction was batched in an anchor block (not included\
            \ within a microblock) then this value will be 2147483647 (0x7fffffff,\
            \ the max int32 value), this value preserves logical transaction ordering\
            \ on (block_height, microblock_sequence, tx_index)."
          type: integer
        microblock_canonical:
          description: "Set to `true` if microblock is anchored in the canonical chain\
            \ tip, `false` if the transaction was orphaned in a micro-fork."
          type: boolean
        execution_cost_read_count:
          description: Execution cost read count.
          type: integer
        execution_cost_read_length:
          description: Execution cost read length.
          type: integer
        execution_cost_runtime:
          description: Execution cost runtime.
          type: integer
        execution_cost_write_count:
          description: Execution cost write count.
          type: integer
        execution_cost_write_length:
          description: Execution cost write length.
          type: integer
        events:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_events_inner'
          type: array
        tx_type:
          enum:
          - tenure_change
          type: string
        tenure_change_payload:
          $ref: '#/components/schemas/TenureChangeTransaction_tenure_change_payload'
      required:
      - anchor_mode
      - block_hash
      - block_height
      - block_time
      - block_time_iso
      - burn_block_height
      - burn_block_time
      - burn_block_time_iso
      - canonical
      - event_count
      - events
      - execution_cost_read_count
      - execution_cost_read_length
      - execution_cost_runtime
      - execution_cost_write_count
      - execution_cost_write_length
      - fee_rate
      - is_unanchored
      - microblock_canonical
      - microblock_hash
      - microblock_sequence
      - nonce
      - parent_block_hash
      - parent_burn_block_time
      - parent_burn_block_time_iso
      - post_condition_mode
      - post_conditions
      - sender_address
      - sponsored
      - tenure_change_payload
      - tx_id
      - tx_index
      - tx_result
      - tx_status
      - tx_type
      title: TenureChangeTransaction
      type: object
    get_transaction_list_200_response_results_inner:
      anyOf:
      - $ref: '#/components/schemas/TokenTransferTransaction'
      - $ref: '#/components/schemas/SmartContractTransaction'
      - $ref: '#/components/schemas/ContractCallTransaction'
      - $ref: '#/components/schemas/PoisonMicroblockTransaction'
      - $ref: '#/components/schemas/CoinbaseTransaction'
      - $ref: '#/components/schemas/TenureChangeTransaction'
    get_transaction_list_200_response:
      description: List of transactions
      example:
        total: 1
        offset: 0
        limit: 20
        results:
        - tx_status: success
          execution_cost_write_count: 1
          execution_cost_read_length: 7
          event_count: 3
          block_height: 1
          block_time: 5.962133916683182
          post_conditions:
          - principal:
              type_id: principal_origin
            amount: amount
            type: stx
            condition_code: sent_equal_to
          - principal:
              type_id: principal_origin
            amount: amount
            type: stx
            condition_code: sent_equal_to
          post_condition_mode: allow
          sponsor_nonce: 6
          execution_cost_write_length: 1
          anchor_mode: on_chain_only
          tx_index: 9
          is_unanchored: true
          microblock_canonical: true
          tx_type: token_transfer
          events:
          - event_type: smart_contract_log
            contract_log:
              contract_id: contract_id
              topic: topic
              value:
                repr: repr
                hex: hex
            tx_id: tx_id
            event_index: 6
          - event_type: smart_contract_log
            contract_log:
              contract_id: contract_id
              topic: topic
              value:
                repr: repr
                hex: hex
            tx_id: tx_id
            event_index: 6
          microblock_sequence: 2
          burn_block_time_iso: burn_block_time_iso
          token_transfer:
            amount: amount
            memo: memo
            recipient_address: recipient_address
          block_hash: block_hash
          sponsored: true
          parent_block_hash: parent_block_hash
          canonical: true
          tx_id: tx_id
          nonce: 0
          burn_block_height: 2
          parent_burn_block_time_iso: parent_burn_block_time_iso
          fee_rate: fee_rate
          sender_address: sender_address
          execution_cost_runtime: 1
          block_time_iso: block_time_iso
          tx_result:
            repr: repr
            hex: hex
          execution_cost_read_count: 4
          burn_block_time: 5
          parent_burn_block_time: 7
          microblock_hash: microblock_hash
          sponsor_address: sponsor_address
        - tx_status: success
          execution_cost_write_count: 1
          execution_cost_read_length: 7
          event_count: 3
          block_height: 1
          block_time: 5.962133916683182
          post_conditions:
          - principal:
              type_id: principal_origin
            amount: amount
            type: stx
            condition_code: sent_equal_to
          - principal:
              type_id: principal_origin
            amount: amount
            type: stx
            condition_code: sent_equal_to
          post_condition_mode: allow
          sponsor_nonce: 6
          execution_cost_write_length: 1
          anchor_mode: on_chain_only
          tx_index: 9
          is_unanchored: true
          microblock_canonical: true
          tx_type: token_transfer
          events:
          - event_type: smart_contract_log
            contract_log:
              contract_id: contract_id
              topic: topic
              value:
                repr: repr
                hex: hex
            tx_id: tx_id
            event_index: 6
          - event_type: smart_contract_log
            contract_log:
              contract_id: contract_id
              topic: topic
              value:
                repr: repr
                hex: hex
            tx_id: tx_id
            event_index: 6
          microblock_sequence: 2
          burn_block_time_iso: burn_block_time_iso
          token_transfer:
            amount: amount
            memo: memo
            recipient_address: recipient_address
          block_hash: block_hash
          sponsored: true
          parent_block_hash: parent_block_hash
          canonical: true
          tx_id: tx_id
          nonce: 0
          burn_block_height: 2
          parent_burn_block_time_iso: parent_burn_block_time_iso
          fee_rate: fee_rate
          sender_address: sender_address
          execution_cost_runtime: 1
          block_time_iso: block_time_iso
          tx_result:
            repr: repr
            hex: hex
          execution_cost_read_count: 4
          burn_block_time: 5
          parent_burn_block_time: 7
          microblock_hash: microblock_hash
          sponsor_address: sponsor_address
      properties:
        limit:
          example: 20
          type: integer
        offset:
          example: 0
          type: integer
        total:
          example: 1
          type: integer
        results:
          items:
            $ref: '#/components/schemas/get_transaction_list_200_response_results_inner'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      type: object
    TokenTransferTransaction_1_post_condition_mode:
      anyOf:
      - type: string
      - type: string
    TokenTransferTransaction_1_post_conditions_inner_anyOf_principal_anyOf:
      properties:
        type_id:
          type: string
      required:
      - type_id
      type: object
    TokenTransferTransaction_1_post_conditions_inner_anyOf_principal_anyOf_1:
      properties:
        type_id:
          type: string
        address:
          type: string
      required:
      - address
      - type_id
      type: object
    TokenTransferTransaction_1_post_conditions_inner_anyOf_principal_anyOf_2:
      properties:
        type_id:
          type: string
        address:
          type: string
        contract_name:
          type: string
      required:
      - address
      - contract_name
      - type_id
      type: object
    TokenTransferTransaction_1_post_conditions_inner_anyOf_principal:
      anyOf:
      - $ref: '#/components/schemas/TokenTransferTransaction_1_post_conditions_inner_anyOf_principal_anyOf'
      - $ref: '#/components/schemas/TokenTransferTransaction_1_post_conditions_inner_anyOf_principal_anyOf_1'
      - $ref: '#/components/schemas/TokenTransferTransaction_1_post_conditions_inner_anyOf_principal_anyOf_2'
    TokenTransferTransaction_1_post_conditions_inner_anyOf_condition_code:
      anyOf:
      - type: string
      - type: string
      - type: string
      - type: string
      - type: string
    TokenTransferTransaction_1_post_conditions_inner_anyOf:
      properties:
        principal:
          $ref: '#/components/schemas/TokenTransferTransaction_1_post_conditions_inner_anyOf_principal'
        condition_code:
          $ref: '#/components/schemas/TokenTransferTransaction_1_post_conditions_inner_anyOf_condition_code'
        amount:
          type: string
        type:
          type: string
      required:
      - amount
      - condition_code
      - principal
      - type
      type: object
    TokenTransferTransaction_1_post_conditions_inner_anyOf_1:
      properties:
        principal:
          $ref: '#/components/schemas/TokenTransferTransaction_1_post_conditions_inner_anyOf_principal'
        condition_code:
          $ref: '#/components/schemas/TokenTransferTransaction_1_post_conditions_inner_anyOf_condition_code'
        amount:
          type: string
        type:
          type: string
        asset:
          $ref: '#/components/schemas/TokenTransferTransaction_post_conditions_inner_anyOf_1_asset'
      required:
      - amount
      - asset
      - condition_code
      - principal
      - type
      type: object
    TokenTransferTransaction_1_post_conditions_inner_anyOf_2:
      properties:
        principal:
          $ref: '#/components/schemas/TokenTransferTransaction_1_post_conditions_inner_anyOf_principal'
        condition_code:
          $ref: '#/components/schemas/TokenTransferTransaction_1_post_condition_mode'
        type:
          type: string
        asset_value:
          $ref: '#/components/schemas/TokenTransferTransaction_post_conditions_inner_anyOf_2_asset_value'
        asset:
          $ref: '#/components/schemas/TokenTransferTransaction_post_conditions_inner_anyOf_1_asset'
      required:
      - asset
      - asset_value
      - condition_code
      - principal
      - type
      type: object
    TokenTransferTransaction_1_post_conditions_inner:
      anyOf:
      - $ref: '#/components/schemas/TokenTransferTransaction_1_post_conditions_inner_anyOf'
      - $ref: '#/components/schemas/TokenTransferTransaction_1_post_conditions_inner_anyOf_1'
      - $ref: '#/components/schemas/TokenTransferTransaction_1_post_conditions_inner_anyOf_2'
    TokenTransferTransaction_1_anchor_mode:
      anyOf:
      - type: string
      - type: string
      - type: string
      description: "`on_chain_only`: the transaction MUST be included in an anchored\
        \ block, `off_chain_only`: the transaction MUST be included in a microblock,\
        \ `any`: the leader can choose where to include the transaction."
    TokenTransferTransaction_1_tx_status:
      anyOf:
      - type: string
      - type: string
      - type: string
      description: Status of the transaction
    SmartContractLogTransactionEvent_1:
      allOf:
      - properties:
          event_index:
            type: integer
        required:
        - event_index
        title: AbstractTransactionEvent
        type: object
      - properties:
          event_type:
            type: string
          tx_id:
            type: string
          contract_log:
            $ref: '#/components/schemas/SmartContractLogTransactionEvent_allOf_contract_log'
        required:
        - contract_log
        - event_type
        - tx_id
        type: object
      description: Only present in `smart_contract` and `contract_call` tx types.
      title: SmartContractLogTransactionEvent
      type: object
    StxLockTransactionEvent_1:
      allOf:
      - properties:
          event_index:
            type: integer
        required:
        - event_index
        title: AbstractTransactionEvent
        type: object
      - properties:
          event_type:
            type: string
          tx_id:
            type: string
          stx_lock_event:
            $ref: '#/components/schemas/StxLockTransactionEvent_allOf_stx_lock_event'
        required:
        - event_type
        - stx_lock_event
        - tx_id
        type: object
      description: Only present in `smart_contract` and `contract_call` tx types.
      title: StxLockTransactionEvent
      type: object
    StxAssetTransactionEvent_1_allOf_asset_asset_event_type:
      anyOf:
      - type: string
      - type: string
      - type: string
    StxAssetTransactionEvent_1_allOf_asset:
      properties:
        asset_event_type:
          $ref: '#/components/schemas/StxAssetTransactionEvent_1_allOf_asset_asset_event_type'
        sender:
          type: string
        recipient:
          type: string
        amount:
          type: string
        memo:
          type: string
      required:
      - amount
      - asset_event_type
      - recipient
      - sender
      type: object
    StxAssetTransactionEvent_1:
      allOf:
      - properties:
          event_index:
            type: integer
        required:
        - event_index
        title: AbstractTransactionEvent
        type: object
      - properties:
          event_type:
            type: string
          tx_id:
            type: string
          asset:
            $ref: '#/components/schemas/StxAssetTransactionEvent_1_allOf_asset'
        required:
        - asset
        - event_type
        - tx_id
        type: object
      description: Only present in `smart_contract` and `contract_call` tx types.
      title: StxAssetTransactionEvent
      type: object
    FungibleTokenAssetTransactionEvent_1_allOf_asset:
      properties:
        asset_event_type:
          $ref: '#/components/schemas/StxAssetTransactionEvent_1_allOf_asset_asset_event_type'
        asset_id:
          type: string
        sender:
          type: string
        recipient:
          type: string
        amount:
          type: string
      required:
      - amount
      - asset_event_type
      - asset_id
      - recipient
      - sender
      type: object
    FungibleTokenAssetTransactionEvent_1:
      allOf:
      - properties:
          event_index:
            type: integer
        required:
        - event_index
        title: AbstractTransactionEvent
        type: object
      - properties:
          event_type:
            type: string
          tx_id:
            type: string
          asset:
            $ref: '#/components/schemas/FungibleTokenAssetTransactionEvent_1_allOf_asset'
        required:
        - asset
        - event_type
        - tx_id
        type: object
      title: FungibleTokenAssetTransactionEvent
      type: object
    NonFungibleTokenAssetTransactionEvent_1_allOf_asset:
      properties:
        asset_event_type:
          $ref: '#/components/schemas/StxAssetTransactionEvent_1_allOf_asset_asset_event_type'
        asset_id:
          type: string
        sender:
          type: string
        recipient:
          type: string
        value:
          $ref: '#/components/schemas/TokenTransferTransaction_post_conditions_inner_anyOf_2_asset_value'
      required:
      - asset_event_type
      - asset_id
      - recipient
      - sender
      - value
      type: object
    NonFungibleTokenAssetTransactionEvent_1:
      allOf:
      - properties:
          event_index:
            type: integer
        required:
        - event_index
        title: AbstractTransactionEvent
        type: object
      - properties:
          event_type:
            type: string
          tx_id:
            type: string
          asset:
            $ref: '#/components/schemas/NonFungibleTokenAssetTransactionEvent_1_allOf_asset'
        required:
        - asset
        - event_type
        - tx_id
        type: object
      title: NonFungibleTokenAssetTransactionEvent
      type: object
    TokenTransferTransaction_1_events_inner:
      anyOf:
      - $ref: '#/components/schemas/SmartContractLogTransactionEvent_1'
      - $ref: '#/components/schemas/StxLockTransactionEvent_1'
      - $ref: '#/components/schemas/StxAssetTransactionEvent_1'
      - $ref: '#/components/schemas/FungibleTokenAssetTransactionEvent_1'
      - $ref: '#/components/schemas/NonFungibleTokenAssetTransactionEvent_1'
    TokenTransferTransaction_1:
      properties:
        tx_id:
          description: Transaction ID
          type: string
        nonce:
          description: "Used for ordering the transactions originating from and paying\
            \ from an account. The nonce ensures that a transaction is processed at\
            \ most once. The nonce counts the number of times an account's owner(s)\
            \ have authorized a transaction. The first transaction from an account\
            \ will have a nonce value equal to 0, the second will have a nonce value\
            \ equal to 1, and so on."
          type: integer
        fee_rate:
          description: Transaction fee as Integer string (64-bit unsigned integer).
          type: string
        sender_address:
          description: Address of the transaction initiator
          type: string
        sponsor_nonce:
          type: integer
        sponsored:
          description: Denotes whether the originating account is the same as the
            paying account
          type: boolean
        sponsor_address:
          type: string
        post_condition_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_1_post_condition_mode'
        post_conditions:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_1_post_conditions_inner'
          type: array
        anchor_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_1_anchor_mode'
        block_hash:
          description: Hash of the blocked this transactions was associated with
          type: string
        block_height:
          description: Height of the block this transactions was associated with
          type: integer
        block_time:
          description: Unix timestamp (in seconds) indicating when this block was
            mined.
          type: number
        block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) indicating when this
            block was mined.
          type: string
        burn_block_time:
          description: Unix timestamp (in seconds) indicating when this block was
            mined.
          type: integer
        burn_block_height:
          description: Height of the anchor burn block.
          type: integer
        burn_block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when this block was mined.
          type: string
        parent_burn_block_time:
          description: Unix timestamp (in seconds) indicating when this parent block
            was mined
          type: integer
        parent_burn_block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when this parent block was mined.
          type: string
        canonical:
          description: Set to `true` if block corresponds to the canonical chain tip
          type: boolean
        tx_index:
          description: "Index of the transaction, indicating the order. Starts at\
            \ `0` and increases with each transaction"
          type: integer
        tx_status:
          $ref: '#/components/schemas/TokenTransferTransaction_1_tx_status'
        tx_result:
          $ref: '#/components/schemas/TokenTransferTransaction_tx_result'
        event_count:
          description: Number of transaction events
          type: integer
        parent_block_hash:
          description: Hash of the previous block.
          type: string
        is_unanchored:
          description: True if the transaction is included in a microblock that has
            not been confirmed by an anchor block.
          type: boolean
        microblock_hash:
          description: The microblock hash that this transaction was streamed in.
            If the transaction was batched in an anchor block (not included within
            a microblock) then this value will be an empty string.
          type: string
        microblock_sequence:
          description: "The microblock sequence number that this transaction was streamed\
            \ in. If the transaction was batched in an anchor block (not included\
            \ within a microblock) then this value will be 2147483647 (0x7fffffff,\
            \ the max int32 value), this value preserves logical transaction ordering\
            \ on (block_height, microblock_sequence, tx_index)."
          type: integer
        microblock_canonical:
          description: "Set to `true` if microblock is anchored in the canonical chain\
            \ tip, `false` if the transaction was orphaned in a micro-fork."
          type: boolean
        execution_cost_read_count:
          description: Execution cost read count.
          type: integer
        execution_cost_read_length:
          description: Execution cost read length.
          type: integer
        execution_cost_runtime:
          description: Execution cost runtime.
          type: integer
        execution_cost_write_count:
          description: Execution cost write count.
          type: integer
        execution_cost_write_length:
          description: Execution cost write length.
          type: integer
        events:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_1_events_inner'
          type: array
        tx_type:
          type: string
        token_transfer:
          $ref: '#/components/schemas/TokenTransferTransaction_token_transfer'
      required:
      - anchor_mode
      - block_hash
      - block_height
      - block_time
      - block_time_iso
      - burn_block_height
      - burn_block_time
      - burn_block_time_iso
      - canonical
      - event_count
      - events
      - execution_cost_read_count
      - execution_cost_read_length
      - execution_cost_runtime
      - execution_cost_write_count
      - execution_cost_write_length
      - fee_rate
      - is_unanchored
      - microblock_canonical
      - microblock_hash
      - microblock_sequence
      - nonce
      - parent_block_hash
      - parent_burn_block_time
      - parent_burn_block_time_iso
      - post_condition_mode
      - post_conditions
      - sender_address
      - sponsored
      - token_transfer
      - tx_id
      - tx_index
      - tx_result
      - tx_status
      - tx_type
      title: TokenTransferTransaction
      type: object
    SmartContractTransaction_1:
      properties:
        tx_id:
          description: Transaction ID
          type: string
        nonce:
          description: "Used for ordering the transactions originating from and paying\
            \ from an account. The nonce ensures that a transaction is processed at\
            \ most once. The nonce counts the number of times an account's owner(s)\
            \ have authorized a transaction. The first transaction from an account\
            \ will have a nonce value equal to 0, the second will have a nonce value\
            \ equal to 1, and so on."
          type: integer
        fee_rate:
          description: Transaction fee as Integer string (64-bit unsigned integer).
          type: string
        sender_address:
          description: Address of the transaction initiator
          type: string
        sponsor_nonce:
          type: integer
        sponsored:
          description: Denotes whether the originating account is the same as the
            paying account
          type: boolean
        sponsor_address:
          type: string
        post_condition_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_1_post_condition_mode'
        post_conditions:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_1_post_conditions_inner'
          type: array
        anchor_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_1_anchor_mode'
        block_hash:
          description: Hash of the blocked this transactions was associated with
          type: string
        block_height:
          description: Height of the block this transactions was associated with
          type: integer
        block_time:
          description: Unix timestamp (in seconds) indicating when this block was
            mined.
          type: number
        block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) indicating when this
            block was mined.
          type: string
        burn_block_time:
          description: Unix timestamp (in seconds) indicating when this block was
            mined.
          type: integer
        burn_block_height:
          description: Height of the anchor burn block.
          type: integer
        burn_block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when this block was mined.
          type: string
        parent_burn_block_time:
          description: Unix timestamp (in seconds) indicating when this parent block
            was mined
          type: integer
        parent_burn_block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when this parent block was mined.
          type: string
        canonical:
          description: Set to `true` if block corresponds to the canonical chain tip
          type: boolean
        tx_index:
          description: "Index of the transaction, indicating the order. Starts at\
            \ `0` and increases with each transaction"
          type: integer
        tx_status:
          $ref: '#/components/schemas/TokenTransferTransaction_1_tx_status'
        tx_result:
          $ref: '#/components/schemas/TokenTransferTransaction_tx_result'
        event_count:
          description: Number of transaction events
          type: integer
        parent_block_hash:
          description: Hash of the previous block.
          type: string
        is_unanchored:
          description: True if the transaction is included in a microblock that has
            not been confirmed by an anchor block.
          type: boolean
        microblock_hash:
          description: The microblock hash that this transaction was streamed in.
            If the transaction was batched in an anchor block (not included within
            a microblock) then this value will be an empty string.
          type: string
        microblock_sequence:
          description: "The microblock sequence number that this transaction was streamed\
            \ in. If the transaction was batched in an anchor block (not included\
            \ within a microblock) then this value will be 2147483647 (0x7fffffff,\
            \ the max int32 value), this value preserves logical transaction ordering\
            \ on (block_height, microblock_sequence, tx_index)."
          type: integer
        microblock_canonical:
          description: "Set to `true` if microblock is anchored in the canonical chain\
            \ tip, `false` if the transaction was orphaned in a micro-fork."
          type: boolean
        execution_cost_read_count:
          description: Execution cost read count.
          type: integer
        execution_cost_read_length:
          description: Execution cost read length.
          type: integer
        execution_cost_runtime:
          description: Execution cost runtime.
          type: integer
        execution_cost_write_count:
          description: Execution cost write count.
          type: integer
        execution_cost_write_length:
          description: Execution cost write length.
          type: integer
        events:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_1_events_inner'
          type: array
        tx_type:
          type: string
        smart_contract:
          $ref: '#/components/schemas/SmartContractTransaction_smart_contract'
      required:
      - anchor_mode
      - block_hash
      - block_height
      - block_time
      - block_time_iso
      - burn_block_height
      - burn_block_time
      - burn_block_time_iso
      - canonical
      - event_count
      - events
      - execution_cost_read_count
      - execution_cost_read_length
      - execution_cost_runtime
      - execution_cost_write_count
      - execution_cost_write_length
      - fee_rate
      - is_unanchored
      - microblock_canonical
      - microblock_hash
      - microblock_sequence
      - nonce
      - parent_block_hash
      - parent_burn_block_time
      - parent_burn_block_time_iso
      - post_condition_mode
      - post_conditions
      - sender_address
      - smart_contract
      - sponsored
      - tx_id
      - tx_index
      - tx_result
      - tx_status
      - tx_type
      title: SmartContractTransaction
      type: object
    ContractCallTransaction_1:
      properties:
        tx_id:
          description: Transaction ID
          type: string
        nonce:
          description: "Used for ordering the transactions originating from and paying\
            \ from an account. The nonce ensures that a transaction is processed at\
            \ most once. The nonce counts the number of times an account's owner(s)\
            \ have authorized a transaction. The first transaction from an account\
            \ will have a nonce value equal to 0, the second will have a nonce value\
            \ equal to 1, and so on."
          type: integer
        fee_rate:
          description: Transaction fee as Integer string (64-bit unsigned integer).
          type: string
        sender_address:
          description: Address of the transaction initiator
          type: string
        sponsor_nonce:
          type: integer
        sponsored:
          description: Denotes whether the originating account is the same as the
            paying account
          type: boolean
        sponsor_address:
          type: string
        post_condition_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_1_post_condition_mode'
        post_conditions:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_1_post_conditions_inner'
          type: array
        anchor_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_1_anchor_mode'
        block_hash:
          description: Hash of the blocked this transactions was associated with
          type: string
        block_height:
          description: Height of the block this transactions was associated with
          type: integer
        block_time:
          description: Unix timestamp (in seconds) indicating when this block was
            mined.
          type: number
        block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) indicating when this
            block was mined.
          type: string
        burn_block_time:
          description: Unix timestamp (in seconds) indicating when this block was
            mined.
          type: integer
        burn_block_height:
          description: Height of the anchor burn block.
          type: integer
        burn_block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when this block was mined.
          type: string
        parent_burn_block_time:
          description: Unix timestamp (in seconds) indicating when this parent block
            was mined
          type: integer
        parent_burn_block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when this parent block was mined.
          type: string
        canonical:
          description: Set to `true` if block corresponds to the canonical chain tip
          type: boolean
        tx_index:
          description: "Index of the transaction, indicating the order. Starts at\
            \ `0` and increases with each transaction"
          type: integer
        tx_status:
          $ref: '#/components/schemas/TokenTransferTransaction_1_tx_status'
        tx_result:
          $ref: '#/components/schemas/TokenTransferTransaction_tx_result'
        event_count:
          description: Number of transaction events
          type: integer
        parent_block_hash:
          description: Hash of the previous block.
          type: string
        is_unanchored:
          description: True if the transaction is included in a microblock that has
            not been confirmed by an anchor block.
          type: boolean
        microblock_hash:
          description: The microblock hash that this transaction was streamed in.
            If the transaction was batched in an anchor block (not included within
            a microblock) then this value will be an empty string.
          type: string
        microblock_sequence:
          description: "The microblock sequence number that this transaction was streamed\
            \ in. If the transaction was batched in an anchor block (not included\
            \ within a microblock) then this value will be 2147483647 (0x7fffffff,\
            \ the max int32 value), this value preserves logical transaction ordering\
            \ on (block_height, microblock_sequence, tx_index)."
          type: integer
        microblock_canonical:
          description: "Set to `true` if microblock is anchored in the canonical chain\
            \ tip, `false` if the transaction was orphaned in a micro-fork."
          type: boolean
        execution_cost_read_count:
          description: Execution cost read count.
          type: integer
        execution_cost_read_length:
          description: Execution cost read length.
          type: integer
        execution_cost_runtime:
          description: Execution cost runtime.
          type: integer
        execution_cost_write_count:
          description: Execution cost write count.
          type: integer
        execution_cost_write_length:
          description: Execution cost write length.
          type: integer
        events:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_1_events_inner'
          type: array
        tx_type:
          type: string
        contract_call:
          $ref: '#/components/schemas/ContractCallTransaction_contract_call'
      required:
      - anchor_mode
      - block_hash
      - block_height
      - block_time
      - block_time_iso
      - burn_block_height
      - burn_block_time
      - burn_block_time_iso
      - canonical
      - contract_call
      - event_count
      - events
      - execution_cost_read_count
      - execution_cost_read_length
      - execution_cost_runtime
      - execution_cost_write_count
      - execution_cost_write_length
      - fee_rate
      - is_unanchored
      - microblock_canonical
      - microblock_hash
      - microblock_sequence
      - nonce
      - parent_block_hash
      - parent_burn_block_time
      - parent_burn_block_time_iso
      - post_condition_mode
      - post_conditions
      - sender_address
      - sponsored
      - tx_id
      - tx_index
      - tx_result
      - tx_status
      - tx_type
      title: ContractCallTransaction
      type: object
    PoisonMicroblockTransaction_1:
      properties:
        tx_id:
          description: Transaction ID
          type: string
        nonce:
          description: "Used for ordering the transactions originating from and paying\
            \ from an account. The nonce ensures that a transaction is processed at\
            \ most once. The nonce counts the number of times an account's owner(s)\
            \ have authorized a transaction. The first transaction from an account\
            \ will have a nonce value equal to 0, the second will have a nonce value\
            \ equal to 1, and so on."
          type: integer
        fee_rate:
          description: Transaction fee as Integer string (64-bit unsigned integer).
          type: string
        sender_address:
          description: Address of the transaction initiator
          type: string
        sponsor_nonce:
          type: integer
        sponsored:
          description: Denotes whether the originating account is the same as the
            paying account
          type: boolean
        sponsor_address:
          type: string
        post_condition_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_1_post_condition_mode'
        post_conditions:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_1_post_conditions_inner'
          type: array
        anchor_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_1_anchor_mode'
        block_hash:
          description: Hash of the blocked this transactions was associated with
          type: string
        block_height:
          description: Height of the block this transactions was associated with
          type: integer
        block_time:
          description: Unix timestamp (in seconds) indicating when this block was
            mined.
          type: number
        block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) indicating when this
            block was mined.
          type: string
        burn_block_time:
          description: Unix timestamp (in seconds) indicating when this block was
            mined.
          type: integer
        burn_block_height:
          description: Height of the anchor burn block.
          type: integer
        burn_block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when this block was mined.
          type: string
        parent_burn_block_time:
          description: Unix timestamp (in seconds) indicating when this parent block
            was mined
          type: integer
        parent_burn_block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when this parent block was mined.
          type: string
        canonical:
          description: Set to `true` if block corresponds to the canonical chain tip
          type: boolean
        tx_index:
          description: "Index of the transaction, indicating the order. Starts at\
            \ `0` and increases with each transaction"
          type: integer
        tx_status:
          $ref: '#/components/schemas/TokenTransferTransaction_1_tx_status'
        tx_result:
          $ref: '#/components/schemas/TokenTransferTransaction_tx_result'
        event_count:
          description: Number of transaction events
          type: integer
        parent_block_hash:
          description: Hash of the previous block.
          type: string
        is_unanchored:
          description: True if the transaction is included in a microblock that has
            not been confirmed by an anchor block.
          type: boolean
        microblock_hash:
          description: The microblock hash that this transaction was streamed in.
            If the transaction was batched in an anchor block (not included within
            a microblock) then this value will be an empty string.
          type: string
        microblock_sequence:
          description: "The microblock sequence number that this transaction was streamed\
            \ in. If the transaction was batched in an anchor block (not included\
            \ within a microblock) then this value will be 2147483647 (0x7fffffff,\
            \ the max int32 value), this value preserves logical transaction ordering\
            \ on (block_height, microblock_sequence, tx_index)."
          type: integer
        microblock_canonical:
          description: "Set to `true` if microblock is anchored in the canonical chain\
            \ tip, `false` if the transaction was orphaned in a micro-fork."
          type: boolean
        execution_cost_read_count:
          description: Execution cost read count.
          type: integer
        execution_cost_read_length:
          description: Execution cost read length.
          type: integer
        execution_cost_runtime:
          description: Execution cost runtime.
          type: integer
        execution_cost_write_count:
          description: Execution cost write count.
          type: integer
        execution_cost_write_length:
          description: Execution cost write length.
          type: integer
        events:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_1_events_inner'
          type: array
        tx_type:
          type: string
        poison_microblock:
          $ref: '#/components/schemas/PoisonMicroblockTransaction_poison_microblock'
      required:
      - anchor_mode
      - block_hash
      - block_height
      - block_time
      - block_time_iso
      - burn_block_height
      - burn_block_time
      - burn_block_time_iso
      - canonical
      - event_count
      - events
      - execution_cost_read_count
      - execution_cost_read_length
      - execution_cost_runtime
      - execution_cost_write_count
      - execution_cost_write_length
      - fee_rate
      - is_unanchored
      - microblock_canonical
      - microblock_hash
      - microblock_sequence
      - nonce
      - parent_block_hash
      - parent_burn_block_time
      - parent_burn_block_time_iso
      - poison_microblock
      - post_condition_mode
      - post_conditions
      - sender_address
      - sponsored
      - tx_id
      - tx_index
      - tx_result
      - tx_status
      - tx_type
      title: PoisonMicroblockTransaction
      type: object
    CoinbaseTransaction_1:
      properties:
        tx_id:
          description: Transaction ID
          type: string
        nonce:
          description: "Used for ordering the transactions originating from and paying\
            \ from an account. The nonce ensures that a transaction is processed at\
            \ most once. The nonce counts the number of times an account's owner(s)\
            \ have authorized a transaction. The first transaction from an account\
            \ will have a nonce value equal to 0, the second will have a nonce value\
            \ equal to 1, and so on."
          type: integer
        fee_rate:
          description: Transaction fee as Integer string (64-bit unsigned integer).
          type: string
        sender_address:
          description: Address of the transaction initiator
          type: string
        sponsor_nonce:
          type: integer
        sponsored:
          description: Denotes whether the originating account is the same as the
            paying account
          type: boolean
        sponsor_address:
          type: string
        post_condition_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_1_post_condition_mode'
        post_conditions:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_1_post_conditions_inner'
          type: array
        anchor_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_1_anchor_mode'
        block_hash:
          description: Hash of the blocked this transactions was associated with
          type: string
        block_height:
          description: Height of the block this transactions was associated with
          type: integer
        block_time:
          description: Unix timestamp (in seconds) indicating when this block was
            mined.
          type: number
        block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) indicating when this
            block was mined.
          type: string
        burn_block_time:
          description: Unix timestamp (in seconds) indicating when this block was
            mined.
          type: integer
        burn_block_height:
          description: Height of the anchor burn block.
          type: integer
        burn_block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when this block was mined.
          type: string
        parent_burn_block_time:
          description: Unix timestamp (in seconds) indicating when this parent block
            was mined
          type: integer
        parent_burn_block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when this parent block was mined.
          type: string
        canonical:
          description: Set to `true` if block corresponds to the canonical chain tip
          type: boolean
        tx_index:
          description: "Index of the transaction, indicating the order. Starts at\
            \ `0` and increases with each transaction"
          type: integer
        tx_status:
          $ref: '#/components/schemas/TokenTransferTransaction_1_tx_status'
        tx_result:
          $ref: '#/components/schemas/TokenTransferTransaction_tx_result'
        event_count:
          description: Number of transaction events
          type: integer
        parent_block_hash:
          description: Hash of the previous block.
          type: string
        is_unanchored:
          description: True if the transaction is included in a microblock that has
            not been confirmed by an anchor block.
          type: boolean
        microblock_hash:
          description: The microblock hash that this transaction was streamed in.
            If the transaction was batched in an anchor block (not included within
            a microblock) then this value will be an empty string.
          type: string
        microblock_sequence:
          description: "The microblock sequence number that this transaction was streamed\
            \ in. If the transaction was batched in an anchor block (not included\
            \ within a microblock) then this value will be 2147483647 (0x7fffffff,\
            \ the max int32 value), this value preserves logical transaction ordering\
            \ on (block_height, microblock_sequence, tx_index)."
          type: integer
        microblock_canonical:
          description: "Set to `true` if microblock is anchored in the canonical chain\
            \ tip, `false` if the transaction was orphaned in a micro-fork."
          type: boolean
        execution_cost_read_count:
          description: Execution cost read count.
          type: integer
        execution_cost_read_length:
          description: Execution cost read length.
          type: integer
        execution_cost_runtime:
          description: Execution cost runtime.
          type: integer
        execution_cost_write_count:
          description: Execution cost write count.
          type: integer
        execution_cost_write_length:
          description: Execution cost write length.
          type: integer
        events:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_1_events_inner'
          type: array
        tx_type:
          type: string
        coinbase_payload:
          $ref: '#/components/schemas/CoinbaseTransaction_coinbase_payload'
      required:
      - anchor_mode
      - block_hash
      - block_height
      - block_time
      - block_time_iso
      - burn_block_height
      - burn_block_time
      - burn_block_time_iso
      - canonical
      - coinbase_payload
      - event_count
      - events
      - execution_cost_read_count
      - execution_cost_read_length
      - execution_cost_runtime
      - execution_cost_write_count
      - execution_cost_write_length
      - fee_rate
      - is_unanchored
      - microblock_canonical
      - microblock_hash
      - microblock_sequence
      - nonce
      - parent_block_hash
      - parent_burn_block_time
      - parent_burn_block_time_iso
      - post_condition_mode
      - post_conditions
      - sender_address
      - sponsored
      - tx_id
      - tx_index
      - tx_result
      - tx_status
      - tx_type
      title: CoinbaseTransaction
      type: object
    TenureChangeTransaction_1_tenure_change_payload_cause:
      anyOf:
      - type: string
      - type: string
      description: "Cause of change in mining tenure. Depending on cause, tenure can\
        \ be ended or extended."
    TenureChangeTransaction_1_tenure_change_payload:
      properties:
        tenure_consensus_hash:
          description: Consensus hash of this tenure. Corresponds to the sortition
            in which the miner of this block was chosen.
          type: string
        prev_tenure_consensus_hash:
          description: Consensus hash of the previous tenure. Corresponds to the sortition
            of the previous winning block-commit.
          type: string
        burn_view_consensus_hash:
          description: Current consensus hash on the underlying burnchain. Corresponds
            to the last-seen sortition.
          type: string
        previous_tenure_end:
          description: (Hex string) Stacks Block hash
          type: string
        previous_tenure_blocks:
          description: The number of blocks produced in the previous tenure.
          type: integer
        cause:
          $ref: '#/components/schemas/TenureChangeTransaction_1_tenure_change_payload_cause'
        pubkey_hash:
          description: (Hex string) The ECDSA public key hash of the current tenure.
          type: string
      required:
      - burn_view_consensus_hash
      - cause
      - prev_tenure_consensus_hash
      - previous_tenure_blocks
      - previous_tenure_end
      - pubkey_hash
      - tenure_consensus_hash
      type: object
    TenureChangeTransaction_1:
      properties:
        tx_id:
          description: Transaction ID
          type: string
        nonce:
          description: "Used for ordering the transactions originating from and paying\
            \ from an account. The nonce ensures that a transaction is processed at\
            \ most once. The nonce counts the number of times an account's owner(s)\
            \ have authorized a transaction. The first transaction from an account\
            \ will have a nonce value equal to 0, the second will have a nonce value\
            \ equal to 1, and so on."
          type: integer
        fee_rate:
          description: Transaction fee as Integer string (64-bit unsigned integer).
          type: string
        sender_address:
          description: Address of the transaction initiator
          type: string
        sponsor_nonce:
          type: integer
        sponsored:
          description: Denotes whether the originating account is the same as the
            paying account
          type: boolean
        sponsor_address:
          type: string
        post_condition_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_1_post_condition_mode'
        post_conditions:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_1_post_conditions_inner'
          type: array
        anchor_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_1_anchor_mode'
        block_hash:
          description: Hash of the blocked this transactions was associated with
          type: string
        block_height:
          description: Height of the block this transactions was associated with
          type: integer
        block_time:
          description: Unix timestamp (in seconds) indicating when this block was
            mined.
          type: number
        block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) indicating when this
            block was mined.
          type: string
        burn_block_time:
          description: Unix timestamp (in seconds) indicating when this block was
            mined.
          type: integer
        burn_block_height:
          description: Height of the anchor burn block.
          type: integer
        burn_block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when this block was mined.
          type: string
        parent_burn_block_time:
          description: Unix timestamp (in seconds) indicating when this parent block
            was mined
          type: integer
        parent_burn_block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when this parent block was mined.
          type: string
        canonical:
          description: Set to `true` if block corresponds to the canonical chain tip
          type: boolean
        tx_index:
          description: "Index of the transaction, indicating the order. Starts at\
            \ `0` and increases with each transaction"
          type: integer
        tx_status:
          $ref: '#/components/schemas/TokenTransferTransaction_1_tx_status'
        tx_result:
          $ref: '#/components/schemas/TokenTransferTransaction_tx_result'
        event_count:
          description: Number of transaction events
          type: integer
        parent_block_hash:
          description: Hash of the previous block.
          type: string
        is_unanchored:
          description: True if the transaction is included in a microblock that has
            not been confirmed by an anchor block.
          type: boolean
        microblock_hash:
          description: The microblock hash that this transaction was streamed in.
            If the transaction was batched in an anchor block (not included within
            a microblock) then this value will be an empty string.
          type: string
        microblock_sequence:
          description: "The microblock sequence number that this transaction was streamed\
            \ in. If the transaction was batched in an anchor block (not included\
            \ within a microblock) then this value will be 2147483647 (0x7fffffff,\
            \ the max int32 value), this value preserves logical transaction ordering\
            \ on (block_height, microblock_sequence, tx_index)."
          type: integer
        microblock_canonical:
          description: "Set to `true` if microblock is anchored in the canonical chain\
            \ tip, `false` if the transaction was orphaned in a micro-fork."
          type: boolean
        execution_cost_read_count:
          description: Execution cost read count.
          type: integer
        execution_cost_read_length:
          description: Execution cost read length.
          type: integer
        execution_cost_runtime:
          description: Execution cost runtime.
          type: integer
        execution_cost_write_count:
          description: Execution cost write count.
          type: integer
        execution_cost_write_length:
          description: Execution cost write length.
          type: integer
        events:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_1_events_inner'
          type: array
        tx_type:
          type: string
        tenure_change_payload:
          $ref: '#/components/schemas/TenureChangeTransaction_1_tenure_change_payload'
      required:
      - anchor_mode
      - block_hash
      - block_height
      - block_time
      - block_time_iso
      - burn_block_height
      - burn_block_time
      - burn_block_time_iso
      - canonical
      - event_count
      - events
      - execution_cost_read_count
      - execution_cost_read_length
      - execution_cost_runtime
      - execution_cost_write_count
      - execution_cost_write_length
      - fee_rate
      - is_unanchored
      - microblock_canonical
      - microblock_hash
      - microblock_sequence
      - nonce
      - parent_block_hash
      - parent_burn_block_time
      - parent_burn_block_time_iso
      - post_condition_mode
      - post_conditions
      - sender_address
      - sponsored
      - tenure_change_payload
      - tx_id
      - tx_index
      - tx_result
      - tx_status
      - tx_type
      title: TenureChangeTransaction
      type: object
    TransactionFound_result_anyOf:
      anyOf:
      - $ref: '#/components/schemas/TokenTransferTransaction_1'
      - $ref: '#/components/schemas/SmartContractTransaction_1'
      - $ref: '#/components/schemas/ContractCallTransaction_1'
      - $ref: '#/components/schemas/PoisonMicroblockTransaction_1'
      - $ref: '#/components/schemas/CoinbaseTransaction_1'
      - $ref: '#/components/schemas/TenureChangeTransaction_1'
    TokenTransferMempoolTransaction_tx_status:
      anyOf:
      - type: string
      - type: string
      - type: string
      - type: string
      - type: string
      - type: string
      description: Status of the transaction
    TokenTransferMempoolTransaction:
      properties:
        tx_id:
          description: Transaction ID
          type: string
        nonce:
          description: "Used for ordering the transactions originating from and paying\
            \ from an account. The nonce ensures that a transaction is processed at\
            \ most once. The nonce counts the number of times an account's owner(s)\
            \ have authorized a transaction. The first transaction from an account\
            \ will have a nonce value equal to 0, the second will have a nonce value\
            \ equal to 1, and so on."
          type: integer
        fee_rate:
          description: Transaction fee as Integer string (64-bit unsigned integer).
          type: string
        sender_address:
          description: Address of the transaction initiator
          type: string
        sponsor_nonce:
          type: integer
        sponsored:
          description: Denotes whether the originating account is the same as the
            paying account
          type: boolean
        sponsor_address:
          type: string
        post_condition_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_1_post_condition_mode'
        post_conditions:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_1_post_conditions_inner'
          type: array
        anchor_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_1_anchor_mode'
        tx_status:
          $ref: '#/components/schemas/TokenTransferMempoolTransaction_tx_status'
        receipt_time:
          description: A unix timestamp (in seconds) indicating when the transaction
            broadcast was received by the node.
          type: integer
        receipt_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when the transaction broadcast was received by the node.
          type: string
        tx_type:
          type: string
        token_transfer:
          $ref: '#/components/schemas/TokenTransferTransaction_token_transfer'
      required:
      - anchor_mode
      - fee_rate
      - nonce
      - post_condition_mode
      - post_conditions
      - receipt_time
      - receipt_time_iso
      - sender_address
      - sponsored
      - token_transfer
      - tx_id
      - tx_status
      - tx_type
      title: TokenTransferMempoolTransaction
      type: object
    SmartContractMempoolTransaction:
      properties:
        tx_id:
          description: Transaction ID
          type: string
        nonce:
          description: "Used for ordering the transactions originating from and paying\
            \ from an account. The nonce ensures that a transaction is processed at\
            \ most once. The nonce counts the number of times an account's owner(s)\
            \ have authorized a transaction. The first transaction from an account\
            \ will have a nonce value equal to 0, the second will have a nonce value\
            \ equal to 1, and so on."
          type: integer
        fee_rate:
          description: Transaction fee as Integer string (64-bit unsigned integer).
          type: string
        sender_address:
          description: Address of the transaction initiator
          type: string
        sponsor_nonce:
          type: integer
        sponsored:
          description: Denotes whether the originating account is the same as the
            paying account
          type: boolean
        sponsor_address:
          type: string
        post_condition_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_1_post_condition_mode'
        post_conditions:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_1_post_conditions_inner'
          type: array
        anchor_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_1_anchor_mode'
        tx_status:
          $ref: '#/components/schemas/TokenTransferMempoolTransaction_tx_status'
        receipt_time:
          description: A unix timestamp (in seconds) indicating when the transaction
            broadcast was received by the node.
          type: integer
        receipt_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when the transaction broadcast was received by the node.
          type: string
        tx_type:
          type: string
        smart_contract:
          $ref: '#/components/schemas/SmartContractTransaction_smart_contract'
      required:
      - anchor_mode
      - fee_rate
      - nonce
      - post_condition_mode
      - post_conditions
      - receipt_time
      - receipt_time_iso
      - sender_address
      - smart_contract
      - sponsored
      - tx_id
      - tx_status
      - tx_type
      title: SmartContractMempoolTransaction
      type: object
    ContractCallMempoolTransaction:
      properties:
        tx_id:
          description: Transaction ID
          type: string
        nonce:
          description: "Used for ordering the transactions originating from and paying\
            \ from an account. The nonce ensures that a transaction is processed at\
            \ most once. The nonce counts the number of times an account's owner(s)\
            \ have authorized a transaction. The first transaction from an account\
            \ will have a nonce value equal to 0, the second will have a nonce value\
            \ equal to 1, and so on."
          type: integer
        fee_rate:
          description: Transaction fee as Integer string (64-bit unsigned integer).
          type: string
        sender_address:
          description: Address of the transaction initiator
          type: string
        sponsor_nonce:
          type: integer
        sponsored:
          description: Denotes whether the originating account is the same as the
            paying account
          type: boolean
        sponsor_address:
          type: string
        post_condition_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_1_post_condition_mode'
        post_conditions:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_1_post_conditions_inner'
          type: array
        anchor_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_1_anchor_mode'
        tx_status:
          $ref: '#/components/schemas/TokenTransferMempoolTransaction_tx_status'
        receipt_time:
          description: A unix timestamp (in seconds) indicating when the transaction
            broadcast was received by the node.
          type: integer
        receipt_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when the transaction broadcast was received by the node.
          type: string
        tx_type:
          type: string
        contract_call:
          $ref: '#/components/schemas/ContractCallTransaction_contract_call'
      required:
      - anchor_mode
      - contract_call
      - fee_rate
      - nonce
      - post_condition_mode
      - post_conditions
      - receipt_time
      - receipt_time_iso
      - sender_address
      - sponsored
      - tx_id
      - tx_status
      - tx_type
      title: ContractCallMempoolTransaction
      type: object
    PoisonMicroblockMempoolTransaction:
      properties:
        tx_id:
          description: Transaction ID
          type: string
        nonce:
          description: "Used for ordering the transactions originating from and paying\
            \ from an account. The nonce ensures that a transaction is processed at\
            \ most once. The nonce counts the number of times an account's owner(s)\
            \ have authorized a transaction. The first transaction from an account\
            \ will have a nonce value equal to 0, the second will have a nonce value\
            \ equal to 1, and so on."
          type: integer
        fee_rate:
          description: Transaction fee as Integer string (64-bit unsigned integer).
          type: string
        sender_address:
          description: Address of the transaction initiator
          type: string
        sponsor_nonce:
          type: integer
        sponsored:
          description: Denotes whether the originating account is the same as the
            paying account
          type: boolean
        sponsor_address:
          type: string
        post_condition_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_1_post_condition_mode'
        post_conditions:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_1_post_conditions_inner'
          type: array
        anchor_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_1_anchor_mode'
        tx_status:
          $ref: '#/components/schemas/TokenTransferMempoolTransaction_tx_status'
        receipt_time:
          description: A unix timestamp (in seconds) indicating when the transaction
            broadcast was received by the node.
          type: integer
        receipt_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when the transaction broadcast was received by the node.
          type: string
        tx_type:
          type: string
        poison_microblock:
          $ref: '#/components/schemas/PoisonMicroblockTransaction_poison_microblock'
      required:
      - anchor_mode
      - fee_rate
      - nonce
      - poison_microblock
      - post_condition_mode
      - post_conditions
      - receipt_time
      - receipt_time_iso
      - sender_address
      - sponsored
      - tx_id
      - tx_status
      - tx_type
      title: PoisonMicroblockMempoolTransaction
      type: object
    CoinbaseMempoolTransaction:
      properties:
        tx_id:
          description: Transaction ID
          type: string
        nonce:
          description: "Used for ordering the transactions originating from and paying\
            \ from an account. The nonce ensures that a transaction is processed at\
            \ most once. The nonce counts the number of times an account's owner(s)\
            \ have authorized a transaction. The first transaction from an account\
            \ will have a nonce value equal to 0, the second will have a nonce value\
            \ equal to 1, and so on."
          type: integer
        fee_rate:
          description: Transaction fee as Integer string (64-bit unsigned integer).
          type: string
        sender_address:
          description: Address of the transaction initiator
          type: string
        sponsor_nonce:
          type: integer
        sponsored:
          description: Denotes whether the originating account is the same as the
            paying account
          type: boolean
        sponsor_address:
          type: string
        post_condition_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_1_post_condition_mode'
        post_conditions:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_1_post_conditions_inner'
          type: array
        anchor_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_1_anchor_mode'
        tx_status:
          $ref: '#/components/schemas/TokenTransferMempoolTransaction_tx_status'
        receipt_time:
          description: A unix timestamp (in seconds) indicating when the transaction
            broadcast was received by the node.
          type: integer
        receipt_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when the transaction broadcast was received by the node.
          type: string
        tx_type:
          type: string
        coinbase_payload:
          $ref: '#/components/schemas/CoinbaseTransaction_coinbase_payload'
      required:
      - anchor_mode
      - coinbase_payload
      - fee_rate
      - nonce
      - post_condition_mode
      - post_conditions
      - receipt_time
      - receipt_time_iso
      - sender_address
      - sponsored
      - tx_id
      - tx_status
      - tx_type
      title: CoinbaseMempoolTransaction
      type: object
    TenureChangeMempoolTransaction:
      properties:
        tx_id:
          description: Transaction ID
          type: string
        nonce:
          description: "Used for ordering the transactions originating from and paying\
            \ from an account. The nonce ensures that a transaction is processed at\
            \ most once. The nonce counts the number of times an account's owner(s)\
            \ have authorized a transaction. The first transaction from an account\
            \ will have a nonce value equal to 0, the second will have a nonce value\
            \ equal to 1, and so on."
          type: integer
        fee_rate:
          description: Transaction fee as Integer string (64-bit unsigned integer).
          type: string
        sender_address:
          description: Address of the transaction initiator
          type: string
        sponsor_nonce:
          type: integer
        sponsored:
          description: Denotes whether the originating account is the same as the
            paying account
          type: boolean
        sponsor_address:
          type: string
        post_condition_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_1_post_condition_mode'
        post_conditions:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_1_post_conditions_inner'
          type: array
        anchor_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_1_anchor_mode'
        tx_status:
          $ref: '#/components/schemas/TokenTransferMempoolTransaction_tx_status'
        receipt_time:
          description: A unix timestamp (in seconds) indicating when the transaction
            broadcast was received by the node.
          type: integer
        receipt_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when the transaction broadcast was received by the node.
          type: string
        tx_type:
          type: string
        tenure_change_payload:
          $ref: '#/components/schemas/TenureChangeTransaction_1_tenure_change_payload'
      required:
      - anchor_mode
      - fee_rate
      - nonce
      - post_condition_mode
      - post_conditions
      - receipt_time
      - receipt_time_iso
      - sender_address
      - sponsored
      - tenure_change_payload
      - tx_id
      - tx_status
      - tx_type
      title: TenureChangeMempoolTransaction
      type: object
    TransactionFound_result_anyOf_1:
      anyOf:
      - $ref: '#/components/schemas/TokenTransferMempoolTransaction'
      - $ref: '#/components/schemas/SmartContractMempoolTransaction'
      - $ref: '#/components/schemas/ContractCallMempoolTransaction'
      - $ref: '#/components/schemas/PoisonMicroblockMempoolTransaction'
      - $ref: '#/components/schemas/CoinbaseMempoolTransaction'
      - $ref: '#/components/schemas/TenureChangeMempoolTransaction'
    TransactionFound_result:
      anyOf:
      - $ref: '#/components/schemas/TransactionFound_result_anyOf'
      - $ref: '#/components/schemas/TransactionFound_result_anyOf_1'
    TransactionFound:
      description: This object returns transaction for found true
      properties:
        found:
          type: boolean
        result:
          $ref: '#/components/schemas/TransactionFound_result'
      required:
      - found
      - result
      title: TransactionFound
      type: object
    TransactionNotFound_result:
      properties:
        tx_id:
          type: string
      required:
      - tx_id
      type: object
    TransactionNotFound:
      description: This object returns the id for not found transaction
      properties:
        found:
          type: boolean
        result:
          $ref: '#/components/schemas/TransactionNotFound_result'
      required:
      - found
      - result
      title: TransactionNotFound
      type: object
    get_tx_list_details_200_response_value:
      anyOf:
      - $ref: '#/components/schemas/TransactionFound'
      - $ref: '#/components/schemas/TransactionNotFound'
    Order_By:
      anyOf:
      - enum:
        - age
        type: string
      - enum:
        - size
        type: string
      - enum:
        - fee
        type: string
      title: Order By
    Order:
      anyOf:
      - enum:
        - asc
        type: string
      - enum:
        - desc
        type: string
      title: Order
    TokenTransferMempoolTransaction_1_tx_status:
      anyOf:
      - enum:
        - pending
        type: string
      - enum:
        - dropped_replace_by_fee
        type: string
      - enum:
        - dropped_replace_across_fork
        type: string
      - enum:
        - dropped_too_expensive
        type: string
      - enum:
        - dropped_stale_garbage_collect
        type: string
      - enum:
        - dropped_problematic
        type: string
      description: Status of the transaction
    TokenTransferMempoolTransaction_1:
      example:
        tx_status: pending
        receipt_time: 1
        token_transfer:
          amount: amount
          memo: memo
          recipient_address: recipient_address
        sponsored: true
        tx_id: tx_id
        nonce: 0
        fee_rate: fee_rate
        post_conditions:
        - principal:
            type_id: principal_origin
          amount: amount
          type: stx
          condition_code: sent_equal_to
        - principal:
            type_id: principal_origin
          amount: amount
          type: stx
          condition_code: sent_equal_to
        sender_address: sender_address
        post_condition_mode: allow
        sponsor_nonce: 6
        anchor_mode: on_chain_only
        receipt_time_iso: receipt_time_iso
        tx_type: token_transfer
        sponsor_address: sponsor_address
      properties:
        tx_id:
          description: Transaction ID
          type: string
        nonce:
          description: "Used for ordering the transactions originating from and paying\
            \ from an account. The nonce ensures that a transaction is processed at\
            \ most once. The nonce counts the number of times an account's owner(s)\
            \ have authorized a transaction. The first transaction from an account\
            \ will have a nonce value equal to 0, the second will have a nonce value\
            \ equal to 1, and so on."
          type: integer
        fee_rate:
          description: Transaction fee as Integer string (64-bit unsigned integer).
          type: string
        sender_address:
          description: Address of the transaction initiator
          type: string
        sponsor_nonce:
          type: integer
        sponsored:
          description: Denotes whether the originating account is the same as the
            paying account
          type: boolean
        sponsor_address:
          type: string
        post_condition_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_post_condition_mode'
        post_conditions:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_post_conditions_inner'
          type: array
        anchor_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_anchor_mode'
        tx_status:
          $ref: '#/components/schemas/TokenTransferMempoolTransaction_1_tx_status'
        receipt_time:
          description: A unix timestamp (in seconds) indicating when the transaction
            broadcast was received by the node.
          type: integer
        receipt_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when the transaction broadcast was received by the node.
          type: string
        tx_type:
          enum:
          - token_transfer
          type: string
        token_transfer:
          $ref: '#/components/schemas/TokenTransferTransaction_token_transfer'
      required:
      - anchor_mode
      - fee_rate
      - nonce
      - post_condition_mode
      - post_conditions
      - receipt_time
      - receipt_time_iso
      - sender_address
      - sponsored
      - token_transfer
      - tx_id
      - tx_status
      - tx_type
      title: TokenTransferMempoolTransaction
      type: object
    SmartContractMempoolTransaction_1:
      properties:
        tx_id:
          description: Transaction ID
          type: string
        nonce:
          description: "Used for ordering the transactions originating from and paying\
            \ from an account. The nonce ensures that a transaction is processed at\
            \ most once. The nonce counts the number of times an account's owner(s)\
            \ have authorized a transaction. The first transaction from an account\
            \ will have a nonce value equal to 0, the second will have a nonce value\
            \ equal to 1, and so on."
          type: integer
        fee_rate:
          description: Transaction fee as Integer string (64-bit unsigned integer).
          type: string
        sender_address:
          description: Address of the transaction initiator
          type: string
        sponsor_nonce:
          type: integer
        sponsored:
          description: Denotes whether the originating account is the same as the
            paying account
          type: boolean
        sponsor_address:
          type: string
        post_condition_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_post_condition_mode'
        post_conditions:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_post_conditions_inner'
          type: array
        anchor_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_anchor_mode'
        tx_status:
          $ref: '#/components/schemas/TokenTransferMempoolTransaction_1_tx_status'
        receipt_time:
          description: A unix timestamp (in seconds) indicating when the transaction
            broadcast was received by the node.
          type: integer
        receipt_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when the transaction broadcast was received by the node.
          type: string
        tx_type:
          enum:
          - smart_contract
          type: string
        smart_contract:
          $ref: '#/components/schemas/SmartContractTransaction_smart_contract'
      required:
      - anchor_mode
      - fee_rate
      - nonce
      - post_condition_mode
      - post_conditions
      - receipt_time
      - receipt_time_iso
      - sender_address
      - smart_contract
      - sponsored
      - tx_id
      - tx_status
      - tx_type
      title: SmartContractMempoolTransaction
      type: object
    ContractCallMempoolTransaction_1:
      properties:
        tx_id:
          description: Transaction ID
          type: string
        nonce:
          description: "Used for ordering the transactions originating from and paying\
            \ from an account. The nonce ensures that a transaction is processed at\
            \ most once. The nonce counts the number of times an account's owner(s)\
            \ have authorized a transaction. The first transaction from an account\
            \ will have a nonce value equal to 0, the second will have a nonce value\
            \ equal to 1, and so on."
          type: integer
        fee_rate:
          description: Transaction fee as Integer string (64-bit unsigned integer).
          type: string
        sender_address:
          description: Address of the transaction initiator
          type: string
        sponsor_nonce:
          type: integer
        sponsored:
          description: Denotes whether the originating account is the same as the
            paying account
          type: boolean
        sponsor_address:
          type: string
        post_condition_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_post_condition_mode'
        post_conditions:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_post_conditions_inner'
          type: array
        anchor_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_anchor_mode'
        tx_status:
          $ref: '#/components/schemas/TokenTransferMempoolTransaction_1_tx_status'
        receipt_time:
          description: A unix timestamp (in seconds) indicating when the transaction
            broadcast was received by the node.
          type: integer
        receipt_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when the transaction broadcast was received by the node.
          type: string
        tx_type:
          enum:
          - contract_call
          type: string
        contract_call:
          $ref: '#/components/schemas/ContractCallTransaction_contract_call'
      required:
      - anchor_mode
      - contract_call
      - fee_rate
      - nonce
      - post_condition_mode
      - post_conditions
      - receipt_time
      - receipt_time_iso
      - sender_address
      - sponsored
      - tx_id
      - tx_status
      - tx_type
      title: ContractCallMempoolTransaction
      type: object
    PoisonMicroblockMempoolTransaction_1:
      properties:
        tx_id:
          description: Transaction ID
          type: string
        nonce:
          description: "Used for ordering the transactions originating from and paying\
            \ from an account. The nonce ensures that a transaction is processed at\
            \ most once. The nonce counts the number of times an account's owner(s)\
            \ have authorized a transaction. The first transaction from an account\
            \ will have a nonce value equal to 0, the second will have a nonce value\
            \ equal to 1, and so on."
          type: integer
        fee_rate:
          description: Transaction fee as Integer string (64-bit unsigned integer).
          type: string
        sender_address:
          description: Address of the transaction initiator
          type: string
        sponsor_nonce:
          type: integer
        sponsored:
          description: Denotes whether the originating account is the same as the
            paying account
          type: boolean
        sponsor_address:
          type: string
        post_condition_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_post_condition_mode'
        post_conditions:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_post_conditions_inner'
          type: array
        anchor_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_anchor_mode'
        tx_status:
          $ref: '#/components/schemas/TokenTransferMempoolTransaction_1_tx_status'
        receipt_time:
          description: A unix timestamp (in seconds) indicating when the transaction
            broadcast was received by the node.
          type: integer
        receipt_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when the transaction broadcast was received by the node.
          type: string
        tx_type:
          enum:
          - poison_microblock
          type: string
        poison_microblock:
          $ref: '#/components/schemas/PoisonMicroblockTransaction_poison_microblock'
      required:
      - anchor_mode
      - fee_rate
      - nonce
      - poison_microblock
      - post_condition_mode
      - post_conditions
      - receipt_time
      - receipt_time_iso
      - sender_address
      - sponsored
      - tx_id
      - tx_status
      - tx_type
      title: PoisonMicroblockMempoolTransaction
      type: object
    CoinbaseMempoolTransaction_1:
      properties:
        tx_id:
          description: Transaction ID
          type: string
        nonce:
          description: "Used for ordering the transactions originating from and paying\
            \ from an account. The nonce ensures that a transaction is processed at\
            \ most once. The nonce counts the number of times an account's owner(s)\
            \ have authorized a transaction. The first transaction from an account\
            \ will have a nonce value equal to 0, the second will have a nonce value\
            \ equal to 1, and so on."
          type: integer
        fee_rate:
          description: Transaction fee as Integer string (64-bit unsigned integer).
          type: string
        sender_address:
          description: Address of the transaction initiator
          type: string
        sponsor_nonce:
          type: integer
        sponsored:
          description: Denotes whether the originating account is the same as the
            paying account
          type: boolean
        sponsor_address:
          type: string
        post_condition_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_post_condition_mode'
        post_conditions:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_post_conditions_inner'
          type: array
        anchor_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_anchor_mode'
        tx_status:
          $ref: '#/components/schemas/TokenTransferMempoolTransaction_1_tx_status'
        receipt_time:
          description: A unix timestamp (in seconds) indicating when the transaction
            broadcast was received by the node.
          type: integer
        receipt_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when the transaction broadcast was received by the node.
          type: string
        tx_type:
          enum:
          - coinbase
          type: string
        coinbase_payload:
          $ref: '#/components/schemas/CoinbaseTransaction_coinbase_payload'
      required:
      - anchor_mode
      - coinbase_payload
      - fee_rate
      - nonce
      - post_condition_mode
      - post_conditions
      - receipt_time
      - receipt_time_iso
      - sender_address
      - sponsored
      - tx_id
      - tx_status
      - tx_type
      title: CoinbaseMempoolTransaction
      type: object
    TenureChangeMempoolTransaction_1:
      properties:
        tx_id:
          description: Transaction ID
          type: string
        nonce:
          description: "Used for ordering the transactions originating from and paying\
            \ from an account. The nonce ensures that a transaction is processed at\
            \ most once. The nonce counts the number of times an account's owner(s)\
            \ have authorized a transaction. The first transaction from an account\
            \ will have a nonce value equal to 0, the second will have a nonce value\
            \ equal to 1, and so on."
          type: integer
        fee_rate:
          description: Transaction fee as Integer string (64-bit unsigned integer).
          type: string
        sender_address:
          description: Address of the transaction initiator
          type: string
        sponsor_nonce:
          type: integer
        sponsored:
          description: Denotes whether the originating account is the same as the
            paying account
          type: boolean
        sponsor_address:
          type: string
        post_condition_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_post_condition_mode'
        post_conditions:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_post_conditions_inner'
          type: array
        anchor_mode:
          $ref: '#/components/schemas/TokenTransferTransaction_anchor_mode'
        tx_status:
          $ref: '#/components/schemas/TokenTransferMempoolTransaction_1_tx_status'
        receipt_time:
          description: A unix timestamp (in seconds) indicating when the transaction
            broadcast was received by the node.
          type: integer
        receipt_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating
            when the transaction broadcast was received by the node.
          type: string
        tx_type:
          enum:
          - tenure_change
          type: string
        tenure_change_payload:
          $ref: '#/components/schemas/TenureChangeTransaction_tenure_change_payload'
      required:
      - anchor_mode
      - fee_rate
      - nonce
      - post_condition_mode
      - post_conditions
      - receipt_time
      - receipt_time_iso
      - sender_address
      - sponsored
      - tenure_change_payload
      - tx_id
      - tx_status
      - tx_type
      title: TenureChangeMempoolTransaction
      type: object
    get_mempool_transaction_list_200_response_results_inner:
      anyOf:
      - $ref: '#/components/schemas/TokenTransferMempoolTransaction_1'
      - $ref: '#/components/schemas/SmartContractMempoolTransaction_1'
      - $ref: '#/components/schemas/ContractCallMempoolTransaction_1'
      - $ref: '#/components/schemas/PoisonMicroblockMempoolTransaction_1'
      - $ref: '#/components/schemas/CoinbaseMempoolTransaction_1'
      - $ref: '#/components/schemas/TenureChangeMempoolTransaction_1'
    get_mempool_transaction_list_200_response:
      description: List of mempool transactions
      example:
        total: 1
        offset: 0
        limit: 20
        results:
        - tx_status: pending
          receipt_time: 1
          token_transfer:
            amount: amount
            memo: memo
            recipient_address: recipient_address
          sponsored: true
          tx_id: tx_id
          nonce: 0
          fee_rate: fee_rate
          post_conditions:
          - principal:
              type_id: principal_origin
            amount: amount
            type: stx
            condition_code: sent_equal_to
          - principal:
              type_id: principal_origin
            amount: amount
            type: stx
            condition_code: sent_equal_to
          sender_address: sender_address
          post_condition_mode: allow
          sponsor_nonce: 6
          anchor_mode: on_chain_only
          receipt_time_iso: receipt_time_iso
          tx_type: token_transfer
          sponsor_address: sponsor_address
        - tx_status: pending
          receipt_time: 1
          token_transfer:
            amount: amount
            memo: memo
            recipient_address: recipient_address
          sponsored: true
          tx_id: tx_id
          nonce: 0
          fee_rate: fee_rate
          post_conditions:
          - principal:
              type_id: principal_origin
            amount: amount
            type: stx
            condition_code: sent_equal_to
          - principal:
              type_id: principal_origin
            amount: amount
            type: stx
            condition_code: sent_equal_to
          sender_address: sender_address
          post_condition_mode: allow
          sponsor_nonce: 6
          anchor_mode: on_chain_only
          receipt_time_iso: receipt_time_iso
          tx_type: token_transfer
          sponsor_address: sponsor_address
      properties:
        limit:
          example: 20
          type: integer
        offset:
          example: 0
          type: integer
        total:
          example: 1
          type: integer
        results:
          items:
            $ref: '#/components/schemas/get_mempool_transaction_list_200_response_results_inner'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      type: object
    get_dropped_mempool_transaction_list_200_response:
      description: List of dropped mempool transactions
      example:
        total: 1
        offset: 0
        limit: 20
        results:
        - tx_status: pending
          receipt_time: 1
          token_transfer:
            amount: amount
            memo: memo
            recipient_address: recipient_address
          sponsored: true
          tx_id: tx_id
          nonce: 0
          fee_rate: fee_rate
          post_conditions:
          - principal:
              type_id: principal_origin
            amount: amount
            type: stx
            condition_code: sent_equal_to
          - principal:
              type_id: principal_origin
            amount: amount
            type: stx
            condition_code: sent_equal_to
          sender_address: sender_address
          post_condition_mode: allow
          sponsor_nonce: 6
          anchor_mode: on_chain_only
          receipt_time_iso: receipt_time_iso
          tx_type: token_transfer
          sponsor_address: sponsor_address
        - tx_status: pending
          receipt_time: 1
          token_transfer:
            amount: amount
            memo: memo
            recipient_address: recipient_address
          sponsored: true
          tx_id: tx_id
          nonce: 0
          fee_rate: fee_rate
          post_conditions:
          - principal:
              type_id: principal_origin
            amount: amount
            type: stx
            condition_code: sent_equal_to
          - principal:
              type_id: principal_origin
            amount: amount
            type: stx
            condition_code: sent_equal_to
          sender_address: sender_address
          post_condition_mode: allow
          sponsor_nonce: 6
          anchor_mode: on_chain_only
          receipt_time_iso: receipt_time_iso
          tx_type: token_transfer
          sponsor_address: sponsor_address
      properties:
        limit:
          example: 20
          type: integer
        offset:
          example: 0
          type: integer
        total:
          example: 1
          type: integer
        results:
          items:
            $ref: '#/components/schemas/get_mempool_transaction_list_200_response_results_inner'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      type: object
    MempoolTransactionStatsResponse_tx_simple_fee_averages_value:
      additionalProperties: true
      example:
        p25: 6.027456183070403
        p50: 1.4658129805029452
        p95: 5.637376656633329
        p75: 5.962133916683182
      properties:
        p25:
          nullable: true
          type: number
        p50:
          nullable: true
          type: number
        p75:
          nullable: true
          type: number
        p95:
          nullable: true
          type: number
      required:
      - p25
      - p50
      - p75
      - p95
      type: object
    MempoolTransactionStatsResponse:
      description: GET request that returns stats on mempool transactions
      example:
        tx_type_counts:
          key: 0
        tx_simple_fee_averages:
          key:
            p25: 6.027456183070403
            p50: 1.4658129805029452
            p95: 5.637376656633329
            p75: 5.962133916683182
        tx_byte_sizes:
          key:
            p25: 6.027456183070403
            p50: 1.4658129805029452
            p95: 5.637376656633329
            p75: 5.962133916683182
        tx_ages:
          key:
            p25: 6.027456183070403
            p50: 1.4658129805029452
            p95: 5.637376656633329
            p75: 5.962133916683182
      properties:
        tx_type_counts:
          additionalProperties:
            type: integer
          description: "Number of tranasction in the mempool, broken down by transaction\
            \ type."
          type: object
        tx_simple_fee_averages:
          additionalProperties:
            $ref: '#/components/schemas/MempoolTransactionStatsResponse_tx_simple_fee_averages_value'
          description: "The simple mean (average) transaction fee, broken down by\
            \ transaction type. Note that this does not factor in actual execution\
            \ costs. The average fee is not a reliable metric for calculating a fee\
            \ for a new transaction."
          type: object
        tx_ages:
          additionalProperties:
            $ref: '#/components/schemas/MempoolTransactionStatsResponse_tx_simple_fee_averages_value'
          description: The average time (in blocks) that transactions have lived in
            the mempool. The start block height is simply the current chain-tip of
            when the attached Stacks node receives the transaction. This timing can
            be different across Stacks nodes / API instances due to propagation timing
            differences in the p2p network.
          type: object
        tx_byte_sizes:
          additionalProperties:
            $ref: '#/components/schemas/MempoolTransactionStatsResponse_tx_simple_fee_averages_value'
          description: "The average byte size of transactions in the mempool, broken\
            \ down by transaction type."
          type: object
      required:
      - tx_ages
      - tx_byte_sizes
      - tx_simple_fee_averages
      - tx_type_counts
      title: MempoolTransactionStatsResponse
      type: object
    get_filtered_events_address_parameter:
      anyOf:
      - description: STX Address
        pattern: "^[0123456789ABCDEFGHJKMNPQRSTVWXYZ]{28,41}"
        title: STX Address
        type: string
      - description: Smart Contract ID
        pattern: "^[0123456789ABCDEFGHJKMNPQRSTVWXYZ]{28,41}.[a-zA-Z]([a-zA-Z0-9]|[-_]){0,39}$"
        title: Smart Contract ID
        type: string
    get_filtered_events_type_parameter_inner:
      anyOf:
      - enum:
        - smart_contract_log
        type: string
      - enum:
        - stx_lock
        type: string
      - enum:
        - stx_asset
        type: string
      - enum:
        - fungible_token_asset
        type: string
      - enum:
        - non_fungible_token_asset
        type: string
    List_of_events:
      example:
        offset: 0
        limit: 20
        events:
        - event_type: smart_contract_log
          contract_log:
            contract_id: contract_id
            topic: topic
            value:
              repr: repr
              hex: hex
          tx_id: tx_id
          event_index: 6
        - event_type: smart_contract_log
          contract_log:
            contract_id: contract_id
            topic: topic
            value:
              repr: repr
              hex: hex
          tx_id: tx_id
          event_index: 6
      properties:
        limit:
          example: 20
          type: integer
        offset:
          example: 0
          type: integer
        events:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_events_inner'
          type: array
      required:
      - events
      - limit
      - offset
      title: List of events
      type: object
    get_transaction_by_id_200_response:
      anyOf:
      - $ref: '#/components/schemas/get_transaction_list_200_response_results_inner'
      - $ref: '#/components/schemas/get_mempool_transaction_list_200_response_results_inner'
    GetRawTransactionResult:
      description: GET raw transaction
      example:
        raw_tx: raw_tx
      properties:
        raw_tx:
          type: string
      required:
      - raw_tx
      title: GetRawTransactionResult
      type: object
    GetStxSupplyResponse:
      description: GET request that returns network target block times
      example:
        unlocked_percent: unlocked_percent
        total_stx: total_stx
        unlocked_stx: unlocked_stx
        block_height: 0
        total_stx_year_2050: total_stx_year_2050
      properties:
        unlocked_percent:
          description: String quoted decimal number of the percentage of STX that
            have unlocked
          type: string
        total_stx:
          description: "String quoted decimal number of the total circulating number\
            \ of STX (at the input block height if provided, otherwise the current\
            \ block height)"
          type: string
        total_stx_year_2050:
          description: String quoted decimal number of total circulating STX supply
            in year 2050. STX supply grows approx 0.3% annually thereafter in perpetuity.
          type: string
        unlocked_stx:
          description: String quoted decimal number of the STX that have been mined
            or unlocked
          type: string
        block_height:
          description: The block height at which this information was queried
          type: integer
      required:
      - block_height
      - total_stx
      - total_stx_year_2050
      - unlocked_percent
      - unlocked_stx
      title: GetStxSupplyResponse
      type: object
    get_stx_supply_total_supply_plain_200_response:
      example:
        content: ""
      properties:
        content: {}
      type: object
    GetStxSupplyLegacyFormatResponse:
      description: GET request that returns network target block times
      example:
        totalStacksYear2050Formatted: totalStacksYear2050Formatted
        unlockedSupply: unlockedSupply
        unlockedSupplyFormatted: unlockedSupplyFormatted
        blockHeight: blockHeight
        unlockedPercent: unlockedPercent
        totalStacksYear2050: totalStacksYear2050
        totalStacksFormatted: totalStacksFormatted
        totalStacks: totalStacks
      properties:
        unlockedPercent:
          description: String quoted decimal number of the percentage of STX that
            have unlocked
          type: string
        totalStacks:
          description: "String quoted decimal number of the total circulating number\
            \ of STX (at the input block height if provided, otherwise the current\
            \ block height)"
          type: string
        totalStacksFormatted:
          description: Same as `totalStacks` but formatted with comma thousands separators
          type: string
        totalStacksYear2050:
          description: String quoted decimal number of total circulating STX supply
            in year 2050. STX supply grows approx 0.3% annually thereafter in perpetuity.
          type: string
        totalStacksYear2050Formatted:
          description: Same as `totalStacksYear2050` but formatted with comma thousands
            separators
          type: string
        unlockedSupply:
          description: String quoted decimal number of the STX that have been mined
            or unlocked
          type: string
        unlockedSupplyFormatted:
          description: Same as `unlockedSupply` but formatted with comma thousands
            separators
          type: string
        blockHeight:
          description: The block height at which this information was queried
          type: string
      required:
      - blockHeight
      - totalStacks
      - totalStacksFormatted
      - totalStacksYear2050
      - totalStacksYear2050Formatted
      - unlockedPercent
      - unlockedSupply
      - unlockedSupplyFormatted
      title: GetStxSupplyLegacyFormatResponse
      type: object
    NetworkBlockTimesResponse_mainnet:
      example:
        target_block_time: 0
      properties:
        target_block_time:
          type: integer
      required:
      - target_block_time
      type: object
    NetworkBlockTimesResponse:
      description: GET request that returns network target block times
      example:
        mainnet:
          target_block_time: 0
        testnet:
          target_block_time: 0
      properties:
        mainnet:
          $ref: '#/components/schemas/NetworkBlockTimesResponse_mainnet'
        testnet:
          $ref: '#/components/schemas/NetworkBlockTimesResponse_mainnet'
      required:
      - mainnet
      - testnet
      title: NetworkBlockTimesResponse
      type: object
    get_network_block_time_by_network_network_parameter:
      anyOf:
      - enum:
        - testnet
        type: string
      - enum:
        - mainnet
        type: string
    NetworkBlockTimeResponse:
      description: GET request that target block time for a given network
      example:
        target_block_time: 0
      properties:
        target_block_time:
          type: integer
      required:
      - target_block_time
      title: NetworkBlockTimeResponse
      type: object
    NonFungibleTokenHoldingWithTxId_value:
      description: Non-Fungible Token value
      example:
        repr: repr
        hex: hex
      properties:
        hex:
          description: Hex string representing the identifier of the Non-Fungible
            Token
          type: string
        repr:
          description: Readable string of the Non-Fungible Token identifier
          type: string
      required:
      - hex
      - repr
      type: object
    NonFungibleTokenHoldingWithTxId:
      description: Ownership of a Non-Fungible Token
      example:
        asset_identifier: asset_identifier
        block_height: 0
        tx_id: tx_id
        value:
          repr: repr
          hex: hex
      properties:
        asset_identifier:
          type: string
        value:
          $ref: '#/components/schemas/NonFungibleTokenHoldingWithTxId_value'
        block_height:
          type: integer
        tx_id:
          type: string
      required:
      - asset_identifier
      - block_height
      - tx_id
      - value
      title: NonFungibleTokenHoldingWithTxId
      type: object
    NonFungibleTokenHoldingWithTxMetadata:
      description: Ownership of a Non-Fungible Token with transaction metadata
      properties:
        asset_identifier:
          type: string
        value:
          $ref: '#/components/schemas/NonFungibleTokenHoldingWithTxId_value'
        block_height:
          type: integer
        tx:
          $ref: '#/components/schemas/get_transaction_list_200_response_results_inner'
      required:
      - asset_identifier
      - block_height
      - tx
      - value
      title: NonFungibleTokenHoldingWithTxMetadata
      type: object
    NonFungibleTokenHoldingsList:
      anyOf:
      - $ref: '#/components/schemas/NonFungibleTokenHoldingWithTxId'
      - $ref: '#/components/schemas/NonFungibleTokenHoldingWithTxMetadata'
      description: List of Non-Fungible Token holdings
      title: NonFungibleTokenHoldingsList
    get_nft_holdings_200_response:
      description: List of Non-Fungible Token holdings
      example:
        total: 1
        offset: 0
        limit: 20
        results:
        - asset_identifier: asset_identifier
          block_height: 0
          tx_id: tx_id
          value:
            repr: repr
            hex: hex
        - asset_identifier: asset_identifier
          block_height: 0
          tx_id: tx_id
          value:
            repr: repr
            hex: hex
      properties:
        limit:
          example: 20
          type: integer
        offset:
          example: 0
          type: integer
        total:
          example: 1
          type: integer
        results:
          items:
            $ref: '#/components/schemas/NonFungibleTokenHoldingsList'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      type: object
    NonFungibleTokenHistoryEventWithTxId:
      description: Non-Fungible Token history event with transaction id
      example:
        sender: sender
        recipient: recipient
        asset_event_type: asset_event_type
        tx_id: tx_id
        event_index: 0
      properties:
        sender:
          nullable: true
          type: string
        recipient:
          type: string
        event_index:
          type: integer
        asset_event_type:
          type: string
        tx_id:
          type: string
      required:
      - asset_event_type
      - event_index
      - tx_id
      title: NonFungibleTokenHistoryEventWithTxId
      type: object
    NonFungibleTokenHistoryEventWithTxMetadata:
      description: Non-Fungible Token history event with transaction metadata
      properties:
        sender:
          nullable: true
          type: string
        recipient:
          type: string
        event_index:
          type: integer
        asset_event_type:
          type: string
        tx:
          $ref: '#/components/schemas/get_transaction_list_200_response_results_inner'
      required:
      - asset_event_type
      - event_index
      - tx
      title: NonFungibleTokenHistoryEventWithTxMetadata
      type: object
    NonFungibleTokenHistoryEvent:
      anyOf:
      - $ref: '#/components/schemas/NonFungibleTokenHistoryEventWithTxId'
      - $ref: '#/components/schemas/NonFungibleTokenHistoryEventWithTxMetadata'
      description: Describes an event from the history of a Non-Fungible Token
      title: NonFungibleTokenHistoryEvent
    get_nft_history_200_response:
      description: List of Non-Fungible Token history events
      example:
        total: 1
        offset: 0
        limit: 20
        results:
        - sender: sender
          recipient: recipient
          asset_event_type: asset_event_type
          tx_id: tx_id
          event_index: 0
        - sender: sender
          recipient: recipient
          asset_event_type: asset_event_type
          tx_id: tx_id
          event_index: 0
      properties:
        limit:
          example: 20
          type: integer
        offset:
          example: 0
          type: integer
        total:
          example: 1
          type: integer
        results:
          items:
            $ref: '#/components/schemas/NonFungibleTokenHistoryEvent'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      type: object
    NonFungibleTokenMintWithTxId:
      description: Non-Fungible Token mint event with transaction id
      example:
        recipient: recipient
        tx_id: tx_id
        event_index: 0
        value:
          repr: repr
          hex: hex
      properties:
        recipient:
          type: string
        event_index:
          type: integer
        value:
          $ref: '#/components/schemas/NonFungibleTokenHoldingWithTxId_value'
        tx_id:
          type: string
      required:
      - event_index
      - tx_id
      - value
      title: NonFungibleTokenMintWithTxId
      type: object
    NonFungibleTokenMint_anyOf:
      properties:
        recipient:
          type: string
        event_index:
          type: integer
        value:
          $ref: '#/components/schemas/NonFungibleTokenHoldingWithTxId_value'
        tx:
          $ref: '#/components/schemas/get_transaction_list_200_response_results_inner'
      required:
      - event_index
      - tx
      - value
      type: object
    NonFungibleTokenMint:
      anyOf:
      - $ref: '#/components/schemas/NonFungibleTokenMintWithTxId'
      - $ref: '#/components/schemas/NonFungibleTokenMint_anyOf'
      description: Describes the minting of a Non-Fungible Token
      title: NonFungibleTokenMint
    NonFungibleTokenMintList:
      description: List of Non-Fungible Token mint events for an asset identifier
      example:
        total: 1
        offset: 0
        limit: 20
        results:
        - recipient: recipient
          tx_id: tx_id
          event_index: 0
          value:
            repr: repr
            hex: hex
        - recipient: recipient
          tx_id: tx_id
          event_index: 0
          value:
            repr: repr
            hex: hex
      properties:
        limit:
          example: 20
          type: integer
        offset:
          example: 0
          type: integer
        total:
          example: 1
          type: integer
        results:
          items:
            $ref: '#/components/schemas/NonFungibleTokenMint'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      title: NonFungibleTokenMintList
      type: object
    FtHolderEntry:
      example:
        address: SP3G2QZHYDZPJ2FBN2V2MB74T5ZQ6FQK2P5QJ2K6
        balance: "174823763"
      properties:
        address:
          description: Principal of the token holder
          example: SP3G2QZHYDZPJ2FBN2V2MB74T5ZQ6FQK2P5QJ2K6
          type: string
        balance:
          description: The balance of the token held by the address
          example: "174823763"
          type: string
      required:
      - address
      - balance
      title: FtHolderEntry
      type: object
    get_ft_holders_200_response:
      example:
        total: 1
        offset: 0
        total_supply: "5817609278457"
        limit: 20
        results:
        - address: SP3G2QZHYDZPJ2FBN2V2MB74T5ZQ6FQK2P5QJ2K6
          balance: "174823763"
        - address: SP3G2QZHYDZPJ2FBN2V2MB74T5ZQ6FQK2P5QJ2K6
          balance: "174823763"
      properties:
        total_supply:
          description: The total supply of the token (the sum of all balances)
          example: "5817609278457"
          type: string
        limit:
          example: 20
          type: integer
        offset:
          example: 0
          type: integer
        total:
          example: 1
          type: integer
        results:
          items:
            $ref: '#/components/schemas/FtHolderEntry'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      - total_supply
      type: object
    SmartContract:
      description: A Smart Contract Detail
      example:
        clarity_version: 6
        contract_id: contract_id
        abi: abi
        canonical: true
        block_height: 0
        tx_id: tx_id
        source_code: source_code
      properties:
        tx_id:
          type: string
        canonical:
          type: boolean
        contract_id:
          type: string
        block_height:
          type: integer
        clarity_version:
          nullable: true
          type: integer
        source_code:
          type: string
        abi:
          nullable: true
          type: string
      required:
      - abi
      - block_height
      - canonical
      - clarity_version
      - contract_id
      - source_code
      - tx_id
      title: SmartContract
      type: object
    ContractListResponse:
      description: GET list of contracts
      example:
        offset: 0
        limit: 20
        results:
        - clarity_version: 6
          contract_id: contract_id
          abi: abi
          canonical: true
          block_height: 0
          tx_id: tx_id
          source_code: source_code
        - clarity_version: 6
          contract_id: contract_id
          abi: abi
          canonical: true
          block_height: 0
          tx_id: tx_id
          source_code: source_code
      properties:
        limit:
          example: 20
          type: integer
        offset:
          example: 0
          type: integer
        results:
          items:
            $ref: '#/components/schemas/SmartContract'
          type: array
      required:
      - limit
      - offset
      - results
      title: ContractListResponse
      type: object
    get_contract_events_by_id_200_response:
      description: List of events
      example:
        offset: 6
        limit: 0
        results:
        - event_type: smart_contract_log
          contract_log:
            contract_id: contract_id
            topic: topic
            value:
              repr: repr
              hex: hex
          tx_id: tx_id
          event_index: 6
        - event_type: smart_contract_log
          contract_log:
            contract_id: contract_id
            topic: topic
            value:
              repr: repr
              hex: hex
          tx_id: tx_id
          event_index: 6
      properties:
        limit:
          type: integer
        offset:
          type: integer
        results:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_events_inner'
          type: array
      required:
      - limit
      - offset
      - results
      type: object
    FeeRateRequest:
      description: Request to fetch fee for a transaction
      example:
        transaction: transaction
      properties:
        transaction:
          description: A serialized transaction
          type: string
      required:
      - transaction
      title: FeeRateRequest
      type: object
    FeeRate:
      description: Get fee rate information.
      example:
        fee_rate: 0
      properties:
        fee_rate:
          type: integer
      required:
      - fee_rate
      title: FeeRate
      type: object
    Microblock:
      description: A microblock
      example:
        microblock_sequence: 0
        parent_burn_block_hash: parent_burn_block_hash
        microblock_parent_hash: microblock_parent_hash
        block_hash: block_hash
        parent_block_hash: parent_block_hash
        canonical: true
        block_height: 6
        parent_burn_block_time_iso: parent_burn_block_time_iso
        txs:
        - txs
        - txs
        parent_burn_block_height: 5
        parent_block_height: 1
        microblock_hash: microblock_hash
        parent_burn_block_time: 5
        microblock_canonical: true
      properties:
        canonical:
          description: Set to `true` if the microblock corresponds to the canonical
            chain tip.
          type: boolean
        microblock_canonical:
          description: Set to `true` if the microblock was not orphaned in a following
            anchor block. Defaults to `true` if the following anchor block has not
            yet been created.
          type: boolean
        microblock_hash:
          description: The SHA512/256 hash of this microblock.
          type: string
        microblock_sequence:
          description: A hint to describe how to order a set of microblocks. Starts
            at 0.
          type: integer
        microblock_parent_hash:
          description: The SHA512/256 hash of the previous signed microblock in this
            stream.
          type: string
        block_height:
          description: The anchor block height that confirmed this microblock.
          type: integer
        parent_block_height:
          description: The height of the anchor block that preceded this microblock.
          type: integer
        parent_block_hash:
          description: The hash of the anchor block that preceded this microblock.
          type: string
        parent_burn_block_hash:
          description: The hash of the Bitcoin block that preceded this microblock.
          type: string
        parent_burn_block_time:
          description: The block timestamp of the Bitcoin block that preceded this
            microblock.
          type: integer
        parent_burn_block_time_iso:
          description: The ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) formatted block time
            of the bitcoin block that preceded this microblock.
          type: string
        parent_burn_block_height:
          description: The height of the Bitcoin block that preceded this microblock.
          type: integer
        block_hash:
          description: The hash of the anchor block that confirmed this microblock.
            This wil be empty for unanchored microblocks
          nullable: true
          type: string
        txs:
          description: List of transactions included in the microblock
          items:
            type: string
          type: array
      required:
      - block_hash
      - block_height
      - canonical
      - microblock_canonical
      - microblock_hash
      - microblock_parent_hash
      - microblock_sequence
      - parent_block_hash
      - parent_block_height
      - parent_burn_block_hash
      - parent_burn_block_height
      - parent_burn_block_time
      - parent_burn_block_time_iso
      - txs
      title: Microblock
      type: object
    MicroblockListResponse:
      description: GET request that returns microblocks
      example:
        total: 1
        offset: 0
        limit: 20
        results:
        - microblock_sequence: 0
          parent_burn_block_hash: parent_burn_block_hash
          microblock_parent_hash: microblock_parent_hash
          block_hash: block_hash
          parent_block_hash: parent_block_hash
          canonical: true
          block_height: 6
          parent_burn_block_time_iso: parent_burn_block_time_iso
          txs:
          - txs
          - txs
          parent_burn_block_height: 5
          parent_block_height: 1
          microblock_hash: microblock_hash
          parent_burn_block_time: 5
          microblock_canonical: true
        - microblock_sequence: 0
          parent_burn_block_hash: parent_burn_block_hash
          microblock_parent_hash: microblock_parent_hash
          block_hash: block_hash
          parent_block_hash: parent_block_hash
          canonical: true
          block_height: 6
          parent_burn_block_time_iso: parent_burn_block_time_iso
          txs:
          - txs
          - txs
          parent_burn_block_height: 5
          parent_block_height: 1
          microblock_hash: microblock_hash
          parent_burn_block_time: 5
          microblock_canonical: true
      properties:
        limit:
          example: 20
          type: integer
        offset:
          example: 0
          type: integer
        total:
          example: 1
          type: integer
        results:
          items:
            $ref: '#/components/schemas/Microblock'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      title: MicroblockListResponse
      type: object
    get_unanchored_txs_200_response:
      example:
        total: 0
        results:
        - tx_status: success
          execution_cost_write_count: 1
          execution_cost_read_length: 7
          event_count: 3
          block_height: 1
          block_time: 5.962133916683182
          post_conditions:
          - principal:
              type_id: principal_origin
            amount: amount
            type: stx
            condition_code: sent_equal_to
          - principal:
              type_id: principal_origin
            amount: amount
            type: stx
            condition_code: sent_equal_to
          post_condition_mode: allow
          sponsor_nonce: 6
          execution_cost_write_length: 1
          anchor_mode: on_chain_only
          tx_index: 9
          is_unanchored: true
          microblock_canonical: true
          tx_type: token_transfer
          events:
          - event_type: smart_contract_log
            contract_log:
              contract_id: contract_id
              topic: topic
              value:
                repr: repr
                hex: hex
            tx_id: tx_id
            event_index: 6
          - event_type: smart_contract_log
            contract_log:
              contract_id: contract_id
              topic: topic
              value:
                repr: repr
                hex: hex
            tx_id: tx_id
            event_index: 6
          microblock_sequence: 2
          burn_block_time_iso: burn_block_time_iso
          token_transfer:
            amount: amount
            memo: memo
            recipient_address: recipient_address
          block_hash: block_hash
          sponsored: true
          parent_block_hash: parent_block_hash
          canonical: true
          tx_id: tx_id
          nonce: 0
          burn_block_height: 2
          parent_burn_block_time_iso: parent_burn_block_time_iso
          fee_rate: fee_rate
          sender_address: sender_address
          execution_cost_runtime: 1
          block_time_iso: block_time_iso
          tx_result:
            repr: repr
            hex: hex
          execution_cost_read_count: 4
          burn_block_time: 5
          parent_burn_block_time: 7
          microblock_hash: microblock_hash
          sponsor_address: sponsor_address
        - tx_status: success
          execution_cost_write_count: 1
          execution_cost_read_length: 7
          event_count: 3
          block_height: 1
          block_time: 5.962133916683182
          post_conditions:
          - principal:
              type_id: principal_origin
            amount: amount
            type: stx
            condition_code: sent_equal_to
          - principal:
              type_id: principal_origin
            amount: amount
            type: stx
            condition_code: sent_equal_to
          post_condition_mode: allow
          sponsor_nonce: 6
          execution_cost_write_length: 1
          anchor_mode: on_chain_only
          tx_index: 9
          is_unanchored: true
          microblock_canonical: true
          tx_type: token_transfer
          events:
          - event_type: smart_contract_log
            contract_log:
              contract_id: contract_id
              topic: topic
              value:
                repr: repr
                hex: hex
            tx_id: tx_id
            event_index: 6
          - event_type: smart_contract_log
            contract_log:
              contract_id: contract_id
              topic: topic
              value:
                repr: repr
                hex: hex
            tx_id: tx_id
            event_index: 6
          microblock_sequence: 2
          burn_block_time_iso: burn_block_time_iso
          token_transfer:
            amount: amount
            memo: memo
            recipient_address: recipient_address
          block_hash: block_hash
          sponsored: true
          parent_block_hash: parent_block_hash
          canonical: true
          tx_id: tx_id
          nonce: 0
          burn_block_height: 2
          parent_burn_block_time_iso: parent_burn_block_time_iso
          fee_rate: fee_rate
          sender_address: sender_address
          execution_cost_runtime: 1
          block_time_iso: block_time_iso
          tx_result:
            repr: repr
            hex: hex
          execution_cost_read_count: 4
          burn_block_time: 5
          parent_burn_block_time: 7
          microblock_hash: microblock_hash
          sponsor_address: sponsor_address
      properties:
        total:
          type: integer
        results:
          items:
            $ref: '#/components/schemas/get_transaction_list_200_response_results_inner'
          type: array
      required:
      - results
      - total
      type: object
    Block:
      description: A block
      example:
        execution_cost_write_count: 3
        burn_block_time_iso: burn_block_time_iso
        burn_block_hash: burn_block_hash
        execution_cost_read_length: 7
        parent_microblock_hash: parent_microblock_hash
        parent_block_hash: parent_block_hash
        canonical: true
        burn_block_height: 5
        txs:
        - txs
        - txs
        microblocks_accepted:
        - microblocks_accepted
        - microblocks_accepted
        block_time: 6.027456183070403
        index_block_hash: index_block_hash
        microblocks_streamed:
        - microblocks_streamed
        - microblocks_streamed
        parent_microblock_sequence: 4
        execution_cost_runtime: 9
        block_time_iso: block_time_iso
        microblock_tx_count:
          key: 7
        execution_cost_read_count: 2
        tenure_height: 1
        burn_block_time: 5.962133916683182
        miner_txid: miner_txid
        execution_cost_write_length: 2
        hash: hash
        height: 0
      properties:
        canonical:
          description: Set to `true` if block corresponds to the canonical chain tip
          type: boolean
        height:
          description: Height of the block
          type: integer
        hash:
          description: Hash representing the block
          type: string
        block_time:
          description: Unix timestamp (in seconds) indicating when this block was
            mined.
          type: number
        block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) indicating when this
            block was mined.
          type: string
        tenure_height:
          description: The tenure height (AKA coinbase height) of this block
          type: integer
        index_block_hash:
          description: The only hash that can uniquely identify an anchored block
            or an unconfirmed state trie
          type: string
        parent_block_hash:
          description: Hash of the parent block
          type: string
        burn_block_time:
          description: Unix timestamp (in seconds) indicating when this block was
            mined.
          type: number
        burn_block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) indicating when this
            block was mined.
          type: string
        burn_block_hash:
          description: Hash of the anchor chain block
          type: string
        burn_block_height:
          description: Height of the anchor chain block
          type: integer
        miner_txid:
          description: Anchor chain transaction ID
          type: string
        execution_cost_read_count:
          description: Execution cost read count.
          type: integer
        execution_cost_read_length:
          description: Execution cost read length.
          type: integer
        execution_cost_runtime:
          description: Execution cost runtime.
          type: integer
        execution_cost_write_count:
          description: Execution cost write count.
          type: integer
        execution_cost_write_length:
          description: Execution cost write length.
          type: integer
        txs:
          description: List of transactions included in the block
          items:
            description: Transaction ID
            type: string
          type: array
        parent_microblock_hash:
          description: "The hash of the last streamed block that precedes this block\
            \ to which this block is to be appended. Not every anchored block will\
            \ have a parent microblock stream. An anchored block that does not have\
            \ a parent microblock stream has the parent microblock hash set to an\
            \ empty string, and the parent microblock sequence number set to -1."
          type: string
        parent_microblock_sequence:
          description: "The hash of the last streamed block that precedes this block\
            \ to which this block is to be appended. Not every anchored block will\
            \ have a parent microblock stream. An anchored block that does not have\
            \ a parent microblock stream has the parent microblock hash set to an\
            \ empty string, and the parent microblock sequence number set to -1."
          type: integer
        microblocks_accepted:
          description: List of microblocks that were accepted in this anchor block.
            Not every anchored block will have a accepted all (or any) of the previously
            streamed microblocks. Microblocks that were orphaned are not included
            in this list.
          items:
            description: Microblock hash
            type: string
          type: array
        microblocks_streamed:
          description: List of microblocks that were streamed/produced by this anchor
            block's miner. This list only includes microblocks that were accepted
            in the following anchor block. Microblocks that were orphaned are not
            included in this list.
          items:
            description: Microblock hash
            type: string
          type: array
        microblock_tx_count:
          additionalProperties:
            type: integer
          description: List of txs counts in each accepted microblock
          type: object
      required:
      - block_time
      - block_time_iso
      - burn_block_hash
      - burn_block_height
      - burn_block_time
      - burn_block_time_iso
      - canonical
      - execution_cost_read_count
      - execution_cost_read_length
      - execution_cost_runtime
      - execution_cost_write_count
      - execution_cost_write_length
      - hash
      - height
      - index_block_hash
      - microblock_tx_count
      - microblocks_accepted
      - microblocks_streamed
      - miner_txid
      - parent_block_hash
      - parent_microblock_hash
      - parent_microblock_sequence
      - tenure_height
      - txs
      title: Block
      type: object
    BlockListResponse:
      description: GET request that returns blocks
      example:
        total: 1
        offset: 0
        limit: 20
        results:
        - execution_cost_write_count: 3
          burn_block_time_iso: burn_block_time_iso
          burn_block_hash: burn_block_hash
          execution_cost_read_length: 7
          parent_microblock_hash: parent_microblock_hash
          parent_block_hash: parent_block_hash
          canonical: true
          burn_block_height: 5
          txs:
          - txs
          - txs
          microblocks_accepted:
          - microblocks_accepted
          - microblocks_accepted
          block_time: 6.027456183070403
          index_block_hash: index_block_hash
          microblocks_streamed:
          - microblocks_streamed
          - microblocks_streamed
          parent_microblock_sequence: 4
          execution_cost_runtime: 9
          block_time_iso: block_time_iso
          microblock_tx_count:
            key: 7
          execution_cost_read_count: 2
          tenure_height: 1
          burn_block_time: 5.962133916683182
          miner_txid: miner_txid
          execution_cost_write_length: 2
          hash: hash
          height: 0
        - execution_cost_write_count: 3
          burn_block_time_iso: burn_block_time_iso
          burn_block_hash: burn_block_hash
          execution_cost_read_length: 7
          parent_microblock_hash: parent_microblock_hash
          parent_block_hash: parent_block_hash
          canonical: true
          burn_block_height: 5
          txs:
          - txs
          - txs
          microblocks_accepted:
          - microblocks_accepted
          - microblocks_accepted
          block_time: 6.027456183070403
          index_block_hash: index_block_hash
          microblocks_streamed:
          - microblocks_streamed
          - microblocks_streamed
          parent_microblock_sequence: 4
          execution_cost_runtime: 9
          block_time_iso: block_time_iso
          microblock_tx_count:
            key: 7
          execution_cost_read_count: 2
          tenure_height: 1
          burn_block_time: 5.962133916683182
          miner_txid: miner_txid
          execution_cost_write_length: 2
          hash: hash
          height: 0
      properties:
        limit:
          example: 20
          type: integer
        offset:
          example: 0
          type: integer
        total:
          example: 1
          type: integer
        results:
          items:
            $ref: '#/components/schemas/Block'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      title: BlockListResponse
      type: object
    BurnchainRewardSlotHolder:
      description: Reward slot holder on the burnchain
      example:
        burn_block_hash: burn_block_hash
        address: address
        slot_index: 6
        canonical: true
        burn_block_height: 0
      properties:
        canonical:
          description: Set to `true` if block corresponds to the canonical burchchain
            tip
          type: boolean
        burn_block_hash:
          description: The hash representing the burnchain block
          type: string
        burn_block_height:
          description: Height of the burnchain block
          type: integer
        address:
          description: "The recipient address that validly received PoX commitments,\
            \ in the format native to the burnchain (e.g. B58 encoded for Bitcoin)"
          type: string
        slot_index:
          description: "The index position of the reward entry, useful for ordering\
            \ when there's more than one slot per burnchain block"
          type: integer
      required:
      - address
      - burn_block_hash
      - burn_block_height
      - canonical
      - slot_index
      title: BurnchainRewardSlotHolder
      type: object
    List_of_burnchain_reward_recipients_and_amounts:
      example:
        total: 1
        offset: 0
        limit: 20
        results:
        - burn_block_hash: burn_block_hash
          address: address
          slot_index: 6
          canonical: true
          burn_block_height: 0
        - burn_block_hash: burn_block_hash
          address: address
          slot_index: 6
          canonical: true
          burn_block_height: 0
      properties:
        limit:
          example: 20
          type: integer
        offset:
          example: 0
          type: integer
        total:
          example: 1
          type: integer
        results:
          items:
            $ref: '#/components/schemas/BurnchainRewardSlotHolder'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      title: List of burnchain reward recipients and amounts
      type: object
    BurnchainRewardSlotHolderListResponse:
      description: List of burnchain reward recipients and amounts
      example:
        total: 1
        offset: 0
        limit: 20
        results:
        - burn_block_hash: burn_block_hash
          address: address
          slot_index: 6
          canonical: true
          burn_block_height: 0
        - burn_block_hash: burn_block_hash
          address: address
          slot_index: 6
          canonical: true
          burn_block_height: 0
      properties:
        limit:
          example: 20
          type: integer
        offset:
          example: 0
          type: integer
        total:
          example: 1
          type: integer
        results:
          items:
            $ref: '#/components/schemas/BurnchainRewardSlotHolder'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      title: BurnchainRewardSlotHolderListResponse
      type: object
    BurnchainReward:
      description: Reward payment made on the burnchain
      example:
        burn_block_hash: burn_block_hash
        reward_amount: reward_amount
        reward_index: 5
        burn_amount: burn_amount
        canonical: true
        burn_block_height: 1
        reward_recipient: reward_recipient
      properties:
        canonical:
          description: Set to `true` if block corresponds to the canonical burchchain
            tip
          type: boolean
        burn_block_hash:
          description: The hash representing the burnchain block
          type: string
        burn_block_height:
          description: Height of the burnchain block
          type: integer
        burn_amount:
          description: "The total amount of burnchain tokens burned for this burnchain\
            \ block, in the smallest unit (e.g. satoshis for Bitcoin)"
          type: string
        reward_recipient:
          description: "The recipient address that received the burnchain rewards,\
            \ in the format native to the burnchain (e.g. B58 encoded for Bitcoin)"
          type: string
        reward_amount:
          description: "The amount of burnchain tokens rewarded to the recipient,\
            \ in the smallest unit (e.g. satoshis for Bitcoin)"
          type: string
        reward_index:
          description: "The index position of the reward entry, useful for ordering\
            \ when there's more than one recipient per burnchain block"
          type: integer
      required:
      - burn_amount
      - burn_block_hash
      - burn_block_height
      - canonical
      - reward_amount
      - reward_index
      - reward_recipient
      title: BurnchainReward
      type: object
    get_burnchain_reward_list_200_response:
      description: List of burnchain reward recipients and amounts
      example:
        offset: 6
        limit: 0
        results:
        - burn_block_hash: burn_block_hash
          reward_amount: reward_amount
          reward_index: 5
          burn_amount: burn_amount
          canonical: true
          burn_block_height: 1
          reward_recipient: reward_recipient
        - burn_block_hash: burn_block_hash
          reward_amount: reward_amount
          reward_index: 5
          burn_amount: burn_amount
          canonical: true
          burn_block_height: 1
          reward_recipient: reward_recipient
      properties:
        limit:
          type: integer
        offset:
          type: integer
        results:
          items:
            $ref: '#/components/schemas/BurnchainReward'
          type: array
      required:
      - limit
      - offset
      - results
      type: object
    BurnchainRewardsTotal:
      description: Total burnchain rewards made to a recipient
      example:
        reward_amount: reward_amount
        reward_recipient: reward_recipient
      properties:
        reward_recipient:
          description: "The recipient address that received the burnchain rewards,\
            \ in the format native to the burnchain (e.g. B58 encoded for Bitcoin)"
          type: string
        reward_amount:
          description: "The total amount of burnchain tokens rewarded to the recipient,\
            \ in the smallest unit (e.g. satoshis for Bitcoin)"
          type: string
      required:
      - reward_amount
      - reward_recipient
      title: BurnchainRewardsTotal
      type: object
    AddressUnlockSchedule:
      description: Unlock schedule amount and block height
      example:
        amount: amount
        block_height: 5
      properties:
        amount:
          description: Micro-STX amount locked at this block height.
          type: string
        block_height:
          type: integer
      required:
      - amount
      - block_height
      title: AddressUnlockSchedule
      type: object
    AddressTokenOfferingLocked:
      description: Token Offering Locked
      example:
        unlock_schedule:
        - amount: amount
          block_height: 5
        - amount: amount
          block_height: 5
        total_locked: total_locked
        total_unlocked: total_unlocked
      properties:
        total_locked:
          description: Micro-STX amount still locked at current block height.
          type: string
        total_unlocked:
          description: Micro-STX amount unlocked at current block height.
          type: string
        unlock_schedule:
          items:
            $ref: '#/components/schemas/AddressUnlockSchedule'
          type: array
      required:
      - total_locked
      - total_unlocked
      - unlock_schedule
      title: AddressTokenOfferingLocked
      type: object
    AddressStxBalance:
      allOf:
      - properties:
          balance:
            type: string
          estimated_balance:
            description: Total STX balance considering pending mempool transactions
            type: string
          total_sent:
            type: string
          total_received:
            type: string
          total_fees_sent:
            type: string
          total_miner_rewards_received:
            type: string
          lock_tx_id:
            description: The transaction where the lock event occurred. Empty if no
              tokens are locked.
            type: string
          locked:
            description: "The amount of locked STX, as string quoted micro-STX. Zero\
              \ if no tokens are locked."
            type: string
          lock_height:
            description: The STX chain block height of when the lock event occurred.
              Zero if no tokens are locked.
            type: integer
          burnchain_lock_height:
            description: The burnchain block height of when the lock event occurred.
              Zero if no tokens are locked.
            type: integer
          burnchain_unlock_height:
            description: The burnchain block height of when the tokens unlock. Zero
              if no tokens are locked.
            type: integer
        required:
        - balance
        - burnchain_lock_height
        - burnchain_unlock_height
        - lock_height
        - lock_tx_id
        - locked
        - total_fees_sent
        - total_miner_rewards_received
        - total_received
        - total_sent
        title: StxBalance
        type: object
      - properties:
          token_offering_locked:
            $ref: '#/components/schemas/AddressTokenOfferingLocked'
        type: object
      description: GET request that returns address balances
      example:
        total_fees_sent: total_fees_sent
        balance: balance
        token_offering_locked:
          unlock_schedule:
          - amount: amount
            block_height: 5
          - amount: amount
            block_height: 5
          total_locked: total_locked
          total_unlocked: total_unlocked
        burnchain_lock_height: 6
        total_sent: total_sent
        lock_height: 0
        lock_tx_id: lock_tx_id
        locked: locked
        burnchain_unlock_height: 1
        total_received: total_received
        estimated_balance: estimated_balance
        total_miner_rewards_received: total_miner_rewards_received
      title: AddressStxBalance
      type: object
    StxBalance:
      example:
        total_fees_sent: total_fees_sent
        balance: balance
        burnchain_lock_height: 6
        total_sent: total_sent
        lock_height: 0
        lock_tx_id: lock_tx_id
        locked: locked
        burnchain_unlock_height: 1
        total_received: total_received
        estimated_balance: estimated_balance
        total_miner_rewards_received: total_miner_rewards_received
      properties:
        balance:
          type: string
        estimated_balance:
          description: Total STX balance considering pending mempool transactions
          type: string
        total_sent:
          type: string
        total_received:
          type: string
        total_fees_sent:
          type: string
        total_miner_rewards_received:
          type: string
        lock_tx_id:
          description: The transaction where the lock event occurred. Empty if no
            tokens are locked.
          type: string
        locked:
          description: "The amount of locked STX, as string quoted micro-STX. Zero\
            \ if no tokens are locked."
          type: string
        lock_height:
          description: The STX chain block height of when the lock event occurred.
            Zero if no tokens are locked.
          type: integer
        burnchain_lock_height:
          description: The burnchain block height of when the lock event occurred.
            Zero if no tokens are locked.
          type: integer
        burnchain_unlock_height:
          description: The burnchain block height of when the tokens unlock. Zero
            if no tokens are locked.
          type: integer
      required:
      - balance
      - burnchain_lock_height
      - burnchain_unlock_height
      - lock_height
      - lock_tx_id
      - locked
      - total_fees_sent
      - total_miner_rewards_received
      - total_received
      - total_sent
      title: StxBalance
      type: object
    FtBalance:
      example:
        balance: balance
        total_sent: total_sent
        total_received: total_received
      properties:
        balance:
          type: string
        total_sent:
          type: string
        total_received:
          type: string
      required:
      - balance
      - total_received
      - total_sent
      title: FtBalance
      type: object
    NftBalance:
      example:
        total_sent: total_sent
        count: count
        total_received: total_received
      properties:
        count:
          type: string
        total_sent:
          type: string
        total_received:
          type: string
      required:
      - count
      - total_received
      - total_sent
      title: NftBalance
      type: object
    AddressBalanceResponse:
      description: GET request that returns address balances
      example:
        token_offering_locked:
          unlock_schedule:
          - amount: amount
            block_height: 5
          - amount: amount
            block_height: 5
          total_locked: total_locked
          total_unlocked: total_unlocked
        stx:
          total_fees_sent: total_fees_sent
          balance: balance
          burnchain_lock_height: 6
          total_sent: total_sent
          lock_height: 0
          lock_tx_id: lock_tx_id
          locked: locked
          burnchain_unlock_height: 1
          total_received: total_received
          estimated_balance: estimated_balance
          total_miner_rewards_received: total_miner_rewards_received
        non_fungible_tokens:
          key:
            total_sent: total_sent
            count: count
            total_received: total_received
        fungible_tokens:
          key:
            balance: balance
            total_sent: total_sent
            total_received: total_received
      properties:
        stx:
          $ref: '#/components/schemas/StxBalance'
        fungible_tokens:
          additionalProperties:
            $ref: '#/components/schemas/FtBalance'
          type: object
        non_fungible_tokens:
          additionalProperties:
            $ref: '#/components/schemas/NftBalance'
          type: object
        token_offering_locked:
          $ref: '#/components/schemas/AddressTokenOfferingLocked'
      required:
      - fungible_tokens
      - non_fungible_tokens
      - stx
      title: AddressBalanceResponse
      type: object
    AddressTransactionsListResponse:
      description: GET request that returns account transactions
      example:
        total: 1
        offset: 0
        limit: 20
        results:
        - tx_status: success
          execution_cost_write_count: 1
          execution_cost_read_length: 7
          event_count: 3
          block_height: 1
          block_time: 5.962133916683182
          post_conditions:
          - principal:
              type_id: principal_origin
            amount: amount
            type: stx
            condition_code: sent_equal_to
          - principal:
              type_id: principal_origin
            amount: amount
            type: stx
            condition_code: sent_equal_to
          post_condition_mode: allow
          sponsor_nonce: 6
          execution_cost_write_length: 1
          anchor_mode: on_chain_only
          tx_index: 9
          is_unanchored: true
          microblock_canonical: true
          tx_type: token_transfer
          events:
          - event_type: smart_contract_log
            contract_log:
              contract_id: contract_id
              topic: topic
              value:
                repr: repr
                hex: hex
            tx_id: tx_id
            event_index: 6
          - event_type: smart_contract_log
            contract_log:
              contract_id: contract_id
              topic: topic
              value:
                repr: repr
                hex: hex
            tx_id: tx_id
            event_index: 6
          microblock_sequence: 2
          burn_block_time_iso: burn_block_time_iso
          token_transfer:
            amount: amount
            memo: memo
            recipient_address: recipient_address
          block_hash: block_hash
          sponsored: true
          parent_block_hash: parent_block_hash
          canonical: true
          tx_id: tx_id
          nonce: 0
          burn_block_height: 2
          parent_burn_block_time_iso: parent_burn_block_time_iso
          fee_rate: fee_rate
          sender_address: sender_address
          execution_cost_runtime: 1
          block_time_iso: block_time_iso
          tx_result:
            repr: repr
            hex: hex
          execution_cost_read_count: 4
          burn_block_time: 5
          parent_burn_block_time: 7
          microblock_hash: microblock_hash
          sponsor_address: sponsor_address
        - tx_status: success
          execution_cost_write_count: 1
          execution_cost_read_length: 7
          event_count: 3
          block_height: 1
          block_time: 5.962133916683182
          post_conditions:
          - principal:
              type_id: principal_origin
            amount: amount
            type: stx
            condition_code: sent_equal_to
          - principal:
              type_id: principal_origin
            amount: amount
            type: stx
            condition_code: sent_equal_to
          post_condition_mode: allow
          sponsor_nonce: 6
          execution_cost_write_length: 1
          anchor_mode: on_chain_only
          tx_index: 9
          is_unanchored: true
          microblock_canonical: true
          tx_type: token_transfer
          events:
          - event_type: smart_contract_log
            contract_log:
              contract_id: contract_id
              topic: topic
              value:
                repr: repr
                hex: hex
            tx_id: tx_id
            event_index: 6
          - event_type: smart_contract_log
            contract_log:
              contract_id: contract_id
              topic: topic
              value:
                repr: repr
                hex: hex
            tx_id: tx_id
            event_index: 6
          microblock_sequence: 2
          burn_block_time_iso: burn_block_time_iso
          token_transfer:
            amount: amount
            memo: memo
            recipient_address: recipient_address
          block_hash: block_hash
          sponsored: true
          parent_block_hash: parent_block_hash
          canonical: true
          tx_id: tx_id
          nonce: 0
          burn_block_height: 2
          parent_burn_block_time_iso: parent_burn_block_time_iso
          fee_rate: fee_rate
          sender_address: sender_address
          execution_cost_runtime: 1
          block_time_iso: block_time_iso
          tx_result:
            repr: repr
            hex: hex
          execution_cost_read_count: 4
          burn_block_time: 5
          parent_burn_block_time: 7
          microblock_hash: microblock_hash
          sponsor_address: sponsor_address
      properties:
        limit:
          example: 20
          type: integer
        offset:
          example: 0
          type: integer
        total:
          example: 1
          type: integer
        results:
          items:
            $ref: '#/components/schemas/get_transaction_list_200_response_results_inner'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      title: AddressTransactionsListResponse
      type: object
    AddressTransactionWithTransfers_stx_transfers_inner:
      example:
        amount: amount
        sender: sender
        recipient: recipient
      properties:
        amount:
          description: Amount transferred in micro-STX as an integer string.
          type: string
        sender:
          description: Principal that sent STX. This is unspecified if the STX were
            minted.
          type: string
        recipient:
          description: Principal that received STX. This is unspecified if the STX
            were burned.
          type: string
      required:
      - amount
      type: object
    AddressTransactionWithTransfers_ft_transfers_inner:
      example:
        amount: amount
        sender: sender
        asset_identifier: asset_identifier
        recipient: recipient
      properties:
        amount:
          description: Amount transferred as an integer string. This balance does
            not factor in possible SIP-010 decimals.
          type: string
        asset_identifier:
          description: Fungible Token asset identifier.
          type: string
        sender:
          description: Principal that sent the asset.
          type: string
        recipient:
          description: Principal that received the asset.
          type: string
      required:
      - amount
      - asset_identifier
      type: object
    AddressTransactionWithTransfers_nft_transfers_inner_value:
      description: Non Fungible Token asset value.
      example:
        repr: repr
        hex: hex
      properties:
        hex:
          type: string
        repr:
          type: string
      required:
      - hex
      - repr
      type: object
    AddressTransactionWithTransfers_nft_transfers_inner:
      example:
        sender: sender
        asset_identifier: asset_identifier
        recipient: recipient
        value:
          repr: repr
          hex: hex
      properties:
        value:
          $ref: '#/components/schemas/AddressTransactionWithTransfers_nft_transfers_inner_value'
        asset_identifier:
          description: Non Fungible Token asset identifier.
          type: string
        sender:
          description: Principal that sent the asset.
          type: string
        recipient:
          description: Principal that received the asset.
          type: string
      required:
      - asset_identifier
      - value
      type: object
    AddressTransactionWithTransfers:
      description: Transaction with STX transfers for a given address
      example:
        stx_sent: stx_sent
        nft_transfers:
        - sender: sender
          asset_identifier: asset_identifier
          recipient: recipient
          value:
            repr: repr
            hex: hex
        - sender: sender
          asset_identifier: asset_identifier
          recipient: recipient
          value:
            repr: repr
            hex: hex
        tx:
          tx_status: success
          execution_cost_write_count: 1
          execution_cost_read_length: 7
          event_count: 3
          block_height: 1
          block_time: 5.962133916683182
          post_conditions:
          - principal:
              type_id: principal_origin
            amount: amount
            type: stx
            condition_code: sent_equal_to
          - principal:
              type_id: principal_origin
            amount: amount
            type: stx
            condition_code: sent_equal_to
          post_condition_mode: allow
          sponsor_nonce: 6
          execution_cost_write_length: 1
          anchor_mode: on_chain_only
          tx_index: 9
          is_unanchored: true
          microblock_canonical: true
          tx_type: token_transfer
          events:
          - event_type: smart_contract_log
            contract_log:
              contract_id: contract_id
              topic: topic
              value:
                repr: repr
                hex: hex
            tx_id: tx_id
            event_index: 6
          - event_type: smart_contract_log
            contract_log:
              contract_id: contract_id
              topic: topic
              value:
                repr: repr
                hex: hex
            tx_id: tx_id
            event_index: 6
          microblock_sequence: 2
          burn_block_time_iso: burn_block_time_iso
          token_transfer:
            amount: amount
            memo: memo
            recipient_address: recipient_address
          block_hash: block_hash
          sponsored: true
          parent_block_hash: parent_block_hash
          canonical: true
          tx_id: tx_id
          nonce: 0
          burn_block_height: 2
          parent_burn_block_time_iso: parent_burn_block_time_iso
          fee_rate: fee_rate
          sender_address: sender_address
          execution_cost_runtime: 1
          block_time_iso: block_time_iso
          tx_result:
            repr: repr
            hex: hex
          execution_cost_read_count: 4
          burn_block_time: 5
          parent_burn_block_time: 7
          microblock_hash: microblock_hash
          sponsor_address: sponsor_address
        stx_received: stx_received
        stx_transfers:
        - amount: amount
          sender: sender
          recipient: recipient
        - amount: amount
          sender: sender
          recipient: recipient
        ft_transfers:
        - amount: amount
          sender: sender
          asset_identifier: asset_identifier
          recipient: recipient
        - amount: amount
          sender: sender
          asset_identifier: asset_identifier
          recipient: recipient
      properties:
        tx:
          $ref: '#/components/schemas/get_transaction_list_200_response_results_inner'
        stx_sent:
          description: "Total sent from the given address, including the tx fee, in\
            \ micro-STX as an integer string."
          type: string
        stx_received:
          description: Total received by the given address in micro-STX as an integer
            string.
          type: string
        stx_transfers:
          items:
            $ref: '#/components/schemas/AddressTransactionWithTransfers_stx_transfers_inner'
          type: array
        ft_transfers:
          items:
            $ref: '#/components/schemas/AddressTransactionWithTransfers_ft_transfers_inner'
          type: array
        nft_transfers:
          items:
            $ref: '#/components/schemas/AddressTransactionWithTransfers_nft_transfers_inner'
          type: array
      required:
      - stx_received
      - stx_sent
      - stx_transfers
      - tx
      title: AddressTransactionWithTransfers
      type: object
    AddressTransactionsWithTransfersListResponse:
      example:
        total: 1
        offset: 0
        limit: 20
        results:
        - stx_sent: stx_sent
          nft_transfers:
          - sender: sender
            asset_identifier: asset_identifier
            recipient: recipient
            value:
              repr: repr
              hex: hex
          - sender: sender
            asset_identifier: asset_identifier
            recipient: recipient
            value:
              repr: repr
              hex: hex
          tx:
            tx_status: success
            execution_cost_write_count: 1
            execution_cost_read_length: 7
            event_count: 3
            block_height: 1
            block_time: 5.962133916683182
            post_conditions:
            - principal:
                type_id: principal_origin
              amount: amount
              type: stx
              condition_code: sent_equal_to
            - principal:
                type_id: principal_origin
              amount: amount
              type: stx
              condition_code: sent_equal_to
            post_condition_mode: allow
            sponsor_nonce: 6
            execution_cost_write_length: 1
            anchor_mode: on_chain_only
            tx_index: 9
            is_unanchored: true
            microblock_canonical: true
            tx_type: token_transfer
            events:
            - event_type: smart_contract_log
              contract_log:
                contract_id: contract_id
                topic: topic
                value:
                  repr: repr
                  hex: hex
              tx_id: tx_id
              event_index: 6
            - event_type: smart_contract_log
              contract_log:
                contract_id: contract_id
                topic: topic
                value:
                  repr: repr
                  hex: hex
              tx_id: tx_id
              event_index: 6
            microblock_sequence: 2
            burn_block_time_iso: burn_block_time_iso
            token_transfer:
              amount: amount
              memo: memo
              recipient_address: recipient_address
            block_hash: block_hash
            sponsored: true
            parent_block_hash: parent_block_hash
            canonical: true
            tx_id: tx_id
            nonce: 0
            burn_block_height: 2
            parent_burn_block_time_iso: parent_burn_block_time_iso
            fee_rate: fee_rate
            sender_address: sender_address
            execution_cost_runtime: 1
            block_time_iso: block_time_iso
            tx_result:
              repr: repr
              hex: hex
            execution_cost_read_count: 4
            burn_block_time: 5
            parent_burn_block_time: 7
            microblock_hash: microblock_hash
            sponsor_address: sponsor_address
          stx_received: stx_received
          stx_transfers:
          - amount: amount
            sender: sender
            recipient: recipient
          - amount: amount
            sender: sender
            recipient: recipient
          ft_transfers:
          - amount: amount
            sender: sender
            asset_identifier: asset_identifier
            recipient: recipient
          - amount: amount
            sender: sender
            asset_identifier: asset_identifier
            recipient: recipient
        - stx_sent: stx_sent
          nft_transfers:
          - sender: sender
            asset_identifier: asset_identifier
            recipient: recipient
            value:
              repr: repr
              hex: hex
          - sender: sender
            asset_identifier: asset_identifier
            recipient: recipient
            value:
              repr: repr
              hex: hex
          tx:
            tx_status: success
            execution_cost_write_count: 1
            execution_cost_read_length: 7
            event_count: 3
            block_height: 1
            block_time: 5.962133916683182
            post_conditions:
            - principal:
                type_id: principal_origin
              amount: amount
              type: stx
              condition_code: sent_equal_to
            - principal:
                type_id: principal_origin
              amount: amount
              type: stx
              condition_code: sent_equal_to
            post_condition_mode: allow
            sponsor_nonce: 6
            execution_cost_write_length: 1
            anchor_mode: on_chain_only
            tx_index: 9
            is_unanchored: true
            microblock_canonical: true
            tx_type: token_transfer
            events:
            - event_type: smart_contract_log
              contract_log:
                contract_id: contract_id
                topic: topic
                value:
                  repr: repr
                  hex: hex
              tx_id: tx_id
              event_index: 6
            - event_type: smart_contract_log
              contract_log:
                contract_id: contract_id
                topic: topic
                value:
                  repr: repr
                  hex: hex
              tx_id: tx_id
              event_index: 6
            microblock_sequence: 2
            burn_block_time_iso: burn_block_time_iso
            token_transfer:
              amount: amount
              memo: memo
              recipient_address: recipient_address
            block_hash: block_hash
            sponsored: true
            parent_block_hash: parent_block_hash
            canonical: true
            tx_id: tx_id
            nonce: 0
            burn_block_height: 2
            parent_burn_block_time_iso: parent_burn_block_time_iso
            fee_rate: fee_rate
            sender_address: sender_address
            execution_cost_runtime: 1
            block_time_iso: block_time_iso
            tx_result:
              repr: repr
              hex: hex
            execution_cost_read_count: 4
            burn_block_time: 5
            parent_burn_block_time: 7
            microblock_hash: microblock_hash
            sponsor_address: sponsor_address
          stx_received: stx_received
          stx_transfers:
          - amount: amount
            sender: sender
            recipient: recipient
          - amount: amount
            sender: sender
            recipient: recipient
          ft_transfers:
          - amount: amount
            sender: sender
            asset_identifier: asset_identifier
            recipient: recipient
          - amount: amount
            sender: sender
            asset_identifier: asset_identifier
            recipient: recipient
      properties:
        limit:
          example: 20
          type: integer
        offset:
          example: 0
          type: integer
        total:
          example: 1
          type: integer
        results:
          items:
            $ref: '#/components/schemas/AddressTransactionWithTransfers'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      title: AddressTransactionsWithTransfersListResponse
      type: object
    AddressAssetsListResponse:
      example:
        total: 1
        offset: 0
        limit: 20
        results:
        - event_type: smart_contract_log
          contract_log:
            contract_id: contract_id
            topic: topic
            value:
              repr: repr
              hex: hex
          tx_id: tx_id
          event_index: 6
        - event_type: smart_contract_log
          contract_log:
            contract_id: contract_id
            topic: topic
            value:
              repr: repr
              hex: hex
          tx_id: tx_id
          event_index: 6
      properties:
        limit:
          example: 20
          type: integer
        offset:
          example: 0
          type: integer
        total:
          example: 1
          type: integer
        results:
          items:
            $ref: '#/components/schemas/TokenTransferTransaction_events_inner'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      title: AddressAssetsListResponse
      type: object
    InboundStxTransfer_transfer_type:
      anyOf:
      - enum:
        - bulk-send
        type: string
      - enum:
        - stx-transfer
        type: string
      - enum:
        - stx-transfer-memo
        type: string
      description: Indicates if the transfer is from a stx-transfer transaction or
        a contract-call transaction
    InboundStxTransfer:
      example:
        amount: amount
        sender: sender
        memo: memo
        block_height: 0
        transfer_type: bulk-send
        tx_id: tx_id
        tx_index: 6
      properties:
        sender:
          description: Principal that sent this transfer
          type: string
        amount:
          description: Transfer amount in micro-STX as integer string
          type: string
        memo:
          description: Hex encoded memo bytes associated with the transfer
          type: string
        block_height:
          description: Block height at which this transfer occurred
          type: integer
        tx_id:
          description: The transaction ID in which this transfer occurred
          type: string
        transfer_type:
          $ref: '#/components/schemas/InboundStxTransfer_transfer_type'
        tx_index:
          description: Index of the transaction within a block
          type: integer
      required:
      - amount
      - block_height
      - memo
      - sender
      - transfer_type
      - tx_id
      - tx_index
      title: InboundStxTransfer
      type: object
    AddressStxInboundListResponse:
      example:
        total: 1
        offset: 0
        limit: 20
        results:
        - amount: amount
          sender: sender
          memo: memo
          block_height: 0
          transfer_type: bulk-send
          tx_id: tx_id
          tx_index: 6
        - amount: amount
          sender: sender
          memo: memo
          block_height: 0
          transfer_type: bulk-send
          tx_id: tx_id
          tx_index: 6
      properties:
        limit:
          example: 20
          type: integer
        offset:
          example: 0
          type: integer
        total:
          example: 1
          type: integer
        results:
          items:
            $ref: '#/components/schemas/InboundStxTransfer'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      title: AddressStxInboundListResponse
      type: object
    AddressNonces:
      description: "The latest nonce values used by an account by inspecting the mempool,\
        \ microblock transactions, and anchored transactions"
      example:
        detected_mempool_nonces:
        - 5
        - 5
        last_mempool_tx_nonce: 0
        last_executed_tx_nonce: 6
        detected_missing_nonces:
        - 5
        - 5
        possible_next_nonce: 1
      properties:
        last_mempool_tx_nonce:
          description: The latest nonce found within mempool transactions sent by
            this address. Will be null if there are no current mempool transactions
            for this address.
          nullable: true
          type: integer
        last_executed_tx_nonce:
          description: "The latest nonce found within transactions sent by this address,\
            \ including unanchored microblock transactions. Will be null if there\
            \ are no current transactions for this address."
          nullable: true
          type: integer
        possible_next_nonce:
          description: "The likely nonce required for creating the next transaction,\
            \ based on the last nonces seen by the API. This can be incorrect if the\
            \ API's mempool or transactions aren't fully synchronized, even by a small\
            \ amount, or if a previous transaction is still propagating through the\
            \ Stacks blockchain network when this endpoint is called."
          type: integer
        detected_missing_nonces:
          description: Nonces that appear to be missing and likely causing a mempool
            transaction to be stuck.
          items:
            type: integer
          type: array
        detected_mempool_nonces:
          description: Nonces currently in mempool for this address.
          items:
            type: integer
          type: array
      required:
      - detected_mempool_nonces
      - detected_missing_nonces
      - last_executed_tx_nonce
      - last_mempool_tx_nonce
      - possible_next_nonce
      title: AddressNonces
      type: object
    AddressSearchResult:
      description: Address search result
      example:
        metadata:
          total_fees_sent: total_fees_sent
          balance: balance
          token_offering_locked:
            unlock_schedule:
            - amount: amount
              block_height: 5
            - amount: amount
              block_height: 5
            total_locked: total_locked
            total_unlocked: total_unlocked
          burnchain_lock_height: 6
          total_sent: total_sent
          lock_height: 0
          lock_tx_id: lock_tx_id
          locked: locked
          burnchain_unlock_height: 1
          total_received: total_received
          estimated_balance: estimated_balance
          total_miner_rewards_received: total_miner_rewards_received
        entity_type: standard_address
        entity_id: entity_id
      properties:
        entity_id:
          description: The id used to search this query.
          type: string
        entity_type:
          enum:
          - standard_address
          type: string
        metadata:
          $ref: '#/components/schemas/AddressStxBalance'
      required:
      - entity_id
      - entity_type
      title: AddressSearchResult
      type: object
    BlockSearchResult_block_data:
      properties:
        canonical:
          type: boolean
        hash:
          type: string
        parent_block_hash:
          type: string
        burn_block_time:
          type: integer
        height:
          type: integer
      required:
      - burn_block_time
      - canonical
      - hash
      - height
      - parent_block_hash
      type: object
    BlockSearchResult:
      description: Block search result
      properties:
        entity_id:
          description: The id used to search this query.
          type: string
        entity_type:
          enum:
          - block_hash
          type: string
        block_data:
          $ref: '#/components/schemas/BlockSearchResult_block_data'
        metadata:
          $ref: '#/components/schemas/Block'
      required:
      - block_data
      - entity_id
      - entity_type
      title: BlockSearchResult
      type: object
    ContractSearchResult_tx_data:
      properties:
        canonical:
          type: boolean
        block_hash:
          type: string
        burn_block_time:
          type: integer
        block_height:
          type: integer
        tx_type:
          type: string
        tx_id:
          type: string
      required:
      - tx_id
      - tx_type
      type: object
    ContractSearchResult:
      description: Contract search result
      properties:
        entity_id:
          description: The id used to search this query.
          type: string
        entity_type:
          enum:
          - contract_address
          type: string
        tx_data:
          $ref: '#/components/schemas/ContractSearchResult_tx_data'
        metadata:
          $ref: '#/components/schemas/get_transaction_by_id_200_response'
      required:
      - entity_id
      - entity_type
      title: ContractSearchResult
      type: object
    MempoolTxSearchResult_tx_data:
      properties:
        tx_type:
          type: string
      required:
      - tx_type
      type: object
    MempoolTxSearchResult:
      description: Mempool transaction search result
      properties:
        entity_id:
          description: The id used to search this query.
          type: string
        entity_type:
          enum:
          - mempool_tx_id
          type: string
        tx_data:
          $ref: '#/components/schemas/MempoolTxSearchResult_tx_data'
        metadata:
          $ref: '#/components/schemas/get_mempool_transaction_list_200_response_results_inner'
      required:
      - entity_id
      - entity_type
      - tx_data
      title: MempoolTxSearchResult
      type: object
    TxSearchResult_tx_data:
      properties:
        canonical:
          type: boolean
        block_hash:
          type: string
        burn_block_time:
          type: integer
        block_height:
          type: integer
        tx_type:
          type: string
      required:
      - block_hash
      - block_height
      - burn_block_time
      - canonical
      - tx_type
      type: object
    TxSearchResult:
      description: Transaction search result
      properties:
        entity_id:
          description: The id used to search this query.
          type: string
        entity_type:
          enum:
          - tx_id
          type: string
        tx_data:
          $ref: '#/components/schemas/TxSearchResult_tx_data'
        metadata:
          $ref: '#/components/schemas/get_transaction_list_200_response_results_inner'
      required:
      - entity_id
      - entity_type
      - tx_data
      title: TxSearchResult
      type: object
    search_by_id_200_response_result:
      anyOf:
      - $ref: '#/components/schemas/AddressSearchResult'
      - $ref: '#/components/schemas/BlockSearchResult'
      - $ref: '#/components/schemas/ContractSearchResult'
      - $ref: '#/components/schemas/MempoolTxSearchResult'
      - $ref: '#/components/schemas/TxSearchResult'
    search_by_id_200_response:
      example:
        result:
          metadata:
            total_fees_sent: total_fees_sent
            balance: balance
            token_offering_locked:
              unlock_schedule:
              - amount: amount
                block_height: 5
              - amount: amount
                block_height: 5
              total_locked: total_locked
              total_unlocked: total_unlocked
            burnchain_lock_height: 6
            total_sent: total_sent
            lock_height: 0
            lock_tx_id: lock_tx_id
            locked: locked
            burnchain_unlock_height: 1
            total_received: total_received
            estimated_balance: estimated_balance
            total_miner_rewards_received: total_miner_rewards_received
          entity_type: standard_address
          entity_id: entity_id
        found: true
      properties:
        found:
          type: boolean
        result:
          $ref: '#/components/schemas/search_by_id_200_response_result'
      required:
      - found
      - result
      type: object
    search_by_id_404_response_result_entity_type:
      anyOf:
      - enum:
        - tx_id
        type: string
      - enum:
        - mempool_tx_id
        type: string
      - enum:
        - block_hash
        type: string
      - enum:
        - standard_address
        type: string
      - enum:
        - contract_address
        type: string
      - enum:
        - unknown_hash
        type: string
      - enum:
        - invalid_term
        type: string
    search_by_id_404_response_result:
      example:
        entity_type: tx_id
      properties:
        entity_type:
          $ref: '#/components/schemas/search_by_id_404_response_result_entity_type'
      required:
      - entity_type
      type: object
    search_by_id_404_response:
      example:
        result:
          entity_type: tx_id
        found: true
        error: error
      properties:
        found:
          type: boolean
        result:
          $ref: '#/components/schemas/search_by_id_404_response_result'
        error:
          type: string
      required:
      - error
      - found
      - result
      type: object
    _extended_v1__pox__events_get_pox_parameter:
      anyOf:
      - enum:
        - pox2
        type: string
      - enum:
        - pox3
        type: string
      - enum:
        - pox4
        type: string
    get_pool_delegations_200_response_results_inner:
      example:
        stacker: stacker
        pox_addr: pox_addr
        burn_block_unlock_height: 0
        amount_ustx: amount_ustx
        block_height: 6
        tx_id: tx_id
      properties:
        stacker:
          description: The principal of the pool member that issued the delegation
          type: string
        pox_addr:
          description: The pox-addr value specified by the stacker in the delegation
            operation
          type: string
        amount_ustx:
          description: The amount of uSTX delegated by the stacker
          type: string
        burn_block_unlock_height:
          description: The optional burnchain block unlock height that the stacker
            may have specified
          type: integer
        block_height:
          description: The block height at which the stacker delegation transaction
            was mined at
          type: integer
        tx_id:
          description: The tx_id of the stacker delegation operation
          type: string
      required:
      - amount_ustx
      - block_height
      - stacker
      - tx_id
      type: object
    get_pool_delegations_200_response:
      example:
        total: 1
        offset: 0
        limit: 20
        results:
        - stacker: stacker
          pox_addr: pox_addr
          burn_block_unlock_height: 0
          amount_ustx: amount_ustx
          block_height: 6
          tx_id: tx_id
        - stacker: stacker
          pox_addr: pox_addr
          burn_block_unlock_height: 0
          amount_ustx: amount_ustx
          block_height: 6
          tx_id: tx_id
      properties:
        limit:
          example: 20
          type: integer
        offset:
          example: 0
          type: integer
        total:
          example: 1
          type: integer
        results:
          items:
            $ref: '#/components/schemas/get_pool_delegations_200_response_results_inner'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      type: object
    run_faucet_btc_request:
      nullable: true
      properties:
        address:
          description: A valid testnet BTC address
          type: string
      type: object
    RunFaucetResponse:
      description: POST request that initiates a transfer of tokens to a specified
        testnet address
      example:
        success: true
        txid: txid
        raw_tx: raw_tx
      properties:
        success:
          description: Indicates if the faucet call was successful
          type: boolean
        txid:
          description: The transaction ID for the faucet call
          type: string
        raw_tx:
          description: Raw transaction in hex string representation
          type: string
      required:
      - raw_tx
      - success
      - txid
      title: RunFaucetResponse
      type: object
    run_faucet_btc_4XX_response:
      example:
        success: true
        error: error
      properties:
        success:
          type: boolean
        error:
          description: Error message
          type: string
      required:
      - error
      - success
      type: object
    get_btc_balance_200_response:
      example:
        balance: 0.8008281904610115
      properties:
        balance:
          description: Address balance in BTC
          type: number
      required:
      - balance
      type: object
    run_faucet_stx_request:
      nullable: true
      properties:
        address:
          description: "[Deprecated -- use query param rather than POST body] A valid\
            \ testnet STX address"
          type: string
      type: object
    RunFaucetResponse_1:
      description: POST request that initiates a transfer of tokens to a specified
        testnet address
      example:
        success: true
        txId: txId
        txRaw: txRaw
      properties:
        success:
          description: Indicates if the faucet call was successful
          type: boolean
        txId:
          description: The transaction ID for the faucet call
          type: string
        txRaw:
          description: Raw transaction in hex string representation
          type: string
      required:
      - success
      - txId
      - txRaw
      title: RunFaucetResponse
      type: object
    run_faucet_stx_4XX_response:
      example:
        help: help
        success: true
        error: error
      properties:
        success:
          description: Indicates if the faucet call was successful
          type: boolean
        error:
          description: Error message
          type: string
        help:
          type: string
      required:
      - error
      - success
      type: object
    get_blocks_200_response_results_inner:
      example:
        execution_cost_write_count: 2
        burn_block_time_iso: burn_block_time_iso
        burn_block_hash: burn_block_hash
        tx_count: 2
        execution_cost_read_length: 9
        parent_block_hash: parent_block_hash
        canonical: true
        burn_block_height: 5
        parent_index_block_hash: parent_index_block_hash
        block_time: 6
        index_block_hash: index_block_hash
        execution_cost_runtime: 3
        block_time_iso: block_time_iso
        execution_cost_read_count: 7
        tenure_height: 1
        burn_block_time: 5
        miner_txid: miner_txid
        execution_cost_write_length: 4
        hash: hash
        height: 0
      properties:
        canonical:
          description: Set to `true` if block corresponds to the canonical chain tip
          type: boolean
        height:
          description: Height of the block
          type: integer
        hash:
          description: Hash representing the block
          type: string
        block_time:
          description: Unix timestamp (in seconds) indicating when this block was
            mined.
          type: integer
        block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) indicating when this
            block was mined.
          type: string
        tenure_height:
          description: The tenure height (AKA coinbase height) of this block
          type: integer
        index_block_hash:
          description: The only hash that can uniquely identify an anchored block
            or an unconfirmed state trie
          type: string
        parent_block_hash:
          description: Hash of the parent block
          type: string
        parent_index_block_hash:
          description: Index block hash of the parent block
          type: string
        burn_block_time:
          description: Unix timestamp (in seconds) indicating when this block was
            mined.
          type: integer
        burn_block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) indicating when this
            block was mined.
          type: string
        burn_block_hash:
          description: Hash of the anchor chain block
          type: string
        burn_block_height:
          description: Height of the anchor chain block
          type: integer
        miner_txid:
          description: Anchor chain transaction ID
          type: string
        tx_count:
          description: Number of transactions included in the block
          type: integer
        execution_cost_read_count:
          description: Execution cost read count.
          type: integer
        execution_cost_read_length:
          description: Execution cost read length.
          type: integer
        execution_cost_runtime:
          description: Execution cost runtime.
          type: integer
        execution_cost_write_count:
          description: Execution cost write count.
          type: integer
        execution_cost_write_length:
          description: Execution cost write length.
          type: integer
      required:
      - block_time
      - block_time_iso
      - burn_block_hash
      - burn_block_height
      - burn_block_time
      - burn_block_time_iso
      - canonical
      - execution_cost_read_count
      - execution_cost_read_length
      - execution_cost_runtime
      - execution_cost_write_count
      - execution_cost_write_length
      - hash
      - height
      - index_block_hash
      - miner_txid
      - parent_block_hash
      - parent_index_block_hash
      - tenure_height
      - tx_count
      type: object
    get_blocks_200_response:
      example:
        cursor: cursor
        prev_cursor: prev_cursor
        total: 1
        next_cursor: next_cursor
        offset: 0
        limit: 20
        results:
        - execution_cost_write_count: 2
          burn_block_time_iso: burn_block_time_iso
          burn_block_hash: burn_block_hash
          tx_count: 2
          execution_cost_read_length: 9
          parent_block_hash: parent_block_hash
          canonical: true
          burn_block_height: 5
          parent_index_block_hash: parent_index_block_hash
          block_time: 6
          index_block_hash: index_block_hash
          execution_cost_runtime: 3
          block_time_iso: block_time_iso
          execution_cost_read_count: 7
          tenure_height: 1
          burn_block_time: 5
          miner_txid: miner_txid
          execution_cost_write_length: 4
          hash: hash
          height: 0
        - execution_cost_write_count: 2
          burn_block_time_iso: burn_block_time_iso
          burn_block_hash: burn_block_hash
          tx_count: 2
          execution_cost_read_length: 9
          parent_block_hash: parent_block_hash
          canonical: true
          burn_block_height: 5
          parent_index_block_hash: parent_index_block_hash
          block_time: 6
          index_block_hash: index_block_hash
          execution_cost_runtime: 3
          block_time_iso: block_time_iso
          execution_cost_read_count: 7
          tenure_height: 1
          burn_block_time: 5
          miner_txid: miner_txid
          execution_cost_write_length: 4
          hash: hash
          height: 0
      properties:
        limit:
          example: 20
          type: integer
        offset:
          example: 0
          type: integer
        total:
          example: 1
          type: integer
        next_cursor:
          description: Next page cursor
          nullable: true
          type: string
        prev_cursor:
          description: Previous page cursor
          nullable: true
          type: string
        cursor:
          description: Current page cursor
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/get_blocks_200_response_results_inner'
          type: array
      required:
      - cursor
      - limit
      - next_cursor
      - offset
      - prev_cursor
      - results
      - total
      type: object
    get_average_block_times_200_response:
      example:
        last_1h: 0.8008281904610115
        last_7d: 1.4658129805029452
        last_30d: 5.962133916683182
        last_24h: 6.027456183070403
      properties:
        last_1h:
          description: Average block times over the last hour (in seconds)
          type: number
        last_24h:
          description: Average block times over the last 24 hours (in seconds)
          type: number
        last_7d:
          description: Average block times over the last 7 days (in seconds)
          type: number
        last_30d:
          description: Average block times over the last 30 days (in seconds)
          type: number
      required:
      - last_1h
      - last_24h
      - last_30d
      - last_7d
      type: object
    get_block_height_or_hash_parameter:
      anyOf:
      - enum:
        - latest
        type: string
      - description: Block hash
        pattern: "^(0x)?[a-fA-F0-9]{64}$"
        title: Block hash
        type: string
      - description: Block height
        title: Block height
        type: integer
    get_transactions_by_block_200_response:
      example:
        total: 1
        offset: 0
        limit: 20
        results:
        - tx_status: success
          execution_cost_write_count: 1
          execution_cost_read_length: 7
          event_count: 3
          block_height: 1
          block_time: 5.962133916683182
          post_conditions:
          - principal:
              type_id: principal_origin
            amount: amount
            type: stx
            condition_code: sent_equal_to
          - principal:
              type_id: principal_origin
            amount: amount
            type: stx
            condition_code: sent_equal_to
          post_condition_mode: allow
          sponsor_nonce: 6
          execution_cost_write_length: 1
          anchor_mode: on_chain_only
          tx_index: 9
          is_unanchored: true
          microblock_canonical: true
          tx_type: token_transfer
          events:
          - event_type: smart_contract_log
            contract_log:
              contract_id: contract_id
              topic: topic
              value:
                repr: repr
                hex: hex
            tx_id: tx_id
            event_index: 6
          - event_type: smart_contract_log
            contract_log:
              contract_id: contract_id
              topic: topic
              value:
                repr: repr
                hex: hex
            tx_id: tx_id
            event_index: 6
          microblock_sequence: 2
          burn_block_time_iso: burn_block_time_iso
          token_transfer:
            amount: amount
            memo: memo
            recipient_address: recipient_address
          block_hash: block_hash
          sponsored: true
          parent_block_hash: parent_block_hash
          canonical: true
          tx_id: tx_id
          nonce: 0
          burn_block_height: 2
          parent_burn_block_time_iso: parent_burn_block_time_iso
          fee_rate: fee_rate
          sender_address: sender_address
          execution_cost_runtime: 1
          block_time_iso: block_time_iso
          tx_result:
            repr: repr
            hex: hex
          execution_cost_read_count: 4
          burn_block_time: 5
          parent_burn_block_time: 7
          microblock_hash: microblock_hash
          sponsor_address: sponsor_address
        - tx_status: success
          execution_cost_write_count: 1
          execution_cost_read_length: 7
          event_count: 3
          block_height: 1
          block_time: 5.962133916683182
          post_conditions:
          - principal:
              type_id: principal_origin
            amount: amount
            type: stx
            condition_code: sent_equal_to
          - principal:
              type_id: principal_origin
            amount: amount
            type: stx
            condition_code: sent_equal_to
          post_condition_mode: allow
          sponsor_nonce: 6
          execution_cost_write_length: 1
          anchor_mode: on_chain_only
          tx_index: 9
          is_unanchored: true
          microblock_canonical: true
          tx_type: token_transfer
          events:
          - event_type: smart_contract_log
            contract_log:
              contract_id: contract_id
              topic: topic
              value:
                repr: repr
                hex: hex
            tx_id: tx_id
            event_index: 6
          - event_type: smart_contract_log
            contract_log:
              contract_id: contract_id
              topic: topic
              value:
                repr: repr
                hex: hex
            tx_id: tx_id
            event_index: 6
          microblock_sequence: 2
          burn_block_time_iso: burn_block_time_iso
          token_transfer:
            amount: amount
            memo: memo
            recipient_address: recipient_address
          block_hash: block_hash
          sponsored: true
          parent_block_hash: parent_block_hash
          canonical: true
          tx_id: tx_id
          nonce: 0
          burn_block_height: 2
          parent_burn_block_time_iso: parent_burn_block_time_iso
          fee_rate: fee_rate
          sender_address: sender_address
          execution_cost_runtime: 1
          block_time_iso: block_time_iso
          tx_result:
            repr: repr
            hex: hex
          execution_cost_read_count: 4
          burn_block_time: 5
          parent_burn_block_time: 7
          microblock_hash: microblock_hash
          sponsor_address: sponsor_address
      properties:
        limit:
          example: 20
          type: integer
        offset:
          example: 0
          type: integer
        total:
          example: 1
          type: integer
        results:
          items:
            $ref: '#/components/schemas/get_transaction_list_200_response_results_inner'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      type: object
    get_signer_signatures_for_block_200_response:
      example:
        total: 1
        offset: 0
        limit: 20
        results:
        - results
        - results
      properties:
        limit:
          example: 20
          type: integer
        offset:
          example: 0
          type: integer
        total:
          example: 1
          type: integer
        results:
          items:
            description: Array of hex strings representing the block's signer signature
            type: string
          type: array
      required:
      - limit
      - offset
      - results
      - total
      type: object
    get_burn_blocks_200_response_results_inner:
      example:
        burn_block_time_iso: burn_block_time_iso
        burn_block_hash: burn_block_hash
        stacks_blocks:
        - stacks_blocks
        - stacks_blocks
        total_tx_count: 5
        burn_block_time: 0
        avg_block_time: 1
        burn_block_height: 6
      properties:
        burn_block_time:
          description: Unix timestamp (in seconds) indicating when this block was
            mined.
          type: integer
        burn_block_time_iso:
          description: An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) indicating when this
            block was mined.
          type: string
        burn_block_hash:
          description: Hash of the anchor chain block
          type: string
        burn_block_height:
          description: Height of the anchor chain block
          type: integer
        stacks_blocks:
          description: Hashes of the Stacks blocks included in the burn block
          items:
            type: string
          type: array
        avg_block_time:
          description: Average time between blocks in seconds. Returns 0 if there
            is only one block in the burn block.
          type: integer
        total_tx_count:
          description: Total number of transactions in the Stacks blocks associated
            with this burn block
          type: integer
      required:
      - avg_block_time
      - burn_block_hash
      - burn_block_height
      - burn_block_time
      - burn_block_time_iso
      - stacks_blocks
      - total_tx_count
      type: object
    get_burn_blocks_200_response:
      example:
        total: 1
        offset: 0
        limit: 20
        results:
        - burn_block_time_iso: burn_block_time_iso
          burn_block_hash: burn_block_hash
          stacks_blocks:
          - stacks_blocks
          - stacks_blocks
          total_tx_count: 5
          burn_block_time: 0
          avg_block_time: 1
          burn_block_height: 6
        - burn_block_time_iso: burn_block_time_iso
          burn_block_hash: burn_block_hash
          stacks_blocks:
          - stacks_blocks
          - stacks_blocks
          total_tx_count: 5
          burn_block_time: 0
          avg_block_time: 1
          burn_block_height: 6
      properties:
        limit:
          example: 20
          type: integer
        offset:
          example: 0
          type: integer
        total:
          example: 1
          type: integer
        results:
          items:
            $ref: '#/components/schemas/get_burn_blocks_200_response_results_inner'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      type: object
    get_burn_block_height_or_hash_parameter:
      anyOf:
      - enum:
        - latest
        type: string
      - description: Burn block hash
        pattern: "^(0x)?[a-fA-F0-9]{64}$"
        title: Burn block hash
        type: string
      - description: Burn block height
        title: Burn block height
        type: integer
    get_blocks_by_burn_block_200_response:
      example:
        total: 1
        offset: 0
        limit: 20
        results:
        - execution_cost_write_count: 2
          burn_block_time_iso: burn_block_time_iso
          burn_block_hash: burn_block_hash
          tx_count: 2
          execution_cost_read_length: 9
          parent_block_hash: parent_block_hash
          canonical: true
          burn_block_height: 5
          parent_index_block_hash: parent_index_block_hash
          block_time: 6
          index_block_hash: index_block_hash
          execution_cost_runtime: 3
          block_time_iso: block_time_iso
          execution_cost_read_count: 7
          tenure_height: 1
          burn_block_time: 5
          miner_txid: miner_txid
          execution_cost_write_length: 4
          hash: hash
          height: 0
        - execution_cost_write_count: 2
          burn_block_time_iso: burn_block_time_iso
          burn_block_hash: burn_block_hash
          tx_count: 2
          execution_cost_read_length: 9
          parent_block_hash: parent_block_hash
          canonical: true
          burn_block_height: 5
          parent_index_block_hash: parent_index_block_hash
          block_time: 6
          index_block_hash: index_block_hash
          execution_cost_runtime: 3
          block_time_iso: block_time_iso
          execution_cost_read_count: 7
          tenure_height: 1
          burn_block_time: 5
          miner_txid: miner_txid
          execution_cost_write_length: 4
          hash: hash
          height: 0
      properties:
        limit:
          example: 20
          type: integer
        offset:
          example: 0
          type: integer
        total:
          example: 1
          type: integer
        results:
          items:
            $ref: '#/components/schemas/get_blocks_200_response_results_inner'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      type: object
    get_smart_contracts_status_contract_id_parameter:
      anyOf:
      - items:
          description: Smart Contract ID
          pattern: "^[0123456789ABCDEFGHJKMNPQRSTVWXYZ]{28,41}.[a-zA-Z]([a-zA-Z0-9]|[-_]){0,39}$"
          title: Smart Contract ID
          type: string
        type: array
      - description: Smart Contract ID
        pattern: "^[0123456789ABCDEFGHJKMNPQRSTVWXYZ]{28,41}.[a-zA-Z]([a-zA-Z0-9]|[-_]){0,39}$"
        title: Smart Contract ID
        type: string
    get_smart_contracts_status_200_response_value_anyOf_result:
      properties:
        status:
          description: Smart contract deployment transaction status
          type: string
        tx_id:
          description: Deployment transaction ID
          type: string
        contract_id:
          description: Smart contract ID
          type: string
        block_height:
          description: Height of the transaction confirmation block
          type: integer
      required:
      - contract_id
      - status
      - tx_id
      type: object
    get_smart_contracts_status_200_response_value_anyOf:
      properties:
        found:
          type: boolean
        result:
          $ref: '#/components/schemas/get_smart_contracts_status_200_response_value_anyOf_result'
      required:
      - found
      - result
      type: object
    get_smart_contracts_status_200_response_value_anyOf_1:
      properties:
        found:
          type: boolean
      required:
      - found
      type: object
    get_smart_contracts_status_200_response_value:
      anyOf:
      - $ref: '#/components/schemas/get_smart_contracts_status_200_response_value_anyOf'
      - $ref: '#/components/schemas/get_smart_contracts_status_200_response_value_anyOf_1'
    get_mempool_fee_priorities_200_response_all:
      example:
        low_priority: 6
        no_priority: 0
        medium_priority: 1
        high_priority: 5
      properties:
        no_priority:
          type: integer
        low_priority:
          type: integer
        medium_priority:
          type: integer
        high_priority:
          type: integer
      required:
      - high_priority
      - low_priority
      - medium_priority
      - no_priority
      type: object
    get_mempool_fee_priorities_200_response:
      example:
        all:
          low_priority: 6
          no_priority: 0
          medium_priority: 1
          high_priority: 5
        contract_call:
          low_priority: 6
          no_priority: 0
          medium_priority: 1
          high_priority: 5
        token_transfer:
          low_priority: 6
          no_priority: 0
          medium_priority: 1
          high_priority: 5
        smart_contract:
          low_priority: 6
          no_priority: 0
          medium_priority: 1
          high_priority: 5
      properties:
        all:
          $ref: '#/components/schemas/get_mempool_fee_priorities_200_response_all'
        token_transfer:
          $ref: '#/components/schemas/get_mempool_fee_priorities_200_response_all'
        contract_call:
          $ref: '#/components/schemas/get_mempool_fee_priorities_200_response_all'
        smart_contract:
          $ref: '#/components/schemas/get_mempool_fee_priorities_200_response_all'
      required:
      - all
      type: object
    get_pox_cycles_200_response_results_inner:
      example:
        index_block_hash: index_block_hash
        cycle_number: 6
        block_height: 0
        total_stacked_amount: total_stacked_amount
        total_weight: 1
        total_signers: 5
      properties:
        block_height:
          type: integer
        index_block_hash:
          type: string
        cycle_number:
          type: integer
        total_weight:
          type: integer
        total_stacked_amount:
          type: string
        total_signers:
          type: integer
      required:
      - block_height
      - cycle_number
      - index_block_hash
      - total_signers
      - total_stacked_amount
      - total_weight
      type: object
    get_pox_cycles_200_response:
      example:
        total: 1
        offset: 0
        limit: 20
        results:
        - index_block_hash: index_block_hash
          cycle_number: 6
          block_height: 0
          total_stacked_amount: total_stacked_amount
          total_weight: 1
          total_signers: 5
        - index_block_hash: index_block_hash
          cycle_number: 6
          block_height: 0
          total_stacked_amount: total_stacked_amount
          total_weight: 1
          total_signers: 5
      properties:
        limit:
          example: 20
          type: integer
        offset:
          example: 0
          type: integer
        total:
          example: 1
          type: integer
        results:
          items:
            $ref: '#/components/schemas/get_pox_cycles_200_response_results_inner'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      type: object
    get_pox_cycle_signers_200_response_results_inner:
      example:
        stacked_amount: stacked_amount
        stacked_amount_percent: 1.4658129805029452
        signing_key: signing_key
        weight_percent: 6.027456183070403
        signer_address: signer_address
        weight: 0
        solo_stacker_count: 5
        pooled_stacker_count: 5
      properties:
        signing_key:
          type: string
        signer_address:
          description: The Stacks address derived from the signing_key.
          type: string
        weight:
          type: integer
        stacked_amount:
          type: string
        weight_percent:
          type: number
        stacked_amount_percent:
          type: number
        solo_stacker_count:
          description: The number of solo stackers associated with this signer.
          type: integer
        pooled_stacker_count:
          description: The number of pooled stackers associated with this signer.
          type: integer
      required:
      - pooled_stacker_count
      - signer_address
      - signing_key
      - solo_stacker_count
      - stacked_amount
      - stacked_amount_percent
      - weight
      - weight_percent
      type: object
    get_pox_cycle_signers_200_response:
      example:
        total: 1
        offset: 0
        limit: 20
        results:
        - stacked_amount: stacked_amount
          stacked_amount_percent: 1.4658129805029452
          signing_key: signing_key
          weight_percent: 6.027456183070403
          signer_address: signer_address
          weight: 0
          solo_stacker_count: 5
          pooled_stacker_count: 5
        - stacked_amount: stacked_amount
          stacked_amount_percent: 1.4658129805029452
          signing_key: signing_key
          weight_percent: 6.027456183070403
          signer_address: signer_address
          weight: 0
          solo_stacker_count: 5
          pooled_stacker_count: 5
      properties:
        limit:
          example: 20
          type: integer
        offset:
          example: 0
          type: integer
        total:
          example: 1
          type: integer
        results:
          items:
            $ref: '#/components/schemas/get_pox_cycle_signers_200_response_results_inner'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      type: object
    get_pox_cycle_signer_stackers_200_response_results_inner_stacker_type:
      anyOf:
      - enum:
        - solo
        type: string
      - enum:
        - pooled
        type: string
    get_pox_cycle_signer_stackers_200_response_results_inner:
      example:
        stacker_type: solo
        stacker_address: stacker_address
        stacked_amount: stacked_amount
        pox_address: pox_address
      properties:
        stacker_address:
          type: string
        stacked_amount:
          type: string
        pox_address:
          type: string
        stacker_type:
          $ref: '#/components/schemas/get_pox_cycle_signer_stackers_200_response_results_inner_stacker_type'
      required:
      - pox_address
      - stacked_amount
      - stacker_address
      - stacker_type
      type: object
    get_pox_cycle_signer_stackers_200_response:
      example:
        total: 1
        offset: 0
        limit: 20
        results:
        - stacker_type: solo
          stacker_address: stacker_address
          stacked_amount: stacked_amount
          pox_address: pox_address
        - stacker_type: solo
          stacker_address: stacker_address
          stacked_amount: stacked_amount
          pox_address: pox_address
      properties:
        limit:
          example: 20
          type: integer
        offset:
          example: 0
          type: integer
        total:
          example: 1
          type: integer
        results:
          items:
            $ref: '#/components/schemas/get_pox_cycle_signer_stackers_200_response_results_inner'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      type: object
    AddressTransaction_events_stx:
      example:
        mint: 6
        burn: 1
        transfer: 0
      properties:
        transfer:
          type: integer
        mint:
          type: integer
        burn:
          type: integer
      required:
      - burn
      - mint
      - transfer
      type: object
    AddressTransaction_events:
      example:
        stx:
          mint: 6
          burn: 1
          transfer: 0
        nft:
          mint: 6
          burn: 1
          transfer: 0
        ft:
          mint: 6
          burn: 1
          transfer: 0
      properties:
        stx:
          $ref: '#/components/schemas/AddressTransaction_events_stx'
        ft:
          $ref: '#/components/schemas/AddressTransaction_events_stx'
        nft:
          $ref: '#/components/schemas/AddressTransaction_events_stx'
      required:
      - ft
      - nft
      - stx
      type: object
    AddressTransaction:
      description: "Address transaction with STX, FT and NFT transfer summaries"
      example:
        stx_sent: stx_sent
        tx:
          tx_status: success
          execution_cost_write_count: 1
          execution_cost_read_length: 7
          event_count: 3
          block_height: 1
          block_time: 5.962133916683182
          post_conditions:
          - principal:
              type_id: principal_origin
            amount: amount
            type: stx
            condition_code: sent_equal_to
          - principal:
              type_id: principal_origin
            amount: amount
            type: stx
            condition_code: sent_equal_to
          post_condition_mode: allow
          sponsor_nonce: 6
          execution_cost_write_length: 1
          anchor_mode: on_chain_only
          tx_index: 9
          is_unanchored: true
          microblock_canonical: true
          tx_type: token_transfer
          events:
          - event_type: smart_contract_log
            contract_log:
              contract_id: contract_id
              topic: topic
              value:
                repr: repr
                hex: hex
            tx_id: tx_id
            event_index: 6
          - event_type: smart_contract_log
            contract_log:
              contract_id: contract_id
              topic: topic
              value:
                repr: repr
                hex: hex
            tx_id: tx_id
            event_index: 6
          microblock_sequence: 2
          burn_block_time_iso: burn_block_time_iso
          token_transfer:
            amount: amount
            memo: memo
            recipient_address: recipient_address
          block_hash: block_hash
          sponsored: true
          parent_block_hash: parent_block_hash
          canonical: true
          tx_id: tx_id
          nonce: 0
          burn_block_height: 2
          parent_burn_block_time_iso: parent_burn_block_time_iso
          fee_rate: fee_rate
          sender_address: sender_address
          execution_cost_runtime: 1
          block_time_iso: block_time_iso
          tx_result:
            repr: repr
            hex: hex
          execution_cost_read_count: 4
          burn_block_time: 5
          parent_burn_block_time: 7
          microblock_hash: microblock_hash
          sponsor_address: sponsor_address
        stx_received: stx_received
        events:
          stx:
            mint: 6
            burn: 1
            transfer: 0
          nft:
            mint: 6
            burn: 1
            transfer: 0
          ft:
            mint: 6
            burn: 1
            transfer: 0
      properties:
        tx:
          $ref: '#/components/schemas/get_transaction_list_200_response_results_inner'
        stx_sent:
          description: "Total sent from the given address, including the tx fee, in\
            \ micro-STX as an integer string."
          type: string
        stx_received:
          description: Total received by the given address in micro-STX as an integer
            string.
          type: string
        events:
          $ref: '#/components/schemas/AddressTransaction_events'
      required:
      - events
      - stx_received
      - stx_sent
      - tx
      title: AddressTransaction
      type: object
    get_address_transactions_200_response:
      example:
        total: 1
        offset: 0
        limit: 20
        results:
        - stx_sent: stx_sent
          tx:
            tx_status: success
            execution_cost_write_count: 1
            execution_cost_read_length: 7
            event_count: 3
            block_height: 1
            block_time: 5.962133916683182
            post_conditions:
            - principal:
                type_id: principal_origin
              amount: amount
              type: stx
              condition_code: sent_equal_to
            - principal:
                type_id: principal_origin
              amount: amount
              type: stx
              condition_code: sent_equal_to
            post_condition_mode: allow
            sponsor_nonce: 6
            execution_cost_write_length: 1
            anchor_mode: on_chain_only
            tx_index: 9
            is_unanchored: true
            microblock_canonical: true
            tx_type: token_transfer
            events:
            - event_type: smart_contract_log
              contract_log:
                contract_id: contract_id
                topic: topic
                value:
                  repr: repr
                  hex: hex
              tx_id: tx_id
              event_index: 6
            - event_type: smart_contract_log
              contract_log:
                contract_id: contract_id
                topic: topic
                value:
                  repr: repr
                  hex: hex
              tx_id: tx_id
              event_index: 6
            microblock_sequence: 2
            burn_block_time_iso: burn_block_time_iso
            token_transfer:
              amount: amount
              memo: memo
              recipient_address: recipient_address
            block_hash: block_hash
            sponsored: true
            parent_block_hash: parent_block_hash
            canonical: true
            tx_id: tx_id
            nonce: 0
            burn_block_height: 2
            parent_burn_block_time_iso: parent_burn_block_time_iso
            fee_rate: fee_rate
            sender_address: sender_address
            execution_cost_runtime: 1
            block_time_iso: block_time_iso
            tx_result:
              repr: repr
              hex: hex
            execution_cost_read_count: 4
            burn_block_time: 5
            parent_burn_block_time: 7
            microblock_hash: microblock_hash
            sponsor_address: sponsor_address
          stx_received: stx_received
          events:
            stx:
              mint: 6
              burn: 1
              transfer: 0
            nft:
              mint: 6
              burn: 1
              transfer: 0
            ft:
              mint: 6
              burn: 1
              transfer: 0
        - stx_sent: stx_sent
          tx:
            tx_status: success
            execution_cost_write_count: 1
            execution_cost_read_length: 7
            event_count: 3
            block_height: 1
            block_time: 5.962133916683182
            post_conditions:
            - principal:
                type_id: principal_origin
              amount: amount
              type: stx
              condition_code: sent_equal_to
            - principal:
                type_id: principal_origin
              amount: amount
              type: stx
              condition_code: sent_equal_to
            post_condition_mode: allow
            sponsor_nonce: 6
            execution_cost_write_length: 1
            anchor_mode: on_chain_only
            tx_index: 9
            is_unanchored: true
            microblock_canonical: true
            tx_type: token_transfer
            events:
            - event_type: smart_contract_log
              contract_log:
                contract_id: contract_id
                topic: topic
                value:
                  repr: repr
                  hex: hex
              tx_id: tx_id
              event_index: 6
            - event_type: smart_contract_log
              contract_log:
                contract_id: contract_id
                topic: topic
                value:
                  repr: repr
                  hex: hex
              tx_id: tx_id
              event_index: 6
            microblock_sequence: 2
            burn_block_time_iso: burn_block_time_iso
            token_transfer:
              amount: amount
              memo: memo
              recipient_address: recipient_address
            block_hash: block_hash
            sponsored: true
            parent_block_hash: parent_block_hash
            canonical: true
            tx_id: tx_id
            nonce: 0
            burn_block_height: 2
            parent_burn_block_time_iso: parent_burn_block_time_iso
            fee_rate: fee_rate
            sender_address: sender_address
            execution_cost_runtime: 1
            block_time_iso: block_time_iso
            tx_result:
              repr: repr
              hex: hex
            execution_cost_read_count: 4
            burn_block_time: 5
            parent_burn_block_time: 7
            microblock_hash: microblock_hash
            sponsor_address: sponsor_address
          stx_received: stx_received
          events:
            stx:
              mint: 6
              burn: 1
              transfer: 0
            nft:
              mint: 6
              burn: 1
              transfer: 0
            ft:
              mint: 6
              burn: 1
              transfer: 0
      properties:
        limit:
          example: 20
          type: integer
        offset:
          example: 0
          type: integer
        total:
          example: 1
          type: integer
        results:
          items:
            $ref: '#/components/schemas/AddressTransaction'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      type: object
    AddressTransactionEvent_anyOf_data:
      example:
        amount: amount
        sender: sender
        recipient: recipient
        type: transfer
      properties:
        type:
          $ref: '#/components/schemas/StxAssetTransactionEvent_allOf_asset_asset_event_type'
        amount:
          description: Amount transferred in micro-STX as an integer string.
          type: string
        sender:
          description: Principal that sent STX. This is unspecified if the STX were
            minted.
          type: string
        recipient:
          description: Principal that received STX. This is unspecified if the STX
            were burned.
          type: string
      required:
      - amount
      - type
      type: object
    AddressTransactionEvent_anyOf:
      example:
        data:
          amount: amount
          sender: sender
          recipient: recipient
          type: transfer
        type: stx
        event_index: 0
      properties:
        type:
          enum:
          - stx
          type: string
        event_index:
          type: integer
        data:
          $ref: '#/components/schemas/AddressTransactionEvent_anyOf_data'
      required:
      - data
      - event_index
      - type
      type: object
    AddressTransactionEvent_anyOf_1_data:
      properties:
        type:
          $ref: '#/components/schemas/StxAssetTransactionEvent_allOf_asset_asset_event_type'
        amount:
          description: Amount transferred as an integer string. This balance does
            not factor in possible SIP-010 decimals.
          type: string
        asset_identifier:
          description: Fungible Token asset identifier.
          type: string
        sender:
          description: Principal that sent the asset.
          type: string
        recipient:
          description: Principal that received the asset.
          type: string
      required:
      - amount
      - asset_identifier
      - type
      type: object
    AddressTransactionEvent_anyOf_1:
      properties:
        type:
          enum:
          - ft
          type: string
        event_index:
          type: integer
        data:
          $ref: '#/components/schemas/AddressTransactionEvent_anyOf_1_data'
      required:
      - data
      - event_index
      - type
      type: object
    AddressTransactionEvent_anyOf_2_data:
      properties:
        type:
          $ref: '#/components/schemas/StxAssetTransactionEvent_allOf_asset_asset_event_type'
        asset_identifier:
          description: Non Fungible Token asset identifier.
          type: string
        value:
          $ref: '#/components/schemas/TokenTransferTransaction_post_conditions_inner_anyOf_2_asset_value'
        sender:
          description: Principal that sent the asset.
          type: string
        recipient:
          description: Principal that received the asset.
          type: string
      required:
      - asset_identifier
      - type
      - value
      type: object
    AddressTransactionEvent_anyOf_2:
      properties:
        type:
          enum:
          - nft
          type: string
        event_index:
          type: integer
        data:
          $ref: '#/components/schemas/AddressTransactionEvent_anyOf_2_data'
      required:
      - data
      - event_index
      - type
      type: object
    AddressTransactionEvent:
      anyOf:
      - $ref: '#/components/schemas/AddressTransactionEvent_anyOf'
      - $ref: '#/components/schemas/AddressTransactionEvent_anyOf_1'
      - $ref: '#/components/schemas/AddressTransactionEvent_anyOf_2'
      description: Address Transaction Event
      title: AddressTransactionEvent
    get_address_transaction_events_200_response:
      example:
        total: 1
        offset: 0
        limit: 20
        results:
        - data:
            amount: amount
            sender: sender
            recipient: recipient
            type: transfer
          type: stx
          event_index: 0
        - data:
            amount: amount
            sender: sender
            recipient: recipient
            type: transfer
          type: stx
          event_index: 0
      properties:
        limit:
          example: 20
          type: integer
        offset:
          example: 0
          type: integer
        total:
          example: 1
          type: integer
        results:
          items:
            $ref: '#/components/schemas/AddressTransactionEvent'
          type: array
      required:
      - limit
      - offset
      - results
      - total
      type: object
    BnsFetchHistoricalZoneFileResponse:
      description: Fetches the historical zonefile specified by the username and zone
        hash.
      example:
        zonefile: zonefile
      properties:
        zonefile:
          type: string
      required:
      - zonefile
      title: BnsFetchHistoricalZoneFileResponse
      type: object
    BnsError:
      description: Error
      example:
        error: error
      properties:
        error:
          type: string
      required:
      - error
      title: BnsError
      type: object
    BnsFetchFileZoneResponse:
      description: Fetch a user's raw zone file. This only works for RFC-compliant
        zone files. This method returns an error for names that have non-standard
        zone files.
      example:
        zonefile: |
          $ORIGIN bar.test
          $TTL 3600
          _https._tcp URI 10 1 "https://gaia.blockstack.org/hub/17Zijx61Sp7SbVfRTdETo7PhizJHYEUxbY/profile.json"
      properties:
        zonefile:
          example: |
            $ORIGIN bar.test
            $TTL 3600
            _https._tcp URI 10 1 "https://gaia.blockstack.org/hub/17Zijx61Sp7SbVfRTdETo7PhizJHYEUxbY/profile.json"
          type: string
      required:
      - zonefile
      title: BnsFetchFileZoneResponse
      type: object
    BnsError_1:
      description: Error
      example:
        error: Invalid name or subdomain
      properties:
        error:
          example: Invalid name or subdomain
          type: string
      required:
      - error
      title: BnsError
      type: object
    BnsGetNameInfoResponse:
      description: Get name details
      example:
        expire_block: 0
        resolver: resolver
        address: address
        blockchain: stacks
        last_txid: last_txid
        grace_period: 0
        zonefile_hash: zonefile_hash
        status: status
        zonefile: zonefile
      properties:
        address:
          type: string
        blockchain:
          example: stacks
          type: string
        expire_block:
          minimum: 0
          type: integer
        grace_period:
          minimum: 0
          type: integer
        last_txid:
          type: string
        resolver:
          type: string
        status:
          type: string
        zonefile:
          type: string
        zonefile_hash:
          type: string
      required:
      - address
      - blockchain
      - last_txid
      - status
      - zonefile_hash
      title: BnsGetNameInfoResponse
      type: object
    get_all_namespaces_200_response:
      example:
        namespaces:
        - namespaces
        - namespaces
      properties:
        namespaces:
          description: Fetch a list of all namespaces known to the node.
          items:
            type: string
          title: BnsGetAllNamespacesResponse
          type: array
      required:
      - namespaces
      type: object
    BnsNamesOwnByAddressResponse:
      description: Retrieves a list of names owned by the address provided.
      example:
        names:
        - muneeb.id
        - muneeb.id
      properties:
        names:
          items:
            example: muneeb.id
            type: string
          type: array
      required:
      - names
      title: BnsNamesOwnByAddressResponse
      type: object
    BnsGetNamespacePriceResponse:
      description: Fetch price for namespace.
      example:
        amount: amount
        units: units
      properties:
        units:
          type: string
        amount:
          type: string
      required:
      - amount
      - units
      title: BnsGetNamespacePriceResponse
      type: object
    BnsGetNamePriceResponse:
      description: Fetch price for name.
      example:
        amount: amount
        units: units
      properties:
        units:
          type: string
        amount:
          type: string
      required:
      - amount
      - units
      title: BnsGetNamePriceResponse
      type: object
