/*
Stacks Blockchain API

Welcome to the API reference overview for the [Stacks Blockchain API](https://docs.hiro.so/stacks-blockchain-api).        [Download Postman collection](https://hirosystems.github.io/stacks-blockchain-api/collection.json)

API version: v8.1.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package stacks_blockchain_api_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetMempoolFeePriorities200ResponseAll type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetMempoolFeePriorities200ResponseAll{}

// GetMempoolFeePriorities200ResponseAll struct for GetMempoolFeePriorities200ResponseAll
type GetMempoolFeePriorities200ResponseAll struct {
	NoPriority int32 `json:"no_priority"`
	LowPriority int32 `json:"low_priority"`
	MediumPriority int32 `json:"medium_priority"`
	HighPriority int32 `json:"high_priority"`
}

type _GetMempoolFeePriorities200ResponseAll GetMempoolFeePriorities200ResponseAll

// NewGetMempoolFeePriorities200ResponseAll instantiates a new GetMempoolFeePriorities200ResponseAll object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMempoolFeePriorities200ResponseAll(noPriority int32, lowPriority int32, mediumPriority int32, highPriority int32) *GetMempoolFeePriorities200ResponseAll {
	this := GetMempoolFeePriorities200ResponseAll{}
	this.NoPriority = noPriority
	this.LowPriority = lowPriority
	this.MediumPriority = mediumPriority
	this.HighPriority = highPriority
	return &this
}

// NewGetMempoolFeePriorities200ResponseAllWithDefaults instantiates a new GetMempoolFeePriorities200ResponseAll object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMempoolFeePriorities200ResponseAllWithDefaults() *GetMempoolFeePriorities200ResponseAll {
	this := GetMempoolFeePriorities200ResponseAll{}
	return &this
}

// GetNoPriority returns the NoPriority field value
func (o *GetMempoolFeePriorities200ResponseAll) GetNoPriority() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NoPriority
}

// GetNoPriorityOk returns a tuple with the NoPriority field value
// and a boolean to check if the value has been set.
func (o *GetMempoolFeePriorities200ResponseAll) GetNoPriorityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NoPriority, true
}

// SetNoPriority sets field value
func (o *GetMempoolFeePriorities200ResponseAll) SetNoPriority(v int32) {
	o.NoPriority = v
}

// GetLowPriority returns the LowPriority field value
func (o *GetMempoolFeePriorities200ResponseAll) GetLowPriority() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LowPriority
}

// GetLowPriorityOk returns a tuple with the LowPriority field value
// and a boolean to check if the value has been set.
func (o *GetMempoolFeePriorities200ResponseAll) GetLowPriorityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LowPriority, true
}

// SetLowPriority sets field value
func (o *GetMempoolFeePriorities200ResponseAll) SetLowPriority(v int32) {
	o.LowPriority = v
}

// GetMediumPriority returns the MediumPriority field value
func (o *GetMempoolFeePriorities200ResponseAll) GetMediumPriority() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MediumPriority
}

// GetMediumPriorityOk returns a tuple with the MediumPriority field value
// and a boolean to check if the value has been set.
func (o *GetMempoolFeePriorities200ResponseAll) GetMediumPriorityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MediumPriority, true
}

// SetMediumPriority sets field value
func (o *GetMempoolFeePriorities200ResponseAll) SetMediumPriority(v int32) {
	o.MediumPriority = v
}

// GetHighPriority returns the HighPriority field value
func (o *GetMempoolFeePriorities200ResponseAll) GetHighPriority() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.HighPriority
}

// GetHighPriorityOk returns a tuple with the HighPriority field value
// and a boolean to check if the value has been set.
func (o *GetMempoolFeePriorities200ResponseAll) GetHighPriorityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HighPriority, true
}

// SetHighPriority sets field value
func (o *GetMempoolFeePriorities200ResponseAll) SetHighPriority(v int32) {
	o.HighPriority = v
}

func (o GetMempoolFeePriorities200ResponseAll) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetMempoolFeePriorities200ResponseAll) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["no_priority"] = o.NoPriority
	toSerialize["low_priority"] = o.LowPriority
	toSerialize["medium_priority"] = o.MediumPriority
	toSerialize["high_priority"] = o.HighPriority
	return toSerialize, nil
}

func (o *GetMempoolFeePriorities200ResponseAll) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"no_priority",
		"low_priority",
		"medium_priority",
		"high_priority",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetMempoolFeePriorities200ResponseAll := _GetMempoolFeePriorities200ResponseAll{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetMempoolFeePriorities200ResponseAll)

	if err != nil {
		return err
	}

	*o = GetMempoolFeePriorities200ResponseAll(varGetMempoolFeePriorities200ResponseAll)

	return err
}

type NullableGetMempoolFeePriorities200ResponseAll struct {
	value *GetMempoolFeePriorities200ResponseAll
	isSet bool
}

func (v NullableGetMempoolFeePriorities200ResponseAll) Get() *GetMempoolFeePriorities200ResponseAll {
	return v.value
}

func (v *NullableGetMempoolFeePriorities200ResponseAll) Set(val *GetMempoolFeePriorities200ResponseAll) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMempoolFeePriorities200ResponseAll) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMempoolFeePriorities200ResponseAll) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMempoolFeePriorities200ResponseAll(val *GetMempoolFeePriorities200ResponseAll) *NullableGetMempoolFeePriorities200ResponseAll {
	return &NullableGetMempoolFeePriorities200ResponseAll{value: val, isSet: true}
}

func (v NullableGetMempoolFeePriorities200ResponseAll) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMempoolFeePriorities200ResponseAll) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


